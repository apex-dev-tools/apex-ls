name: Publish

on:
  release:
    types: [released]
  workflow_dispatch:
    inputs:
      skip_tests:
        description: "Skip tests (force release)"
        type: boolean
        required: true
        default: false
      pub_sbt:
        description: "Publish JARs"
        type: boolean
        required: true
        default: true
      pub_npm:
        description: "Publish NPM (Latest Tag)"
        type: boolean
        required: true
        default: false
      pub_mcp:
        description: "Publish MCP Server"
        type: boolean
        required: true
        default: true
      pub_mcp_npm:
        description: "Publish MCP NPM (Fixed version)"
        type: boolean
        required: true
        default: false

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history/tags

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - uses: sbt/setup-sbt@v1

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          registry-url: "https://registry.npmjs.org"

      - name: Build
        run: sbt build

      - name: Test
        if: ${{ !inputs.skip_tests }}
        run: sbt test

      - name: Publish JARs
        if: ${{ github.event_name == 'release' && github.event.action == 'released' || inputs.pub_sbt }}
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          PGP_SECRET: ${{ secrets.OSSRH_GPG_SECRET_KEY_BASE64 }}
          SONATYPE_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          SONATYPE_USERNAME: ${{ secrets.OSSRH_USERNAME }}

      - name: Publish MCP Server to Maven Central
        if: ${{ (github.event_name == 'release' && github.event.action == 'released' || inputs.pub_mcp) && (github.event_name == 'release' && github.event.action == 'released' || inputs.pub_sbt) }}
        run: sbt ci-release
        env:
          PGP_PASSPHRASE: ${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }}
          PGP_SECRET: ${{ secrets.OSSRH_GPG_SECRET_KEY_BASE64 }}
          SONATYPE_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          SONATYPE_USERNAME: ${{ secrets.OSSRH_USERNAME }}
        working-directory: mcp

      - name: Build Standalone JAR for GitHub Release
        if: ${{ github.event_name == 'release' && github.event.action == 'released' || inputs.pub_mcp }}
        run: sbt buildStandalone
        working-directory: mcp

      - name: Upload Standalone JAR to GitHub Release
        if: ${{ github.event_name == 'release' && github.event.action == 'released' }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: mcp/target/scala-2.13/apex-ls-mcp-${{ github.event.release.tag_name }}-standalone.jar
          asset_name: apex-ls-mcp-${{ github.event.release.tag_name }}-standalone.jar
          asset_content_type: application/java-archive

      # Only publishes full tagged releases to NPM
      - name: Publish NPM
        if: ${{ github.event_name == 'release' && github.event.action == 'released' || inputs.pub_npm }}
        run: |
          npm version --allow-same-version --no-git-tag-version from-git
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: js/npm

      # Publishes only the version specified in mcp-npm/package.json
      - name: Publish MCP NPM
        if: ${{ github.event_name == 'release' && github.event.action == 'released' || inputs.pub_mcp_npm }}
        run: |
          npm ci --ignore-scripts
          npm run build
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        working-directory: mcp-npm
