name: Build

on:
  push:
    branches: [master, main]
  pull_request:
    branches: ["**"]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: |
            8
            17
          cache: "sbt"

      - uses: sbt/setup-sbt@v1

      - name: Set Java environment variables
        run: |
          echo "JAVA_HOME_8=$JAVA_HOME_8_X64" >> $GITHUB_ENV
          echo "JAVA_HOME_17=$JAVA_HOME_17_X64" >> $GITHUB_ENV

      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"
          cache-dependency-path: js/npm/package-lock.json

      - name: FormatCheck
        run: sbt scalafmtCheck # Does not check test files currently
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_8 }}

      - name: Build
        run: sbt build
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_8 }}

      - name: Test
        run: sbt test
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_8 }}

      - name: Build MCP Server (Regular)
        run: |
          cd mcp
          sbt test
          sbt buildRegular
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_17 }}

      - name: Build MCP Server (Standalone)
        run: |
          cd mcp
          sbt buildStandalone
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_17 }}

      - name: Upload Standalone JAR as Artifact
        uses: actions/upload-artifact@v4
        with:
          name: apex-ls-mcp-standalone
          path: mcp/target/scala-2.13/apex-ls-mcp-*-standalone.jar

      - name: Checkout samples repo
        uses: actions/checkout@v4
        with:
          submodules: recursive
          repository: apex-dev-tools/apex-samples
          path: apex-samples
          ref: v1.4.0

      - name: Set samples env
        run: echo "SAMPLES=$GITHUB_WORKSPACE/apex-samples" >> "$GITHUB_ENV"

      - name: System Test
        shell: 'script -q -e -c "bash {0}"' # Color support
        run: npm run test-samples
        working-directory: js/npm
        env:
          JAVA_HOME: ${{ env.JAVA_HOME_8 }}
