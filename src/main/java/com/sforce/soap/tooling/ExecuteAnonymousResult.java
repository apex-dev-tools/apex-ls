package com.sforce.soap.tooling;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class ExecuteAnonymousResult implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ExecuteAnonymousResult() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : column of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean column__is_set = false;

    private int column;

    public int getColumn() {
      return column;
    }

    public void setColumn(int column) {
      this.column = column;
      column__is_set = true;
    }

    protected void setColumn(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("column", "urn:tooling.soap.sforce.com","column","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setColumn((int)__typeMapper.readInt(__in, _lookupTypeInfo("column", "urn:tooling.soap.sforce.com","column","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldColumn(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("column", "urn:tooling.soap.sforce.com","column","http://www.w3.org/2001/XMLSchema","int",1,1,true), column, column__is_set);
    }

    /**
     * element : compileProblem of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean compileProblem__is_set = false;

    private java.lang.String compileProblem;

    public java.lang.String getCompileProblem() {
      return compileProblem;
    }

    public void setCompileProblem(java.lang.String compileProblem) {
      this.compileProblem = compileProblem;
      compileProblem__is_set = true;
    }

    protected void setCompileProblem(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("compileProblem", "urn:tooling.soap.sforce.com","compileProblem","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setCompileProblem(__typeMapper.readString(__in, _lookupTypeInfo("compileProblem", "urn:tooling.soap.sforce.com","compileProblem","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldCompileProblem(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("compileProblem", "urn:tooling.soap.sforce.com","compileProblem","http://www.w3.org/2001/XMLSchema","string",1,1,true), compileProblem, compileProblem__is_set);
    }

    /**
     * element : compiled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean compiled__is_set = false;

    private boolean compiled;

    public boolean getCompiled() {
      return compiled;
    }

    public boolean isCompiled() {
      return compiled;
    }

    public void setCompiled(boolean compiled) {
      this.compiled = compiled;
      compiled__is_set = true;
    }

    protected void setCompiled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("compiled", "urn:tooling.soap.sforce.com","compiled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setCompiled(__typeMapper.readBoolean(__in, _lookupTypeInfo("compiled", "urn:tooling.soap.sforce.com","compiled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldCompiled(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("compiled", "urn:tooling.soap.sforce.com","compiled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), compiled, compiled__is_set);
    }

    /**
     * element : exceptionMessage of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean exceptionMessage__is_set = false;

    private java.lang.String exceptionMessage;

    public java.lang.String getExceptionMessage() {
      return exceptionMessage;
    }

    public void setExceptionMessage(java.lang.String exceptionMessage) {
      this.exceptionMessage = exceptionMessage;
      exceptionMessage__is_set = true;
    }

    protected void setExceptionMessage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("exceptionMessage", "urn:tooling.soap.sforce.com","exceptionMessage","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setExceptionMessage(__typeMapper.readString(__in, _lookupTypeInfo("exceptionMessage", "urn:tooling.soap.sforce.com","exceptionMessage","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldExceptionMessage(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("exceptionMessage", "urn:tooling.soap.sforce.com","exceptionMessage","http://www.w3.org/2001/XMLSchema","string",1,1,true), exceptionMessage, exceptionMessage__is_set);
    }

    /**
     * element : exceptionStackTrace of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean exceptionStackTrace__is_set = false;

    private java.lang.String exceptionStackTrace;

    public java.lang.String getExceptionStackTrace() {
      return exceptionStackTrace;
    }

    public void setExceptionStackTrace(java.lang.String exceptionStackTrace) {
      this.exceptionStackTrace = exceptionStackTrace;
      exceptionStackTrace__is_set = true;
    }

    protected void setExceptionStackTrace(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("exceptionStackTrace", "urn:tooling.soap.sforce.com","exceptionStackTrace","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setExceptionStackTrace(__typeMapper.readString(__in, _lookupTypeInfo("exceptionStackTrace", "urn:tooling.soap.sforce.com","exceptionStackTrace","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldExceptionStackTrace(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("exceptionStackTrace", "urn:tooling.soap.sforce.com","exceptionStackTrace","http://www.w3.org/2001/XMLSchema","string",1,1,true), exceptionStackTrace, exceptionStackTrace__is_set);
    }

    /**
     * element : line of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean line__is_set = false;

    private int line;

    public int getLine() {
      return line;
    }

    public void setLine(int line) {
      this.line = line;
      line__is_set = true;
    }

    protected void setLine(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("line", "urn:tooling.soap.sforce.com","line","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setLine((int)__typeMapper.readInt(__in, _lookupTypeInfo("line", "urn:tooling.soap.sforce.com","line","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldLine(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("line", "urn:tooling.soap.sforce.com","line","http://www.w3.org/2001/XMLSchema","int",1,1,true), line, line__is_set);
    }

    /**
     * element : success of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean success__is_set = false;

    private boolean success;

    public boolean getSuccess() {
      return success;
    }

    public boolean isSuccess() {
      return success;
    }

    public void setSuccess(boolean success) {
      this.success = success;
      success__is_set = true;
    }

    protected void setSuccess(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("success", "urn:tooling.soap.sforce.com","success","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setSuccess(__typeMapper.readBoolean(__in, _lookupTypeInfo("success", "urn:tooling.soap.sforce.com","success","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldSuccess(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("success", "urn:tooling.soap.sforce.com","success","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), success, success__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ExecuteAnonymousResult ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldColumn(__out, __typeMapper);
      writeFieldCompileProblem(__out, __typeMapper);
      writeFieldCompiled(__out, __typeMapper);
      writeFieldExceptionMessage(__out, __typeMapper);
      writeFieldExceptionStackTrace(__out, __typeMapper);
      writeFieldLine(__out, __typeMapper);
      writeFieldSuccess(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setColumn(__in, __typeMapper);
      setCompileProblem(__in, __typeMapper);
      setCompiled(__in, __typeMapper);
      setExceptionMessage(__in, __typeMapper);
      setExceptionStackTrace(__in, __typeMapper);
      setLine(__in, __typeMapper);
      setSuccess(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "column", column);
      toStringHelper(sb, "compileProblem", compileProblem);
      toStringHelper(sb, "compiled", compiled);
      toStringHelper(sb, "exceptionMessage", exceptionMessage);
      toStringHelper(sb, "exceptionStackTrace", exceptionStackTrace);
      toStringHelper(sb, "line", line);
      toStringHelper(sb, "success", success);
    }


}
