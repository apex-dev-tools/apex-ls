package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class FlowScreenField extends com.sforce.soap.tooling.metadata.FlowElement {

    /**
     * Constructor
     */
    public FlowScreenField() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : choiceReferences of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private boolean choiceReferences__is_set = false;

    private java.lang.String[] choiceReferences = new java.lang.String[0];

    public java.lang.String[] getChoiceReferences() {
      return choiceReferences;
    }

    public void setChoiceReferences(java.lang.String[] choiceReferences) {
      this.choiceReferences = choiceReferences;
      choiceReferences__is_set = true;
    }

    protected void setChoiceReferences(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("choiceReferences", "urn:metadata.tooling.soap.sforce.com","choiceReferences","http://www.w3.org/2001/XMLSchema","string",0,-1,true))) {
        setChoiceReferences((java.lang.String[])__typeMapper.readObject(__in, _lookupTypeInfo("choiceReferences", "urn:metadata.tooling.soap.sforce.com","choiceReferences","http://www.w3.org/2001/XMLSchema","string",0,-1,true), java.lang.String[].class));
      }
    }

    private void writeFieldChoiceReferences(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("choiceReferences", "urn:metadata.tooling.soap.sforce.com","choiceReferences","http://www.w3.org/2001/XMLSchema","string",0,-1,true), choiceReferences, choiceReferences__is_set);
    }

    /**
     * element : dataType of type {urn:tooling.soap.sforce.com}FlowDataType
     * java type: com.sforce.soap.tooling.FlowDataType
     */
    private boolean dataType__is_set = false;

    private com.sforce.soap.tooling.FlowDataType dataType;

    public com.sforce.soap.tooling.FlowDataType getDataType() {
      return dataType;
    }

    public void setDataType(com.sforce.soap.tooling.FlowDataType dataType) {
      this.dataType = dataType;
      dataType__is_set = true;
    }

    protected void setDataType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("dataType", "urn:metadata.tooling.soap.sforce.com","dataType","urn:tooling.soap.sforce.com","FlowDataType",0,1,true))) {
        setDataType((com.sforce.soap.tooling.FlowDataType)__typeMapper.readObject(__in, _lookupTypeInfo("dataType", "urn:metadata.tooling.soap.sforce.com","dataType","urn:tooling.soap.sforce.com","FlowDataType",0,1,true), com.sforce.soap.tooling.FlowDataType.class));
      }
    }

    private void writeFieldDataType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("dataType", "urn:metadata.tooling.soap.sforce.com","dataType","urn:tooling.soap.sforce.com","FlowDataType",0,1,true), dataType, dataType__is_set);
    }

    /**
     * element : defaultSelectedChoiceReference of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean defaultSelectedChoiceReference__is_set = false;

    private java.lang.String defaultSelectedChoiceReference;

    public java.lang.String getDefaultSelectedChoiceReference() {
      return defaultSelectedChoiceReference;
    }

    public void setDefaultSelectedChoiceReference(java.lang.String defaultSelectedChoiceReference) {
      this.defaultSelectedChoiceReference = defaultSelectedChoiceReference;
      defaultSelectedChoiceReference__is_set = true;
    }

    protected void setDefaultSelectedChoiceReference(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("defaultSelectedChoiceReference", "urn:metadata.tooling.soap.sforce.com","defaultSelectedChoiceReference","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDefaultSelectedChoiceReference(__typeMapper.readString(__in, _lookupTypeInfo("defaultSelectedChoiceReference", "urn:metadata.tooling.soap.sforce.com","defaultSelectedChoiceReference","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDefaultSelectedChoiceReference(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("defaultSelectedChoiceReference", "urn:metadata.tooling.soap.sforce.com","defaultSelectedChoiceReference","http://www.w3.org/2001/XMLSchema","string",0,1,true), defaultSelectedChoiceReference, defaultSelectedChoiceReference__is_set);
    }

    /**
     * element : defaultValue of type {urn:metadata.tooling.soap.sforce.com}FlowElementReferenceOrValue
     * java type: com.sforce.soap.tooling.metadata.FlowElementReferenceOrValue
     */
    private boolean defaultValue__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowElementReferenceOrValue defaultValue;

    public com.sforce.soap.tooling.metadata.FlowElementReferenceOrValue getDefaultValue() {
      return defaultValue;
    }

    public void setDefaultValue(com.sforce.soap.tooling.metadata.FlowElementReferenceOrValue defaultValue) {
      this.defaultValue = defaultValue;
      defaultValue__is_set = true;
    }

    protected void setDefaultValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("defaultValue", "urn:metadata.tooling.soap.sforce.com","defaultValue","urn:metadata.tooling.soap.sforce.com","FlowElementReferenceOrValue",0,1,true))) {
        setDefaultValue((com.sforce.soap.tooling.metadata.FlowElementReferenceOrValue)__typeMapper.readObject(__in, _lookupTypeInfo("defaultValue", "urn:metadata.tooling.soap.sforce.com","defaultValue","urn:metadata.tooling.soap.sforce.com","FlowElementReferenceOrValue",0,1,true), com.sforce.soap.tooling.metadata.FlowElementReferenceOrValue.class));
      }
    }

    private void writeFieldDefaultValue(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("defaultValue", "urn:metadata.tooling.soap.sforce.com","defaultValue","urn:metadata.tooling.soap.sforce.com","FlowElementReferenceOrValue",0,1,true), defaultValue, defaultValue__is_set);
    }

    /**
     * element : extensionName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean extensionName__is_set = false;

    private java.lang.String extensionName;

    public java.lang.String getExtensionName() {
      return extensionName;
    }

    public void setExtensionName(java.lang.String extensionName) {
      this.extensionName = extensionName;
      extensionName__is_set = true;
    }

    protected void setExtensionName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("extensionName", "urn:metadata.tooling.soap.sforce.com","extensionName","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setExtensionName(__typeMapper.readString(__in, _lookupTypeInfo("extensionName", "urn:metadata.tooling.soap.sforce.com","extensionName","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldExtensionName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("extensionName", "urn:metadata.tooling.soap.sforce.com","extensionName","http://www.w3.org/2001/XMLSchema","string",0,1,true), extensionName, extensionName__is_set);
    }

    /**
     * element : fieldText of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean fieldText__is_set = false;

    private java.lang.String fieldText;

    public java.lang.String getFieldText() {
      return fieldText;
    }

    public void setFieldText(java.lang.String fieldText) {
      this.fieldText = fieldText;
      fieldText__is_set = true;
    }

    protected void setFieldText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("fieldText", "urn:metadata.tooling.soap.sforce.com","fieldText","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setFieldText(__typeMapper.readString(__in, _lookupTypeInfo("fieldText", "urn:metadata.tooling.soap.sforce.com","fieldText","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldFieldText(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fieldText", "urn:metadata.tooling.soap.sforce.com","fieldText","http://www.w3.org/2001/XMLSchema","string",0,1,true), fieldText, fieldText__is_set);
    }

    /**
     * element : fieldType of type {urn:tooling.soap.sforce.com}FlowScreenFieldType
     * java type: com.sforce.soap.tooling.FlowScreenFieldType
     */
    private boolean fieldType__is_set = false;

    private com.sforce.soap.tooling.FlowScreenFieldType fieldType;

    public com.sforce.soap.tooling.FlowScreenFieldType getFieldType() {
      return fieldType;
    }

    public void setFieldType(com.sforce.soap.tooling.FlowScreenFieldType fieldType) {
      this.fieldType = fieldType;
      fieldType__is_set = true;
    }

    protected void setFieldType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("fieldType", "urn:metadata.tooling.soap.sforce.com","fieldType","urn:tooling.soap.sforce.com","FlowScreenFieldType",1,1,true))) {
        setFieldType((com.sforce.soap.tooling.FlowScreenFieldType)__typeMapper.readObject(__in, _lookupTypeInfo("fieldType", "urn:metadata.tooling.soap.sforce.com","fieldType","urn:tooling.soap.sforce.com","FlowScreenFieldType",1,1,true), com.sforce.soap.tooling.FlowScreenFieldType.class));
      }
    }

    private void writeFieldFieldType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fieldType", "urn:metadata.tooling.soap.sforce.com","fieldType","urn:tooling.soap.sforce.com","FlowScreenFieldType",1,1,true), fieldType, fieldType__is_set);
    }

    /**
     * element : helpText of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean helpText__is_set = false;

    private java.lang.String helpText;

    public java.lang.String getHelpText() {
      return helpText;
    }

    public void setHelpText(java.lang.String helpText) {
      this.helpText = helpText;
      helpText__is_set = true;
    }

    protected void setHelpText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("helpText", "urn:metadata.tooling.soap.sforce.com","helpText","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setHelpText(__typeMapper.readString(__in, _lookupTypeInfo("helpText", "urn:metadata.tooling.soap.sforce.com","helpText","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldHelpText(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("helpText", "urn:metadata.tooling.soap.sforce.com","helpText","http://www.w3.org/2001/XMLSchema","string",0,1,true), helpText, helpText__is_set);
    }

    /**
     * element : inputParameters of type {urn:metadata.tooling.soap.sforce.com}FlowScreenFieldInputParameter
     * java type: com.sforce.soap.tooling.metadata.FlowScreenFieldInputParameter[]
     */
    private boolean inputParameters__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowScreenFieldInputParameter[] inputParameters = new com.sforce.soap.tooling.metadata.FlowScreenFieldInputParameter[0];

    public com.sforce.soap.tooling.metadata.FlowScreenFieldInputParameter[] getInputParameters() {
      return inputParameters;
    }

    public void setInputParameters(com.sforce.soap.tooling.metadata.FlowScreenFieldInputParameter[] inputParameters) {
      this.inputParameters = inputParameters;
      inputParameters__is_set = true;
    }

    protected void setInputParameters(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("inputParameters", "urn:metadata.tooling.soap.sforce.com","inputParameters","urn:metadata.tooling.soap.sforce.com","FlowScreenFieldInputParameter",0,-1,true))) {
        setInputParameters((com.sforce.soap.tooling.metadata.FlowScreenFieldInputParameter[])__typeMapper.readObject(__in, _lookupTypeInfo("inputParameters", "urn:metadata.tooling.soap.sforce.com","inputParameters","urn:metadata.tooling.soap.sforce.com","FlowScreenFieldInputParameter",0,-1,true), com.sforce.soap.tooling.metadata.FlowScreenFieldInputParameter[].class));
      }
    }

    private void writeFieldInputParameters(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("inputParameters", "urn:metadata.tooling.soap.sforce.com","inputParameters","urn:metadata.tooling.soap.sforce.com","FlowScreenFieldInputParameter",0,-1,true), inputParameters, inputParameters__is_set);
    }

    /**
     * element : isRequired of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isRequired__is_set = false;

    private boolean isRequired;

    public boolean getIsRequired() {
      return isRequired;
    }

    public boolean isIsRequired() {
      return isRequired;
    }

    public void setIsRequired(boolean isRequired) {
      this.isRequired = isRequired;
      isRequired__is_set = true;
    }

    protected void setIsRequired(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("isRequired", "urn:metadata.tooling.soap.sforce.com","isRequired","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setIsRequired(__typeMapper.readBoolean(__in, _lookupTypeInfo("isRequired", "urn:metadata.tooling.soap.sforce.com","isRequired","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldIsRequired(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isRequired", "urn:metadata.tooling.soap.sforce.com","isRequired","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), isRequired, isRequired__is_set);
    }

    /**
     * element : isVisible of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isVisible__is_set = false;

    private boolean isVisible;

    public boolean getIsVisible() {
      return isVisible;
    }

    public boolean isIsVisible() {
      return isVisible;
    }

    public void setIsVisible(boolean isVisible) {
      this.isVisible = isVisible;
      isVisible__is_set = true;
    }

    protected void setIsVisible(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("isVisible", "urn:metadata.tooling.soap.sforce.com","isVisible","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setIsVisible(__typeMapper.readBoolean(__in, _lookupTypeInfo("isVisible", "urn:metadata.tooling.soap.sforce.com","isVisible","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldIsVisible(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isVisible", "urn:metadata.tooling.soap.sforce.com","isVisible","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), isVisible, isVisible__is_set);
    }

    /**
     * element : outputParameters of type {urn:metadata.tooling.soap.sforce.com}FlowScreenFieldOutputParameter
     * java type: com.sforce.soap.tooling.metadata.FlowScreenFieldOutputParameter[]
     */
    private boolean outputParameters__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowScreenFieldOutputParameter[] outputParameters = new com.sforce.soap.tooling.metadata.FlowScreenFieldOutputParameter[0];

    public com.sforce.soap.tooling.metadata.FlowScreenFieldOutputParameter[] getOutputParameters() {
      return outputParameters;
    }

    public void setOutputParameters(com.sforce.soap.tooling.metadata.FlowScreenFieldOutputParameter[] outputParameters) {
      this.outputParameters = outputParameters;
      outputParameters__is_set = true;
    }

    protected void setOutputParameters(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("outputParameters", "urn:metadata.tooling.soap.sforce.com","outputParameters","urn:metadata.tooling.soap.sforce.com","FlowScreenFieldOutputParameter",0,-1,true))) {
        setOutputParameters((com.sforce.soap.tooling.metadata.FlowScreenFieldOutputParameter[])__typeMapper.readObject(__in, _lookupTypeInfo("outputParameters", "urn:metadata.tooling.soap.sforce.com","outputParameters","urn:metadata.tooling.soap.sforce.com","FlowScreenFieldOutputParameter",0,-1,true), com.sforce.soap.tooling.metadata.FlowScreenFieldOutputParameter[].class));
      }
    }

    private void writeFieldOutputParameters(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("outputParameters", "urn:metadata.tooling.soap.sforce.com","outputParameters","urn:metadata.tooling.soap.sforce.com","FlowScreenFieldOutputParameter",0,-1,true), outputParameters, outputParameters__is_set);
    }

    /**
     * element : scale of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean scale__is_set = false;

    private int scale;

    public int getScale() {
      return scale;
    }

    public void setScale(int scale) {
      this.scale = scale;
      scale__is_set = true;
    }

    protected void setScale(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("scale", "urn:metadata.tooling.soap.sforce.com","scale","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setScale((int)__typeMapper.readInt(__in, _lookupTypeInfo("scale", "urn:metadata.tooling.soap.sforce.com","scale","http://www.w3.org/2001/XMLSchema","int",0,1,true), int.class));
      }
    }

    private void writeFieldScale(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("scale", "urn:metadata.tooling.soap.sforce.com","scale","http://www.w3.org/2001/XMLSchema","int",0,1,true), scale, scale__is_set);
    }

    /**
     * element : validationRule of type {urn:metadata.tooling.soap.sforce.com}FlowInputValidationRule
     * java type: com.sforce.soap.tooling.metadata.FlowInputValidationRule
     */
    private boolean validationRule__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowInputValidationRule validationRule;

    public com.sforce.soap.tooling.metadata.FlowInputValidationRule getValidationRule() {
      return validationRule;
    }

    public void setValidationRule(com.sforce.soap.tooling.metadata.FlowInputValidationRule validationRule) {
      this.validationRule = validationRule;
      validationRule__is_set = true;
    }

    protected void setValidationRule(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("validationRule", "urn:metadata.tooling.soap.sforce.com","validationRule","urn:metadata.tooling.soap.sforce.com","FlowInputValidationRule",0,1,true))) {
        setValidationRule((com.sforce.soap.tooling.metadata.FlowInputValidationRule)__typeMapper.readObject(__in, _lookupTypeInfo("validationRule", "urn:metadata.tooling.soap.sforce.com","validationRule","urn:metadata.tooling.soap.sforce.com","FlowInputValidationRule",0,1,true), com.sforce.soap.tooling.metadata.FlowInputValidationRule.class));
      }
    }

    private void writeFieldValidationRule(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("validationRule", "urn:metadata.tooling.soap.sforce.com","validationRule","urn:metadata.tooling.soap.sforce.com","FlowInputValidationRule",0,1,true), validationRule, validationRule__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "FlowScreenField");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlowScreenField ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldChoiceReferences(__out, __typeMapper);
      writeFieldDataType(__out, __typeMapper);
      writeFieldDefaultSelectedChoiceReference(__out, __typeMapper);
      writeFieldDefaultValue(__out, __typeMapper);
      writeFieldExtensionName(__out, __typeMapper);
      writeFieldFieldText(__out, __typeMapper);
      writeFieldFieldType(__out, __typeMapper);
      writeFieldHelpText(__out, __typeMapper);
      writeFieldInputParameters(__out, __typeMapper);
      writeFieldIsRequired(__out, __typeMapper);
      writeFieldIsVisible(__out, __typeMapper);
      writeFieldOutputParameters(__out, __typeMapper);
      writeFieldScale(__out, __typeMapper);
      writeFieldValidationRule(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setChoiceReferences(__in, __typeMapper);
      setDataType(__in, __typeMapper);
      setDefaultSelectedChoiceReference(__in, __typeMapper);
      setDefaultValue(__in, __typeMapper);
      setExtensionName(__in, __typeMapper);
      setFieldText(__in, __typeMapper);
      setFieldType(__in, __typeMapper);
      setHelpText(__in, __typeMapper);
      setInputParameters(__in, __typeMapper);
      setIsRequired(__in, __typeMapper);
      setIsVisible(__in, __typeMapper);
      setOutputParameters(__in, __typeMapper);
      setScale(__in, __typeMapper);
      setValidationRule(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "choiceReferences", choiceReferences);
      toStringHelper(sb, "dataType", dataType);
      toStringHelper(sb, "defaultSelectedChoiceReference", defaultSelectedChoiceReference);
      toStringHelper(sb, "defaultValue", defaultValue);
      toStringHelper(sb, "extensionName", extensionName);
      toStringHelper(sb, "fieldText", fieldText);
      toStringHelper(sb, "fieldType", fieldType);
      toStringHelper(sb, "helpText", helpText);
      toStringHelper(sb, "inputParameters", inputParameters);
      toStringHelper(sb, "isRequired", isRequired);
      toStringHelper(sb, "isVisible", isVisible);
      toStringHelper(sb, "outputParameters", outputParameters);
      toStringHelper(sb, "scale", scale);
      toStringHelper(sb, "validationRule", validationRule);
    }


}
