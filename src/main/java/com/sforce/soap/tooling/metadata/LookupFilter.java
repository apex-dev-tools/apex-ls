package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class LookupFilter implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public LookupFilter() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : active of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean active__is_set = false;

    private boolean active;

    public boolean getActive() {
      return active;
    }

    public boolean isActive() {
      return active;
    }

    public void setActive(boolean active) {
      this.active = active;
      active__is_set = true;
    }

    protected void setActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("active", "urn:metadata.tooling.soap.sforce.com","active","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setActive(__typeMapper.readBoolean(__in, _lookupTypeInfo("active", "urn:metadata.tooling.soap.sforce.com","active","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldActive(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("active", "urn:metadata.tooling.soap.sforce.com","active","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), active, active__is_set);
    }

    /**
     * element : booleanFilter of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean booleanFilter__is_set = false;

    private java.lang.String booleanFilter;

    public java.lang.String getBooleanFilter() {
      return booleanFilter;
    }

    public void setBooleanFilter(java.lang.String booleanFilter) {
      this.booleanFilter = booleanFilter;
      booleanFilter__is_set = true;
    }

    protected void setBooleanFilter(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("booleanFilter", "urn:metadata.tooling.soap.sforce.com","booleanFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setBooleanFilter(__typeMapper.readString(__in, _lookupTypeInfo("booleanFilter", "urn:metadata.tooling.soap.sforce.com","booleanFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldBooleanFilter(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("booleanFilter", "urn:metadata.tooling.soap.sforce.com","booleanFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true), booleanFilter, booleanFilter__is_set);
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDescription(__typeMapper.readString(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDescription(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), description, description__is_set);
    }

    /**
     * element : errorMessage of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean errorMessage__is_set = false;

    private java.lang.String errorMessage;

    public java.lang.String getErrorMessage() {
      return errorMessage;
    }

    public void setErrorMessage(java.lang.String errorMessage) {
      this.errorMessage = errorMessage;
      errorMessage__is_set = true;
    }

    protected void setErrorMessage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("errorMessage", "urn:metadata.tooling.soap.sforce.com","errorMessage","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setErrorMessage(__typeMapper.readString(__in, _lookupTypeInfo("errorMessage", "urn:metadata.tooling.soap.sforce.com","errorMessage","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldErrorMessage(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("errorMessage", "urn:metadata.tooling.soap.sforce.com","errorMessage","http://www.w3.org/2001/XMLSchema","string",0,1,true), errorMessage, errorMessage__is_set);
    }

    /**
     * element : filterItems of type {urn:metadata.tooling.soap.sforce.com}FilterItem
     * java type: com.sforce.soap.tooling.metadata.FilterItem[]
     */
    private boolean filterItems__is_set = false;

    private com.sforce.soap.tooling.metadata.FilterItem[] filterItems = new com.sforce.soap.tooling.metadata.FilterItem[0];

    public com.sforce.soap.tooling.metadata.FilterItem[] getFilterItems() {
      return filterItems;
    }

    public void setFilterItems(com.sforce.soap.tooling.metadata.FilterItem[] filterItems) {
      this.filterItems = filterItems;
      filterItems__is_set = true;
    }

    protected void setFilterItems(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("filterItems", "urn:metadata.tooling.soap.sforce.com","filterItems","urn:metadata.tooling.soap.sforce.com","FilterItem",0,-1,true))) {
        setFilterItems((com.sforce.soap.tooling.metadata.FilterItem[])__typeMapper.readObject(__in, _lookupTypeInfo("filterItems", "urn:metadata.tooling.soap.sforce.com","filterItems","urn:metadata.tooling.soap.sforce.com","FilterItem",0,-1,true), com.sforce.soap.tooling.metadata.FilterItem[].class));
      }
    }

    private void writeFieldFilterItems(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("filterItems", "urn:metadata.tooling.soap.sforce.com","filterItems","urn:metadata.tooling.soap.sforce.com","FilterItem",0,-1,true), filterItems, filterItems__is_set);
    }

    /**
     * element : infoMessage of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean infoMessage__is_set = false;

    private java.lang.String infoMessage;

    public java.lang.String getInfoMessage() {
      return infoMessage;
    }

    public void setInfoMessage(java.lang.String infoMessage) {
      this.infoMessage = infoMessage;
      infoMessage__is_set = true;
    }

    protected void setInfoMessage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("infoMessage", "urn:metadata.tooling.soap.sforce.com","infoMessage","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setInfoMessage(__typeMapper.readString(__in, _lookupTypeInfo("infoMessage", "urn:metadata.tooling.soap.sforce.com","infoMessage","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldInfoMessage(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("infoMessage", "urn:metadata.tooling.soap.sforce.com","infoMessage","http://www.w3.org/2001/XMLSchema","string",0,1,true), infoMessage, infoMessage__is_set);
    }

    /**
     * element : isOptional of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isOptional__is_set = false;

    private boolean isOptional;

    public boolean getIsOptional() {
      return isOptional;
    }

    public boolean isIsOptional() {
      return isOptional;
    }

    public void setIsOptional(boolean isOptional) {
      this.isOptional = isOptional;
      isOptional__is_set = true;
    }

    protected void setIsOptional(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("isOptional", "urn:metadata.tooling.soap.sforce.com","isOptional","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setIsOptional(__typeMapper.readBoolean(__in, _lookupTypeInfo("isOptional", "urn:metadata.tooling.soap.sforce.com","isOptional","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldIsOptional(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isOptional", "urn:metadata.tooling.soap.sforce.com","isOptional","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), isOptional, isOptional__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[LookupFilter ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldActive(__out, __typeMapper);
      writeFieldBooleanFilter(__out, __typeMapper);
      writeFieldDescription(__out, __typeMapper);
      writeFieldErrorMessage(__out, __typeMapper);
      writeFieldFilterItems(__out, __typeMapper);
      writeFieldInfoMessage(__out, __typeMapper);
      writeFieldIsOptional(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setActive(__in, __typeMapper);
      setBooleanFilter(__in, __typeMapper);
      setDescription(__in, __typeMapper);
      setErrorMessage(__in, __typeMapper);
      setFilterItems(__in, __typeMapper);
      setInfoMessage(__in, __typeMapper);
      setIsOptional(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "active", active);
      toStringHelper(sb, "booleanFilter", booleanFilter);
      toStringHelper(sb, "description", description);
      toStringHelper(sb, "errorMessage", errorMessage);
      toStringHelper(sb, "filterItems", filterItems);
      toStringHelper(sb, "infoMessage", infoMessage);
      toStringHelper(sb, "isOptional", isOptional);
    }


}
