package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class PlatformActionList extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public PlatformActionList() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : actionListContext of type {urn:tooling.soap.sforce.com}PlatformActionListContext
     * java type: com.sforce.soap.tooling.PlatformActionListContext
     */
    private boolean actionListContext__is_set = false;

    private com.sforce.soap.tooling.PlatformActionListContext actionListContext;

    public com.sforce.soap.tooling.PlatformActionListContext getActionListContext() {
      return actionListContext;
    }

    public void setActionListContext(com.sforce.soap.tooling.PlatformActionListContext actionListContext) {
      this.actionListContext = actionListContext;
      actionListContext__is_set = true;
    }

    protected void setActionListContext(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("actionListContext", "urn:metadata.tooling.soap.sforce.com","actionListContext","urn:tooling.soap.sforce.com","PlatformActionListContext",1,1,true))) {
        setActionListContext((com.sforce.soap.tooling.PlatformActionListContext)__typeMapper.readObject(__in, _lookupTypeInfo("actionListContext", "urn:metadata.tooling.soap.sforce.com","actionListContext","urn:tooling.soap.sforce.com","PlatformActionListContext",1,1,true), com.sforce.soap.tooling.PlatformActionListContext.class));
      }
    }

    private void writeFieldActionListContext(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("actionListContext", "urn:metadata.tooling.soap.sforce.com","actionListContext","urn:tooling.soap.sforce.com","PlatformActionListContext",1,1,true), actionListContext, actionListContext__is_set);
    }

    /**
     * element : platformActionListItems of type {urn:metadata.tooling.soap.sforce.com}PlatformActionListItem
     * java type: com.sforce.soap.tooling.metadata.PlatformActionListItem[]
     */
    private boolean platformActionListItems__is_set = false;

    private com.sforce.soap.tooling.metadata.PlatformActionListItem[] platformActionListItems = new com.sforce.soap.tooling.metadata.PlatformActionListItem[0];

    public com.sforce.soap.tooling.metadata.PlatformActionListItem[] getPlatformActionListItems() {
      return platformActionListItems;
    }

    public void setPlatformActionListItems(com.sforce.soap.tooling.metadata.PlatformActionListItem[] platformActionListItems) {
      this.platformActionListItems = platformActionListItems;
      platformActionListItems__is_set = true;
    }

    protected void setPlatformActionListItems(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("platformActionListItems", "urn:metadata.tooling.soap.sforce.com","platformActionListItems","urn:metadata.tooling.soap.sforce.com","PlatformActionListItem",0,-1,true))) {
        setPlatformActionListItems((com.sforce.soap.tooling.metadata.PlatformActionListItem[])__typeMapper.readObject(__in, _lookupTypeInfo("platformActionListItems", "urn:metadata.tooling.soap.sforce.com","platformActionListItems","urn:metadata.tooling.soap.sforce.com","PlatformActionListItem",0,-1,true), com.sforce.soap.tooling.metadata.PlatformActionListItem[].class));
      }
    }

    private void writeFieldPlatformActionListItems(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("platformActionListItems", "urn:metadata.tooling.soap.sforce.com","platformActionListItems","urn:metadata.tooling.soap.sforce.com","PlatformActionListItem",0,-1,true), platformActionListItems, platformActionListItems__is_set);
    }

    /**
     * element : relatedSourceEntity of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean relatedSourceEntity__is_set = false;

    private java.lang.String relatedSourceEntity;

    public java.lang.String getRelatedSourceEntity() {
      return relatedSourceEntity;
    }

    public void setRelatedSourceEntity(java.lang.String relatedSourceEntity) {
      this.relatedSourceEntity = relatedSourceEntity;
      relatedSourceEntity__is_set = true;
    }

    protected void setRelatedSourceEntity(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("relatedSourceEntity", "urn:metadata.tooling.soap.sforce.com","relatedSourceEntity","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setRelatedSourceEntity(__typeMapper.readString(__in, _lookupTypeInfo("relatedSourceEntity", "urn:metadata.tooling.soap.sforce.com","relatedSourceEntity","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldRelatedSourceEntity(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("relatedSourceEntity", "urn:metadata.tooling.soap.sforce.com","relatedSourceEntity","http://www.w3.org/2001/XMLSchema","string",0,1,true), relatedSourceEntity, relatedSourceEntity__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "PlatformActionList");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[PlatformActionList ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldActionListContext(__out, __typeMapper);
      writeFieldPlatformActionListItems(__out, __typeMapper);
      writeFieldRelatedSourceEntity(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setActionListContext(__in, __typeMapper);
      setPlatformActionListItems(__in, __typeMapper);
      setRelatedSourceEntity(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "actionListContext", actionListContext);
      toStringHelper(sb, "platformActionListItems", platformActionListItems);
      toStringHelper(sb, "relatedSourceEntity", relatedSourceEntity);
    }


}
