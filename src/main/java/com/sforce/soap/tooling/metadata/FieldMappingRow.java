package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class FieldMappingRow implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public FieldMappingRow() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : SObjectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean SObjectType__is_set = false;

    private java.lang.String SObjectType;

    public java.lang.String getSObjectType() {
      return SObjectType;
    }

    public void setSObjectType(java.lang.String SObjectType) {
      this.SObjectType = SObjectType;
      SObjectType__is_set = true;
    }

    protected void setSObjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("SObjectType", "urn:metadata.tooling.soap.sforce.com","SObjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setSObjectType(__typeMapper.readString(__in, _lookupTypeInfo("SObjectType", "urn:metadata.tooling.soap.sforce.com","SObjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSObjectType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("SObjectType", "urn:metadata.tooling.soap.sforce.com","SObjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true), SObjectType, SObjectType__is_set);
    }

    /**
     * element : fieldMappingFields of type {urn:metadata.tooling.soap.sforce.com}FieldMappingField
     * java type: com.sforce.soap.tooling.metadata.FieldMappingField[]
     */
    private boolean fieldMappingFields__is_set = false;

    private com.sforce.soap.tooling.metadata.FieldMappingField[] fieldMappingFields = new com.sforce.soap.tooling.metadata.FieldMappingField[0];

    public com.sforce.soap.tooling.metadata.FieldMappingField[] getFieldMappingFields() {
      return fieldMappingFields;
    }

    public void setFieldMappingFields(com.sforce.soap.tooling.metadata.FieldMappingField[] fieldMappingFields) {
      this.fieldMappingFields = fieldMappingFields;
      fieldMappingFields__is_set = true;
    }

    protected void setFieldMappingFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("fieldMappingFields", "urn:metadata.tooling.soap.sforce.com","fieldMappingFields","urn:metadata.tooling.soap.sforce.com","FieldMappingField",0,-1,true))) {
        setFieldMappingFields((com.sforce.soap.tooling.metadata.FieldMappingField[])__typeMapper.readObject(__in, _lookupTypeInfo("fieldMappingFields", "urn:metadata.tooling.soap.sforce.com","fieldMappingFields","urn:metadata.tooling.soap.sforce.com","FieldMappingField",0,-1,true), com.sforce.soap.tooling.metadata.FieldMappingField[].class));
      }
    }

    private void writeFieldFieldMappingFields(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fieldMappingFields", "urn:metadata.tooling.soap.sforce.com","fieldMappingFields","urn:metadata.tooling.soap.sforce.com","FieldMappingField",0,-1,true), fieldMappingFields, fieldMappingFields__is_set);
    }

    /**
     * element : fieldName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean fieldName__is_set = false;

    private java.lang.String fieldName;

    public java.lang.String getFieldName() {
      return fieldName;
    }

    public void setFieldName(java.lang.String fieldName) {
      this.fieldName = fieldName;
      fieldName__is_set = true;
    }

    protected void setFieldName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("fieldName", "urn:metadata.tooling.soap.sforce.com","fieldName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setFieldName(__typeMapper.readString(__in, _lookupTypeInfo("fieldName", "urn:metadata.tooling.soap.sforce.com","fieldName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldFieldName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fieldName", "urn:metadata.tooling.soap.sforce.com","fieldName","http://www.w3.org/2001/XMLSchema","string",1,1,true), fieldName, fieldName__is_set);
    }

    /**
     * element : mappingOperation of type {urn:tooling.soap.sforce.com}MappingOperation
     * java type: com.sforce.soap.tooling.MappingOperation
     */
    private boolean mappingOperation__is_set = false;

    private com.sforce.soap.tooling.MappingOperation mappingOperation;

    public com.sforce.soap.tooling.MappingOperation getMappingOperation() {
      return mappingOperation;
    }

    public void setMappingOperation(com.sforce.soap.tooling.MappingOperation mappingOperation) {
      this.mappingOperation = mappingOperation;
      mappingOperation__is_set = true;
    }

    protected void setMappingOperation(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("mappingOperation", "urn:metadata.tooling.soap.sforce.com","mappingOperation","urn:tooling.soap.sforce.com","MappingOperation",1,1,true))) {
        setMappingOperation((com.sforce.soap.tooling.MappingOperation)__typeMapper.readObject(__in, _lookupTypeInfo("mappingOperation", "urn:metadata.tooling.soap.sforce.com","mappingOperation","urn:tooling.soap.sforce.com","MappingOperation",1,1,true), com.sforce.soap.tooling.MappingOperation.class));
      }
    }

    private void writeFieldMappingOperation(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("mappingOperation", "urn:metadata.tooling.soap.sforce.com","mappingOperation","urn:tooling.soap.sforce.com","MappingOperation",1,1,true), mappingOperation, mappingOperation__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FieldMappingRow ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldSObjectType(__out, __typeMapper);
      writeFieldFieldMappingFields(__out, __typeMapper);
      writeFieldFieldName(__out, __typeMapper);
      writeFieldMappingOperation(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setSObjectType(__in, __typeMapper);
      setFieldMappingFields(__in, __typeMapper);
      setFieldName(__in, __typeMapper);
      setMappingOperation(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "SObjectType", SObjectType);
      toStringHelper(sb, "fieldMappingFields", fieldMappingFields);
      toStringHelper(sb, "fieldName", fieldName);
      toStringHelper(sb, "mappingOperation", mappingOperation);
    }


}
