package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class Certificate extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public Certificate() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : caSigned of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean caSigned__is_set = false;

    private boolean caSigned;

    public boolean getCaSigned() {
      return caSigned;
    }

    public boolean isCaSigned() {
      return caSigned;
    }

    public void setCaSigned(boolean caSigned) {
      this.caSigned = caSigned;
      caSigned__is_set = true;
    }

    protected void setCaSigned(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("caSigned", "urn:metadata.tooling.soap.sforce.com","caSigned","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setCaSigned(__typeMapper.readBoolean(__in, _lookupTypeInfo("caSigned", "urn:metadata.tooling.soap.sforce.com","caSigned","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldCaSigned(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("caSigned", "urn:metadata.tooling.soap.sforce.com","caSigned","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), caSigned, caSigned__is_set);
    }

    /**
     * element : encryptedWithPlatformEncryption of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private boolean encryptedWithPlatformEncryption__is_set = false;

    private java.lang.Boolean encryptedWithPlatformEncryption;

    public java.lang.Boolean getEncryptedWithPlatformEncryption() {
      return encryptedWithPlatformEncryption;
    }

    public void setEncryptedWithPlatformEncryption(java.lang.Boolean encryptedWithPlatformEncryption) {
      this.encryptedWithPlatformEncryption = encryptedWithPlatformEncryption;
      encryptedWithPlatformEncryption__is_set = true;
    }

    protected void setEncryptedWithPlatformEncryption(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("encryptedWithPlatformEncryption", "urn:metadata.tooling.soap.sforce.com","encryptedWithPlatformEncryption","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEncryptedWithPlatformEncryption((java.lang.Boolean)__typeMapper.readObject(__in, _lookupTypeInfo("encryptedWithPlatformEncryption", "urn:metadata.tooling.soap.sforce.com","encryptedWithPlatformEncryption","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), java.lang.Boolean.class));
      }
    }

    private void writeFieldEncryptedWithPlatformEncryption(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("encryptedWithPlatformEncryption", "urn:metadata.tooling.soap.sforce.com","encryptedWithPlatformEncryption","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), encryptedWithPlatformEncryption, encryptedWithPlatformEncryption__is_set);
    }

    /**
     * element : expirationDate of type {http://www.w3.org/2001/XMLSchema}dateTime
     * java type: java.util.Calendar
     */
    private boolean expirationDate__is_set = false;

    private java.util.Calendar expirationDate;

    public java.util.Calendar getExpirationDate() {
      return expirationDate;
    }

    public void setExpirationDate(java.util.Calendar expirationDate) {
      this.expirationDate = expirationDate;
      expirationDate__is_set = true;
    }

    protected void setExpirationDate(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("expirationDate", "urn:metadata.tooling.soap.sforce.com","expirationDate","http://www.w3.org/2001/XMLSchema","dateTime",0,1,true))) {
        setExpirationDate((java.util.Calendar)__typeMapper.readObject(__in, _lookupTypeInfo("expirationDate", "urn:metadata.tooling.soap.sforce.com","expirationDate","http://www.w3.org/2001/XMLSchema","dateTime",0,1,true), java.util.Calendar.class));
      }
    }

    private void writeFieldExpirationDate(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("expirationDate", "urn:metadata.tooling.soap.sforce.com","expirationDate","http://www.w3.org/2001/XMLSchema","dateTime",0,1,true), expirationDate, expirationDate__is_set);
    }

    /**
     * element : keySize of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean keySize__is_set = false;

    private int keySize;

    public int getKeySize() {
      return keySize;
    }

    public void setKeySize(int keySize) {
      this.keySize = keySize;
      keySize__is_set = true;
    }

    protected void setKeySize(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("keySize", "urn:metadata.tooling.soap.sforce.com","keySize","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setKeySize((int)__typeMapper.readInt(__in, _lookupTypeInfo("keySize", "urn:metadata.tooling.soap.sforce.com","keySize","http://www.w3.org/2001/XMLSchema","int",0,1,true), int.class));
      }
    }

    private void writeFieldKeySize(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("keySize", "urn:metadata.tooling.soap.sforce.com","keySize","http://www.w3.org/2001/XMLSchema","int",0,1,true), keySize, keySize__is_set);
    }

    /**
     * element : masterLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean masterLabel__is_set = false;

    private java.lang.String masterLabel;

    public java.lang.String getMasterLabel() {
      return masterLabel;
    }

    public void setMasterLabel(java.lang.String masterLabel) {
      this.masterLabel = masterLabel;
      masterLabel__is_set = true;
    }

    protected void setMasterLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setMasterLabel(__typeMapper.readString(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMasterLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true), masterLabel, masterLabel__is_set);
    }

    /**
     * element : privateKeyExportable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private boolean privateKeyExportable__is_set = false;

    private java.lang.Boolean privateKeyExportable;

    public java.lang.Boolean getPrivateKeyExportable() {
      return privateKeyExportable;
    }

    public void setPrivateKeyExportable(java.lang.Boolean privateKeyExportable) {
      this.privateKeyExportable = privateKeyExportable;
      privateKeyExportable__is_set = true;
    }

    protected void setPrivateKeyExportable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("privateKeyExportable", "urn:metadata.tooling.soap.sforce.com","privateKeyExportable","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setPrivateKeyExportable((java.lang.Boolean)__typeMapper.readObject(__in, _lookupTypeInfo("privateKeyExportable", "urn:metadata.tooling.soap.sforce.com","privateKeyExportable","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), java.lang.Boolean.class));
      }
    }

    private void writeFieldPrivateKeyExportable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("privateKeyExportable", "urn:metadata.tooling.soap.sforce.com","privateKeyExportable","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), privateKeyExportable, privateKeyExportable__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "Certificate");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[Certificate ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldCaSigned(__out, __typeMapper);
      writeFieldEncryptedWithPlatformEncryption(__out, __typeMapper);
      writeFieldExpirationDate(__out, __typeMapper);
      writeFieldKeySize(__out, __typeMapper);
      writeFieldMasterLabel(__out, __typeMapper);
      writeFieldPrivateKeyExportable(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setCaSigned(__in, __typeMapper);
      setEncryptedWithPlatformEncryption(__in, __typeMapper);
      setExpirationDate(__in, __typeMapper);
      setKeySize(__in, __typeMapper);
      setMasterLabel(__in, __typeMapper);
      setPrivateKeyExportable(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "caSigned", caSigned);
      toStringHelper(sb, "encryptedWithPlatformEncryption", encryptedWithPlatformEncryption);
      toStringHelper(sb, "expirationDate", expirationDate);
      toStringHelper(sb, "keySize", keySize);
      toStringHelper(sb, "masterLabel", masterLabel);
      toStringHelper(sb, "privateKeyExportable", privateKeyExportable);
    }


}
