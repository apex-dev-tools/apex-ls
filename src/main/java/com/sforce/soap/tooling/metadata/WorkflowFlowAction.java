package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class WorkflowFlowAction extends com.sforce.soap.tooling.metadata.WorkflowAction {

    /**
     * Constructor
     */
    public WorkflowFlowAction() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDescription(__typeMapper.readString(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDescription(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), description, description__is_set);
    }

    /**
     * element : flow of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean flow__is_set = false;

    private java.lang.String flow;

    public java.lang.String getFlow() {
      return flow;
    }

    public void setFlow(java.lang.String flow) {
      this.flow = flow;
      flow__is_set = true;
    }

    protected void setFlow(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("flow", "urn:metadata.tooling.soap.sforce.com","flow","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setFlow(__typeMapper.readString(__in, _lookupTypeInfo("flow", "urn:metadata.tooling.soap.sforce.com","flow","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldFlow(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("flow", "urn:metadata.tooling.soap.sforce.com","flow","http://www.w3.org/2001/XMLSchema","string",1,1,true), flow, flow__is_set);
    }

    /**
     * element : flowInputs of type {urn:metadata.tooling.soap.sforce.com}WorkflowFlowActionParameter
     * java type: com.sforce.soap.tooling.metadata.WorkflowFlowActionParameter[]
     */
    private boolean flowInputs__is_set = false;

    private com.sforce.soap.tooling.metadata.WorkflowFlowActionParameter[] flowInputs = new com.sforce.soap.tooling.metadata.WorkflowFlowActionParameter[0];

    public com.sforce.soap.tooling.metadata.WorkflowFlowActionParameter[] getFlowInputs() {
      return flowInputs;
    }

    public void setFlowInputs(com.sforce.soap.tooling.metadata.WorkflowFlowActionParameter[] flowInputs) {
      this.flowInputs = flowInputs;
      flowInputs__is_set = true;
    }

    protected void setFlowInputs(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("flowInputs", "urn:metadata.tooling.soap.sforce.com","flowInputs","urn:metadata.tooling.soap.sforce.com","WorkflowFlowActionParameter",0,-1,true))) {
        setFlowInputs((com.sforce.soap.tooling.metadata.WorkflowFlowActionParameter[])__typeMapper.readObject(__in, _lookupTypeInfo("flowInputs", "urn:metadata.tooling.soap.sforce.com","flowInputs","urn:metadata.tooling.soap.sforce.com","WorkflowFlowActionParameter",0,-1,true), com.sforce.soap.tooling.metadata.WorkflowFlowActionParameter[].class));
      }
    }

    private void writeFieldFlowInputs(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("flowInputs", "urn:metadata.tooling.soap.sforce.com","flowInputs","urn:metadata.tooling.soap.sforce.com","WorkflowFlowActionParameter",0,-1,true), flowInputs, flowInputs__is_set);
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("label", "urn:metadata.tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setLabel(__typeMapper.readString(__in, _lookupTypeInfo("label", "urn:metadata.tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("label", "urn:metadata.tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true), label, label__is_set);
    }

    /**
     * element : language of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean language__is_set = false;

    private java.lang.String language;

    public java.lang.String getLanguage() {
      return language;
    }

    public void setLanguage(java.lang.String language) {
      this.language = language;
      language__is_set = true;
    }

    protected void setLanguage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("language", "urn:metadata.tooling.soap.sforce.com","language","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setLanguage(__typeMapper.readString(__in, _lookupTypeInfo("language", "urn:metadata.tooling.soap.sforce.com","language","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLanguage(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("language", "urn:metadata.tooling.soap.sforce.com","language","http://www.w3.org/2001/XMLSchema","string",0,1,true), language, language__is_set);
    }

    /**
     * element : protected of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean _protected__is_set = false;

    private boolean _protected;

    public boolean getProtected() {
      return _protected;
    }

    public boolean isProtected() {
      return _protected;
    }

    public void setProtected(boolean _protected) {
      this._protected = _protected;
      _protected__is_set = true;
    }

    protected void setProtected(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("_protected", "urn:metadata.tooling.soap.sforce.com","protected","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setProtected(__typeMapper.readBoolean(__in, _lookupTypeInfo("_protected", "urn:metadata.tooling.soap.sforce.com","protected","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldProtected(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("_protected", "urn:metadata.tooling.soap.sforce.com","protected","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), _protected, _protected__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "WorkflowFlowAction");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[WorkflowFlowAction ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldDescription(__out, __typeMapper);
      writeFieldFlow(__out, __typeMapper);
      writeFieldFlowInputs(__out, __typeMapper);
      writeFieldLabel(__out, __typeMapper);
      writeFieldLanguage(__out, __typeMapper);
      writeFieldProtected(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setDescription(__in, __typeMapper);
      setFlow(__in, __typeMapper);
      setFlowInputs(__in, __typeMapper);
      setLabel(__in, __typeMapper);
      setLanguage(__in, __typeMapper);
      setProtected(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "description", description);
      toStringHelper(sb, "flow", flow);
      toStringHelper(sb, "flowInputs", flowInputs);
      toStringHelper(sb, "label", label);
      toStringHelper(sb, "language", language);
      toStringHelper(sb, "_protected", _protected);
    }


}
