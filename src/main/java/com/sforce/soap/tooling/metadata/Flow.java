package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class Flow extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public Flow() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : actionCalls of type {urn:metadata.tooling.soap.sforce.com}FlowActionCall
     * java type: com.sforce.soap.tooling.metadata.FlowActionCall[]
     */
    private boolean actionCalls__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowActionCall[] actionCalls = new com.sforce.soap.tooling.metadata.FlowActionCall[0];

    public com.sforce.soap.tooling.metadata.FlowActionCall[] getActionCalls() {
      return actionCalls;
    }

    public void setActionCalls(com.sforce.soap.tooling.metadata.FlowActionCall[] actionCalls) {
      this.actionCalls = actionCalls;
      actionCalls__is_set = true;
    }

    protected void setActionCalls(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("actionCalls", "urn:metadata.tooling.soap.sforce.com","actionCalls","urn:metadata.tooling.soap.sforce.com","FlowActionCall",0,-1,true))) {
        setActionCalls((com.sforce.soap.tooling.metadata.FlowActionCall[])__typeMapper.readObject(__in, _lookupTypeInfo("actionCalls", "urn:metadata.tooling.soap.sforce.com","actionCalls","urn:metadata.tooling.soap.sforce.com","FlowActionCall",0,-1,true), com.sforce.soap.tooling.metadata.FlowActionCall[].class));
      }
    }

    private void writeFieldActionCalls(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("actionCalls", "urn:metadata.tooling.soap.sforce.com","actionCalls","urn:metadata.tooling.soap.sforce.com","FlowActionCall",0,-1,true), actionCalls, actionCalls__is_set);
    }

    /**
     * element : apexPluginCalls of type {urn:metadata.tooling.soap.sforce.com}FlowApexPluginCall
     * java type: com.sforce.soap.tooling.metadata.FlowApexPluginCall[]
     */
    private boolean apexPluginCalls__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowApexPluginCall[] apexPluginCalls = new com.sforce.soap.tooling.metadata.FlowApexPluginCall[0];

    public com.sforce.soap.tooling.metadata.FlowApexPluginCall[] getApexPluginCalls() {
      return apexPluginCalls;
    }

    public void setApexPluginCalls(com.sforce.soap.tooling.metadata.FlowApexPluginCall[] apexPluginCalls) {
      this.apexPluginCalls = apexPluginCalls;
      apexPluginCalls__is_set = true;
    }

    protected void setApexPluginCalls(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("apexPluginCalls", "urn:metadata.tooling.soap.sforce.com","apexPluginCalls","urn:metadata.tooling.soap.sforce.com","FlowApexPluginCall",0,-1,true))) {
        setApexPluginCalls((com.sforce.soap.tooling.metadata.FlowApexPluginCall[])__typeMapper.readObject(__in, _lookupTypeInfo("apexPluginCalls", "urn:metadata.tooling.soap.sforce.com","apexPluginCalls","urn:metadata.tooling.soap.sforce.com","FlowApexPluginCall",0,-1,true), com.sforce.soap.tooling.metadata.FlowApexPluginCall[].class));
      }
    }

    private void writeFieldApexPluginCalls(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("apexPluginCalls", "urn:metadata.tooling.soap.sforce.com","apexPluginCalls","urn:metadata.tooling.soap.sforce.com","FlowApexPluginCall",0,-1,true), apexPluginCalls, apexPluginCalls__is_set);
    }

    /**
     * element : assignments of type {urn:metadata.tooling.soap.sforce.com}FlowAssignment
     * java type: com.sforce.soap.tooling.metadata.FlowAssignment[]
     */
    private boolean assignments__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowAssignment[] assignments = new com.sforce.soap.tooling.metadata.FlowAssignment[0];

    public com.sforce.soap.tooling.metadata.FlowAssignment[] getAssignments() {
      return assignments;
    }

    public void setAssignments(com.sforce.soap.tooling.metadata.FlowAssignment[] assignments) {
      this.assignments = assignments;
      assignments__is_set = true;
    }

    protected void setAssignments(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("assignments", "urn:metadata.tooling.soap.sforce.com","assignments","urn:metadata.tooling.soap.sforce.com","FlowAssignment",0,-1,true))) {
        setAssignments((com.sforce.soap.tooling.metadata.FlowAssignment[])__typeMapper.readObject(__in, _lookupTypeInfo("assignments", "urn:metadata.tooling.soap.sforce.com","assignments","urn:metadata.tooling.soap.sforce.com","FlowAssignment",0,-1,true), com.sforce.soap.tooling.metadata.FlowAssignment[].class));
      }
    }

    private void writeFieldAssignments(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("assignments", "urn:metadata.tooling.soap.sforce.com","assignments","urn:metadata.tooling.soap.sforce.com","FlowAssignment",0,-1,true), assignments, assignments__is_set);
    }

    /**
     * element : choices of type {urn:metadata.tooling.soap.sforce.com}FlowChoice
     * java type: com.sforce.soap.tooling.metadata.FlowChoice[]
     */
    private boolean choices__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowChoice[] choices = new com.sforce.soap.tooling.metadata.FlowChoice[0];

    public com.sforce.soap.tooling.metadata.FlowChoice[] getChoices() {
      return choices;
    }

    public void setChoices(com.sforce.soap.tooling.metadata.FlowChoice[] choices) {
      this.choices = choices;
      choices__is_set = true;
    }

    protected void setChoices(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("choices", "urn:metadata.tooling.soap.sforce.com","choices","urn:metadata.tooling.soap.sforce.com","FlowChoice",0,-1,true))) {
        setChoices((com.sforce.soap.tooling.metadata.FlowChoice[])__typeMapper.readObject(__in, _lookupTypeInfo("choices", "urn:metadata.tooling.soap.sforce.com","choices","urn:metadata.tooling.soap.sforce.com","FlowChoice",0,-1,true), com.sforce.soap.tooling.metadata.FlowChoice[].class));
      }
    }

    private void writeFieldChoices(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("choices", "urn:metadata.tooling.soap.sforce.com","choices","urn:metadata.tooling.soap.sforce.com","FlowChoice",0,-1,true), choices, choices__is_set);
    }

    /**
     * element : constants of type {urn:metadata.tooling.soap.sforce.com}FlowConstant
     * java type: com.sforce.soap.tooling.metadata.FlowConstant[]
     */
    private boolean constants__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowConstant[] constants = new com.sforce.soap.tooling.metadata.FlowConstant[0];

    public com.sforce.soap.tooling.metadata.FlowConstant[] getConstants() {
      return constants;
    }

    public void setConstants(com.sforce.soap.tooling.metadata.FlowConstant[] constants) {
      this.constants = constants;
      constants__is_set = true;
    }

    protected void setConstants(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("constants", "urn:metadata.tooling.soap.sforce.com","constants","urn:metadata.tooling.soap.sforce.com","FlowConstant",0,-1,true))) {
        setConstants((com.sforce.soap.tooling.metadata.FlowConstant[])__typeMapper.readObject(__in, _lookupTypeInfo("constants", "urn:metadata.tooling.soap.sforce.com","constants","urn:metadata.tooling.soap.sforce.com","FlowConstant",0,-1,true), com.sforce.soap.tooling.metadata.FlowConstant[].class));
      }
    }

    private void writeFieldConstants(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("constants", "urn:metadata.tooling.soap.sforce.com","constants","urn:metadata.tooling.soap.sforce.com","FlowConstant",0,-1,true), constants, constants__is_set);
    }

    /**
     * element : decisions of type {urn:metadata.tooling.soap.sforce.com}FlowDecision
     * java type: com.sforce.soap.tooling.metadata.FlowDecision[]
     */
    private boolean decisions__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowDecision[] decisions = new com.sforce.soap.tooling.metadata.FlowDecision[0];

    public com.sforce.soap.tooling.metadata.FlowDecision[] getDecisions() {
      return decisions;
    }

    public void setDecisions(com.sforce.soap.tooling.metadata.FlowDecision[] decisions) {
      this.decisions = decisions;
      decisions__is_set = true;
    }

    protected void setDecisions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("decisions", "urn:metadata.tooling.soap.sforce.com","decisions","urn:metadata.tooling.soap.sforce.com","FlowDecision",0,-1,true))) {
        setDecisions((com.sforce.soap.tooling.metadata.FlowDecision[])__typeMapper.readObject(__in, _lookupTypeInfo("decisions", "urn:metadata.tooling.soap.sforce.com","decisions","urn:metadata.tooling.soap.sforce.com","FlowDecision",0,-1,true), com.sforce.soap.tooling.metadata.FlowDecision[].class));
      }
    }

    private void writeFieldDecisions(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("decisions", "urn:metadata.tooling.soap.sforce.com","decisions","urn:metadata.tooling.soap.sforce.com","FlowDecision",0,-1,true), decisions, decisions__is_set);
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDescription(__typeMapper.readString(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDescription(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), description, description__is_set);
    }

    /**
     * element : dynamicChoiceSets of type {urn:metadata.tooling.soap.sforce.com}FlowDynamicChoiceSet
     * java type: com.sforce.soap.tooling.metadata.FlowDynamicChoiceSet[]
     */
    private boolean dynamicChoiceSets__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowDynamicChoiceSet[] dynamicChoiceSets = new com.sforce.soap.tooling.metadata.FlowDynamicChoiceSet[0];

    public com.sforce.soap.tooling.metadata.FlowDynamicChoiceSet[] getDynamicChoiceSets() {
      return dynamicChoiceSets;
    }

    public void setDynamicChoiceSets(com.sforce.soap.tooling.metadata.FlowDynamicChoiceSet[] dynamicChoiceSets) {
      this.dynamicChoiceSets = dynamicChoiceSets;
      dynamicChoiceSets__is_set = true;
    }

    protected void setDynamicChoiceSets(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("dynamicChoiceSets", "urn:metadata.tooling.soap.sforce.com","dynamicChoiceSets","urn:metadata.tooling.soap.sforce.com","FlowDynamicChoiceSet",0,-1,true))) {
        setDynamicChoiceSets((com.sforce.soap.tooling.metadata.FlowDynamicChoiceSet[])__typeMapper.readObject(__in, _lookupTypeInfo("dynamicChoiceSets", "urn:metadata.tooling.soap.sforce.com","dynamicChoiceSets","urn:metadata.tooling.soap.sforce.com","FlowDynamicChoiceSet",0,-1,true), com.sforce.soap.tooling.metadata.FlowDynamicChoiceSet[].class));
      }
    }

    private void writeFieldDynamicChoiceSets(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("dynamicChoiceSets", "urn:metadata.tooling.soap.sforce.com","dynamicChoiceSets","urn:metadata.tooling.soap.sforce.com","FlowDynamicChoiceSet",0,-1,true), dynamicChoiceSets, dynamicChoiceSets__is_set);
    }

    /**
     * element : formulas of type {urn:metadata.tooling.soap.sforce.com}FlowFormula
     * java type: com.sforce.soap.tooling.metadata.FlowFormula[]
     */
    private boolean formulas__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowFormula[] formulas = new com.sforce.soap.tooling.metadata.FlowFormula[0];

    public com.sforce.soap.tooling.metadata.FlowFormula[] getFormulas() {
      return formulas;
    }

    public void setFormulas(com.sforce.soap.tooling.metadata.FlowFormula[] formulas) {
      this.formulas = formulas;
      formulas__is_set = true;
    }

    protected void setFormulas(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("formulas", "urn:metadata.tooling.soap.sforce.com","formulas","urn:metadata.tooling.soap.sforce.com","FlowFormula",0,-1,true))) {
        setFormulas((com.sforce.soap.tooling.metadata.FlowFormula[])__typeMapper.readObject(__in, _lookupTypeInfo("formulas", "urn:metadata.tooling.soap.sforce.com","formulas","urn:metadata.tooling.soap.sforce.com","FlowFormula",0,-1,true), com.sforce.soap.tooling.metadata.FlowFormula[].class));
      }
    }

    private void writeFieldFormulas(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("formulas", "urn:metadata.tooling.soap.sforce.com","formulas","urn:metadata.tooling.soap.sforce.com","FlowFormula",0,-1,true), formulas, formulas__is_set);
    }

    /**
     * element : interviewLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean interviewLabel__is_set = false;

    private java.lang.String interviewLabel;

    public java.lang.String getInterviewLabel() {
      return interviewLabel;
    }

    public void setInterviewLabel(java.lang.String interviewLabel) {
      this.interviewLabel = interviewLabel;
      interviewLabel__is_set = true;
    }

    protected void setInterviewLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("interviewLabel", "urn:metadata.tooling.soap.sforce.com","interviewLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setInterviewLabel(__typeMapper.readString(__in, _lookupTypeInfo("interviewLabel", "urn:metadata.tooling.soap.sforce.com","interviewLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldInterviewLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("interviewLabel", "urn:metadata.tooling.soap.sforce.com","interviewLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true), interviewLabel, interviewLabel__is_set);
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("label", "urn:metadata.tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setLabel(__typeMapper.readString(__in, _lookupTypeInfo("label", "urn:metadata.tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("label", "urn:metadata.tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true), label, label__is_set);
    }

    /**
     * element : loops of type {urn:metadata.tooling.soap.sforce.com}FlowLoop
     * java type: com.sforce.soap.tooling.metadata.FlowLoop[]
     */
    private boolean loops__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowLoop[] loops = new com.sforce.soap.tooling.metadata.FlowLoop[0];

    public com.sforce.soap.tooling.metadata.FlowLoop[] getLoops() {
      return loops;
    }

    public void setLoops(com.sforce.soap.tooling.metadata.FlowLoop[] loops) {
      this.loops = loops;
      loops__is_set = true;
    }

    protected void setLoops(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("loops", "urn:metadata.tooling.soap.sforce.com","loops","urn:metadata.tooling.soap.sforce.com","FlowLoop",0,-1,true))) {
        setLoops((com.sforce.soap.tooling.metadata.FlowLoop[])__typeMapper.readObject(__in, _lookupTypeInfo("loops", "urn:metadata.tooling.soap.sforce.com","loops","urn:metadata.tooling.soap.sforce.com","FlowLoop",0,-1,true), com.sforce.soap.tooling.metadata.FlowLoop[].class));
      }
    }

    private void writeFieldLoops(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("loops", "urn:metadata.tooling.soap.sforce.com","loops","urn:metadata.tooling.soap.sforce.com","FlowLoop",0,-1,true), loops, loops__is_set);
    }

    /**
     * element : processMetadataValues of type {urn:metadata.tooling.soap.sforce.com}FlowMetadataValue
     * java type: com.sforce.soap.tooling.metadata.FlowMetadataValue[]
     */
    private boolean processMetadataValues__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowMetadataValue[] processMetadataValues = new com.sforce.soap.tooling.metadata.FlowMetadataValue[0];

    public com.sforce.soap.tooling.metadata.FlowMetadataValue[] getProcessMetadataValues() {
      return processMetadataValues;
    }

    public void setProcessMetadataValues(com.sforce.soap.tooling.metadata.FlowMetadataValue[] processMetadataValues) {
      this.processMetadataValues = processMetadataValues;
      processMetadataValues__is_set = true;
    }

    protected void setProcessMetadataValues(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("processMetadataValues", "urn:metadata.tooling.soap.sforce.com","processMetadataValues","urn:metadata.tooling.soap.sforce.com","FlowMetadataValue",0,-1,true))) {
        setProcessMetadataValues((com.sforce.soap.tooling.metadata.FlowMetadataValue[])__typeMapper.readObject(__in, _lookupTypeInfo("processMetadataValues", "urn:metadata.tooling.soap.sforce.com","processMetadataValues","urn:metadata.tooling.soap.sforce.com","FlowMetadataValue",0,-1,true), com.sforce.soap.tooling.metadata.FlowMetadataValue[].class));
      }
    }

    private void writeFieldProcessMetadataValues(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("processMetadataValues", "urn:metadata.tooling.soap.sforce.com","processMetadataValues","urn:metadata.tooling.soap.sforce.com","FlowMetadataValue",0,-1,true), processMetadataValues, processMetadataValues__is_set);
    }

    /**
     * element : processType of type {urn:tooling.soap.sforce.com}FlowProcessType
     * java type: com.sforce.soap.tooling.FlowProcessType
     */
    private boolean processType__is_set = false;

    private com.sforce.soap.tooling.FlowProcessType processType;

    public com.sforce.soap.tooling.FlowProcessType getProcessType() {
      return processType;
    }

    public void setProcessType(com.sforce.soap.tooling.FlowProcessType processType) {
      this.processType = processType;
      processType__is_set = true;
    }

    protected void setProcessType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("processType", "urn:metadata.tooling.soap.sforce.com","processType","urn:tooling.soap.sforce.com","FlowProcessType",0,1,true))) {
        setProcessType((com.sforce.soap.tooling.FlowProcessType)__typeMapper.readObject(__in, _lookupTypeInfo("processType", "urn:metadata.tooling.soap.sforce.com","processType","urn:tooling.soap.sforce.com","FlowProcessType",0,1,true), com.sforce.soap.tooling.FlowProcessType.class));
      }
    }

    private void writeFieldProcessType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("processType", "urn:metadata.tooling.soap.sforce.com","processType","urn:tooling.soap.sforce.com","FlowProcessType",0,1,true), processType, processType__is_set);
    }

    /**
     * element : recordCreates of type {urn:metadata.tooling.soap.sforce.com}FlowRecordCreate
     * java type: com.sforce.soap.tooling.metadata.FlowRecordCreate[]
     */
    private boolean recordCreates__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowRecordCreate[] recordCreates = new com.sforce.soap.tooling.metadata.FlowRecordCreate[0];

    public com.sforce.soap.tooling.metadata.FlowRecordCreate[] getRecordCreates() {
      return recordCreates;
    }

    public void setRecordCreates(com.sforce.soap.tooling.metadata.FlowRecordCreate[] recordCreates) {
      this.recordCreates = recordCreates;
      recordCreates__is_set = true;
    }

    protected void setRecordCreates(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("recordCreates", "urn:metadata.tooling.soap.sforce.com","recordCreates","urn:metadata.tooling.soap.sforce.com","FlowRecordCreate",0,-1,true))) {
        setRecordCreates((com.sforce.soap.tooling.metadata.FlowRecordCreate[])__typeMapper.readObject(__in, _lookupTypeInfo("recordCreates", "urn:metadata.tooling.soap.sforce.com","recordCreates","urn:metadata.tooling.soap.sforce.com","FlowRecordCreate",0,-1,true), com.sforce.soap.tooling.metadata.FlowRecordCreate[].class));
      }
    }

    private void writeFieldRecordCreates(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("recordCreates", "urn:metadata.tooling.soap.sforce.com","recordCreates","urn:metadata.tooling.soap.sforce.com","FlowRecordCreate",0,-1,true), recordCreates, recordCreates__is_set);
    }

    /**
     * element : recordDeletes of type {urn:metadata.tooling.soap.sforce.com}FlowRecordDelete
     * java type: com.sforce.soap.tooling.metadata.FlowRecordDelete[]
     */
    private boolean recordDeletes__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowRecordDelete[] recordDeletes = new com.sforce.soap.tooling.metadata.FlowRecordDelete[0];

    public com.sforce.soap.tooling.metadata.FlowRecordDelete[] getRecordDeletes() {
      return recordDeletes;
    }

    public void setRecordDeletes(com.sforce.soap.tooling.metadata.FlowRecordDelete[] recordDeletes) {
      this.recordDeletes = recordDeletes;
      recordDeletes__is_set = true;
    }

    protected void setRecordDeletes(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("recordDeletes", "urn:metadata.tooling.soap.sforce.com","recordDeletes","urn:metadata.tooling.soap.sforce.com","FlowRecordDelete",0,-1,true))) {
        setRecordDeletes((com.sforce.soap.tooling.metadata.FlowRecordDelete[])__typeMapper.readObject(__in, _lookupTypeInfo("recordDeletes", "urn:metadata.tooling.soap.sforce.com","recordDeletes","urn:metadata.tooling.soap.sforce.com","FlowRecordDelete",0,-1,true), com.sforce.soap.tooling.metadata.FlowRecordDelete[].class));
      }
    }

    private void writeFieldRecordDeletes(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("recordDeletes", "urn:metadata.tooling.soap.sforce.com","recordDeletes","urn:metadata.tooling.soap.sforce.com","FlowRecordDelete",0,-1,true), recordDeletes, recordDeletes__is_set);
    }

    /**
     * element : recordLookups of type {urn:metadata.tooling.soap.sforce.com}FlowRecordLookup
     * java type: com.sforce.soap.tooling.metadata.FlowRecordLookup[]
     */
    private boolean recordLookups__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowRecordLookup[] recordLookups = new com.sforce.soap.tooling.metadata.FlowRecordLookup[0];

    public com.sforce.soap.tooling.metadata.FlowRecordLookup[] getRecordLookups() {
      return recordLookups;
    }

    public void setRecordLookups(com.sforce.soap.tooling.metadata.FlowRecordLookup[] recordLookups) {
      this.recordLookups = recordLookups;
      recordLookups__is_set = true;
    }

    protected void setRecordLookups(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("recordLookups", "urn:metadata.tooling.soap.sforce.com","recordLookups","urn:metadata.tooling.soap.sforce.com","FlowRecordLookup",0,-1,true))) {
        setRecordLookups((com.sforce.soap.tooling.metadata.FlowRecordLookup[])__typeMapper.readObject(__in, _lookupTypeInfo("recordLookups", "urn:metadata.tooling.soap.sforce.com","recordLookups","urn:metadata.tooling.soap.sforce.com","FlowRecordLookup",0,-1,true), com.sforce.soap.tooling.metadata.FlowRecordLookup[].class));
      }
    }

    private void writeFieldRecordLookups(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("recordLookups", "urn:metadata.tooling.soap.sforce.com","recordLookups","urn:metadata.tooling.soap.sforce.com","FlowRecordLookup",0,-1,true), recordLookups, recordLookups__is_set);
    }

    /**
     * element : recordUpdates of type {urn:metadata.tooling.soap.sforce.com}FlowRecordUpdate
     * java type: com.sforce.soap.tooling.metadata.FlowRecordUpdate[]
     */
    private boolean recordUpdates__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowRecordUpdate[] recordUpdates = new com.sforce.soap.tooling.metadata.FlowRecordUpdate[0];

    public com.sforce.soap.tooling.metadata.FlowRecordUpdate[] getRecordUpdates() {
      return recordUpdates;
    }

    public void setRecordUpdates(com.sforce.soap.tooling.metadata.FlowRecordUpdate[] recordUpdates) {
      this.recordUpdates = recordUpdates;
      recordUpdates__is_set = true;
    }

    protected void setRecordUpdates(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("recordUpdates", "urn:metadata.tooling.soap.sforce.com","recordUpdates","urn:metadata.tooling.soap.sforce.com","FlowRecordUpdate",0,-1,true))) {
        setRecordUpdates((com.sforce.soap.tooling.metadata.FlowRecordUpdate[])__typeMapper.readObject(__in, _lookupTypeInfo("recordUpdates", "urn:metadata.tooling.soap.sforce.com","recordUpdates","urn:metadata.tooling.soap.sforce.com","FlowRecordUpdate",0,-1,true), com.sforce.soap.tooling.metadata.FlowRecordUpdate[].class));
      }
    }

    private void writeFieldRecordUpdates(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("recordUpdates", "urn:metadata.tooling.soap.sforce.com","recordUpdates","urn:metadata.tooling.soap.sforce.com","FlowRecordUpdate",0,-1,true), recordUpdates, recordUpdates__is_set);
    }

    /**
     * element : screens of type {urn:metadata.tooling.soap.sforce.com}FlowScreen
     * java type: com.sforce.soap.tooling.metadata.FlowScreen[]
     */
    private boolean screens__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowScreen[] screens = new com.sforce.soap.tooling.metadata.FlowScreen[0];

    public com.sforce.soap.tooling.metadata.FlowScreen[] getScreens() {
      return screens;
    }

    public void setScreens(com.sforce.soap.tooling.metadata.FlowScreen[] screens) {
      this.screens = screens;
      screens__is_set = true;
    }

    protected void setScreens(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("screens", "urn:metadata.tooling.soap.sforce.com","screens","urn:metadata.tooling.soap.sforce.com","FlowScreen",0,-1,true))) {
        setScreens((com.sforce.soap.tooling.metadata.FlowScreen[])__typeMapper.readObject(__in, _lookupTypeInfo("screens", "urn:metadata.tooling.soap.sforce.com","screens","urn:metadata.tooling.soap.sforce.com","FlowScreen",0,-1,true), com.sforce.soap.tooling.metadata.FlowScreen[].class));
      }
    }

    private void writeFieldScreens(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("screens", "urn:metadata.tooling.soap.sforce.com","screens","urn:metadata.tooling.soap.sforce.com","FlowScreen",0,-1,true), screens, screens__is_set);
    }

    /**
     * element : stages of type {urn:metadata.tooling.soap.sforce.com}FlowStage
     * java type: com.sforce.soap.tooling.metadata.FlowStage[]
     */
    private boolean stages__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowStage[] stages = new com.sforce.soap.tooling.metadata.FlowStage[0];

    public com.sforce.soap.tooling.metadata.FlowStage[] getStages() {
      return stages;
    }

    public void setStages(com.sforce.soap.tooling.metadata.FlowStage[] stages) {
      this.stages = stages;
      stages__is_set = true;
    }

    protected void setStages(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("stages", "urn:metadata.tooling.soap.sforce.com","stages","urn:metadata.tooling.soap.sforce.com","FlowStage",0,-1,true))) {
        setStages((com.sforce.soap.tooling.metadata.FlowStage[])__typeMapper.readObject(__in, _lookupTypeInfo("stages", "urn:metadata.tooling.soap.sforce.com","stages","urn:metadata.tooling.soap.sforce.com","FlowStage",0,-1,true), com.sforce.soap.tooling.metadata.FlowStage[].class));
      }
    }

    private void writeFieldStages(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("stages", "urn:metadata.tooling.soap.sforce.com","stages","urn:metadata.tooling.soap.sforce.com","FlowStage",0,-1,true), stages, stages__is_set);
    }

    /**
     * element : startElementReference of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean startElementReference__is_set = false;

    private java.lang.String startElementReference;

    public java.lang.String getStartElementReference() {
      return startElementReference;
    }

    public void setStartElementReference(java.lang.String startElementReference) {
      this.startElementReference = startElementReference;
      startElementReference__is_set = true;
    }

    protected void setStartElementReference(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("startElementReference", "urn:metadata.tooling.soap.sforce.com","startElementReference","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setStartElementReference(__typeMapper.readString(__in, _lookupTypeInfo("startElementReference", "urn:metadata.tooling.soap.sforce.com","startElementReference","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldStartElementReference(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("startElementReference", "urn:metadata.tooling.soap.sforce.com","startElementReference","http://www.w3.org/2001/XMLSchema","string",0,1,true), startElementReference, startElementReference__is_set);
    }

    /**
     * element : status of type {urn:tooling.soap.sforce.com}FlowVersionStatus
     * java type: com.sforce.soap.tooling.FlowVersionStatus
     */
    private boolean status__is_set = false;

    private com.sforce.soap.tooling.FlowVersionStatus status;

    public com.sforce.soap.tooling.FlowVersionStatus getStatus() {
      return status;
    }

    public void setStatus(com.sforce.soap.tooling.FlowVersionStatus status) {
      this.status = status;
      status__is_set = true;
    }

    protected void setStatus(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("status", "urn:metadata.tooling.soap.sforce.com","status","urn:tooling.soap.sforce.com","FlowVersionStatus",0,1,true))) {
        setStatus((com.sforce.soap.tooling.FlowVersionStatus)__typeMapper.readObject(__in, _lookupTypeInfo("status", "urn:metadata.tooling.soap.sforce.com","status","urn:tooling.soap.sforce.com","FlowVersionStatus",0,1,true), com.sforce.soap.tooling.FlowVersionStatus.class));
      }
    }

    private void writeFieldStatus(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("status", "urn:metadata.tooling.soap.sforce.com","status","urn:tooling.soap.sforce.com","FlowVersionStatus",0,1,true), status, status__is_set);
    }

    /**
     * element : steps of type {urn:metadata.tooling.soap.sforce.com}FlowStep
     * java type: com.sforce.soap.tooling.metadata.FlowStep[]
     */
    private boolean steps__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowStep[] steps = new com.sforce.soap.tooling.metadata.FlowStep[0];

    public com.sforce.soap.tooling.metadata.FlowStep[] getSteps() {
      return steps;
    }

    public void setSteps(com.sforce.soap.tooling.metadata.FlowStep[] steps) {
      this.steps = steps;
      steps__is_set = true;
    }

    protected void setSteps(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("steps", "urn:metadata.tooling.soap.sforce.com","steps","urn:metadata.tooling.soap.sforce.com","FlowStep",0,-1,true))) {
        setSteps((com.sforce.soap.tooling.metadata.FlowStep[])__typeMapper.readObject(__in, _lookupTypeInfo("steps", "urn:metadata.tooling.soap.sforce.com","steps","urn:metadata.tooling.soap.sforce.com","FlowStep",0,-1,true), com.sforce.soap.tooling.metadata.FlowStep[].class));
      }
    }

    private void writeFieldSteps(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("steps", "urn:metadata.tooling.soap.sforce.com","steps","urn:metadata.tooling.soap.sforce.com","FlowStep",0,-1,true), steps, steps__is_set);
    }

    /**
     * element : subflows of type {urn:metadata.tooling.soap.sforce.com}FlowSubflow
     * java type: com.sforce.soap.tooling.metadata.FlowSubflow[]
     */
    private boolean subflows__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowSubflow[] subflows = new com.sforce.soap.tooling.metadata.FlowSubflow[0];

    public com.sforce.soap.tooling.metadata.FlowSubflow[] getSubflows() {
      return subflows;
    }

    public void setSubflows(com.sforce.soap.tooling.metadata.FlowSubflow[] subflows) {
      this.subflows = subflows;
      subflows__is_set = true;
    }

    protected void setSubflows(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("subflows", "urn:metadata.tooling.soap.sforce.com","subflows","urn:metadata.tooling.soap.sforce.com","FlowSubflow",0,-1,true))) {
        setSubflows((com.sforce.soap.tooling.metadata.FlowSubflow[])__typeMapper.readObject(__in, _lookupTypeInfo("subflows", "urn:metadata.tooling.soap.sforce.com","subflows","urn:metadata.tooling.soap.sforce.com","FlowSubflow",0,-1,true), com.sforce.soap.tooling.metadata.FlowSubflow[].class));
      }
    }

    private void writeFieldSubflows(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("subflows", "urn:metadata.tooling.soap.sforce.com","subflows","urn:metadata.tooling.soap.sforce.com","FlowSubflow",0,-1,true), subflows, subflows__is_set);
    }

    /**
     * element : textTemplates of type {urn:metadata.tooling.soap.sforce.com}FlowTextTemplate
     * java type: com.sforce.soap.tooling.metadata.FlowTextTemplate[]
     */
    private boolean textTemplates__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowTextTemplate[] textTemplates = new com.sforce.soap.tooling.metadata.FlowTextTemplate[0];

    public com.sforce.soap.tooling.metadata.FlowTextTemplate[] getTextTemplates() {
      return textTemplates;
    }

    public void setTextTemplates(com.sforce.soap.tooling.metadata.FlowTextTemplate[] textTemplates) {
      this.textTemplates = textTemplates;
      textTemplates__is_set = true;
    }

    protected void setTextTemplates(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("textTemplates", "urn:metadata.tooling.soap.sforce.com","textTemplates","urn:metadata.tooling.soap.sforce.com","FlowTextTemplate",0,-1,true))) {
        setTextTemplates((com.sforce.soap.tooling.metadata.FlowTextTemplate[])__typeMapper.readObject(__in, _lookupTypeInfo("textTemplates", "urn:metadata.tooling.soap.sforce.com","textTemplates","urn:metadata.tooling.soap.sforce.com","FlowTextTemplate",0,-1,true), com.sforce.soap.tooling.metadata.FlowTextTemplate[].class));
      }
    }

    private void writeFieldTextTemplates(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("textTemplates", "urn:metadata.tooling.soap.sforce.com","textTemplates","urn:metadata.tooling.soap.sforce.com","FlowTextTemplate",0,-1,true), textTemplates, textTemplates__is_set);
    }

    /**
     * element : variables of type {urn:metadata.tooling.soap.sforce.com}FlowVariable
     * java type: com.sforce.soap.tooling.metadata.FlowVariable[]
     */
    private boolean variables__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowVariable[] variables = new com.sforce.soap.tooling.metadata.FlowVariable[0];

    public com.sforce.soap.tooling.metadata.FlowVariable[] getVariables() {
      return variables;
    }

    public void setVariables(com.sforce.soap.tooling.metadata.FlowVariable[] variables) {
      this.variables = variables;
      variables__is_set = true;
    }

    protected void setVariables(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("variables", "urn:metadata.tooling.soap.sforce.com","variables","urn:metadata.tooling.soap.sforce.com","FlowVariable",0,-1,true))) {
        setVariables((com.sforce.soap.tooling.metadata.FlowVariable[])__typeMapper.readObject(__in, _lookupTypeInfo("variables", "urn:metadata.tooling.soap.sforce.com","variables","urn:metadata.tooling.soap.sforce.com","FlowVariable",0,-1,true), com.sforce.soap.tooling.metadata.FlowVariable[].class));
      }
    }

    private void writeFieldVariables(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("variables", "urn:metadata.tooling.soap.sforce.com","variables","urn:metadata.tooling.soap.sforce.com","FlowVariable",0,-1,true), variables, variables__is_set);
    }

    /**
     * element : waits of type {urn:metadata.tooling.soap.sforce.com}FlowWait
     * java type: com.sforce.soap.tooling.metadata.FlowWait[]
     */
    private boolean waits__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowWait[] waits = new com.sforce.soap.tooling.metadata.FlowWait[0];

    public com.sforce.soap.tooling.metadata.FlowWait[] getWaits() {
      return waits;
    }

    public void setWaits(com.sforce.soap.tooling.metadata.FlowWait[] waits) {
      this.waits = waits;
      waits__is_set = true;
    }

    protected void setWaits(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("waits", "urn:metadata.tooling.soap.sforce.com","waits","urn:metadata.tooling.soap.sforce.com","FlowWait",0,-1,true))) {
        setWaits((com.sforce.soap.tooling.metadata.FlowWait[])__typeMapper.readObject(__in, _lookupTypeInfo("waits", "urn:metadata.tooling.soap.sforce.com","waits","urn:metadata.tooling.soap.sforce.com","FlowWait",0,-1,true), com.sforce.soap.tooling.metadata.FlowWait[].class));
      }
    }

    private void writeFieldWaits(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("waits", "urn:metadata.tooling.soap.sforce.com","waits","urn:metadata.tooling.soap.sforce.com","FlowWait",0,-1,true), waits, waits__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "Flow");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[Flow ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldActionCalls(__out, __typeMapper);
      writeFieldApexPluginCalls(__out, __typeMapper);
      writeFieldAssignments(__out, __typeMapper);
      writeFieldChoices(__out, __typeMapper);
      writeFieldConstants(__out, __typeMapper);
      writeFieldDecisions(__out, __typeMapper);
      writeFieldDescription(__out, __typeMapper);
      writeFieldDynamicChoiceSets(__out, __typeMapper);
      writeFieldFormulas(__out, __typeMapper);
      writeFieldInterviewLabel(__out, __typeMapper);
      writeFieldLabel(__out, __typeMapper);
      writeFieldLoops(__out, __typeMapper);
      writeFieldProcessMetadataValues(__out, __typeMapper);
      writeFieldProcessType(__out, __typeMapper);
      writeFieldRecordCreates(__out, __typeMapper);
      writeFieldRecordDeletes(__out, __typeMapper);
      writeFieldRecordLookups(__out, __typeMapper);
      writeFieldRecordUpdates(__out, __typeMapper);
      writeFieldScreens(__out, __typeMapper);
      writeFieldStages(__out, __typeMapper);
      writeFieldStartElementReference(__out, __typeMapper);
      writeFieldStatus(__out, __typeMapper);
      writeFieldSteps(__out, __typeMapper);
      writeFieldSubflows(__out, __typeMapper);
      writeFieldTextTemplates(__out, __typeMapper);
      writeFieldVariables(__out, __typeMapper);
      writeFieldWaits(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setActionCalls(__in, __typeMapper);
      setApexPluginCalls(__in, __typeMapper);
      setAssignments(__in, __typeMapper);
      setChoices(__in, __typeMapper);
      setConstants(__in, __typeMapper);
      setDecisions(__in, __typeMapper);
      setDescription(__in, __typeMapper);
      setDynamicChoiceSets(__in, __typeMapper);
      setFormulas(__in, __typeMapper);
      setInterviewLabel(__in, __typeMapper);
      setLabel(__in, __typeMapper);
      setLoops(__in, __typeMapper);
      setProcessMetadataValues(__in, __typeMapper);
      setProcessType(__in, __typeMapper);
      setRecordCreates(__in, __typeMapper);
      setRecordDeletes(__in, __typeMapper);
      setRecordLookups(__in, __typeMapper);
      setRecordUpdates(__in, __typeMapper);
      setScreens(__in, __typeMapper);
      setStages(__in, __typeMapper);
      setStartElementReference(__in, __typeMapper);
      setStatus(__in, __typeMapper);
      setSteps(__in, __typeMapper);
      setSubflows(__in, __typeMapper);
      setTextTemplates(__in, __typeMapper);
      setVariables(__in, __typeMapper);
      setWaits(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "actionCalls", actionCalls);
      toStringHelper(sb, "apexPluginCalls", apexPluginCalls);
      toStringHelper(sb, "assignments", assignments);
      toStringHelper(sb, "choices", choices);
      toStringHelper(sb, "constants", constants);
      toStringHelper(sb, "decisions", decisions);
      toStringHelper(sb, "description", description);
      toStringHelper(sb, "dynamicChoiceSets", dynamicChoiceSets);
      toStringHelper(sb, "formulas", formulas);
      toStringHelper(sb, "interviewLabel", interviewLabel);
      toStringHelper(sb, "label", label);
      toStringHelper(sb, "loops", loops);
      toStringHelper(sb, "processMetadataValues", processMetadataValues);
      toStringHelper(sb, "processType", processType);
      toStringHelper(sb, "recordCreates", recordCreates);
      toStringHelper(sb, "recordDeletes", recordDeletes);
      toStringHelper(sb, "recordLookups", recordLookups);
      toStringHelper(sb, "recordUpdates", recordUpdates);
      toStringHelper(sb, "screens", screens);
      toStringHelper(sb, "stages", stages);
      toStringHelper(sb, "startElementReference", startElementReference);
      toStringHelper(sb, "status", status);
      toStringHelper(sb, "steps", steps);
      toStringHelper(sb, "subflows", subflows);
      toStringHelper(sb, "textTemplates", textTemplates);
      toStringHelper(sb, "variables", variables);
      toStringHelper(sb, "waits", waits);
    }


}
