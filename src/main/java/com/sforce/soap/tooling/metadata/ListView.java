package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class ListView extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public ListView() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : booleanFilter of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean booleanFilter__is_set = false;

    private java.lang.String booleanFilter;

    public java.lang.String getBooleanFilter() {
      return booleanFilter;
    }

    public void setBooleanFilter(java.lang.String booleanFilter) {
      this.booleanFilter = booleanFilter;
      booleanFilter__is_set = true;
    }

    protected void setBooleanFilter(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("booleanFilter", "urn:metadata.tooling.soap.sforce.com","booleanFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setBooleanFilter(__typeMapper.readString(__in, _lookupTypeInfo("booleanFilter", "urn:metadata.tooling.soap.sforce.com","booleanFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldBooleanFilter(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("booleanFilter", "urn:metadata.tooling.soap.sforce.com","booleanFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true), booleanFilter, booleanFilter__is_set);
    }

    /**
     * element : columns of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private boolean columns__is_set = false;

    private java.lang.String[] columns = new java.lang.String[0];

    public java.lang.String[] getColumns() {
      return columns;
    }

    public void setColumns(java.lang.String[] columns) {
      this.columns = columns;
      columns__is_set = true;
    }

    protected void setColumns(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("columns", "urn:metadata.tooling.soap.sforce.com","columns","http://www.w3.org/2001/XMLSchema","string",0,-1,true))) {
        setColumns((java.lang.String[])__typeMapper.readObject(__in, _lookupTypeInfo("columns", "urn:metadata.tooling.soap.sforce.com","columns","http://www.w3.org/2001/XMLSchema","string",0,-1,true), java.lang.String[].class));
      }
    }

    private void writeFieldColumns(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("columns", "urn:metadata.tooling.soap.sforce.com","columns","http://www.w3.org/2001/XMLSchema","string",0,-1,true), columns, columns__is_set);
    }

    /**
     * element : division of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean division__is_set = false;

    private java.lang.String division;

    public java.lang.String getDivision() {
      return division;
    }

    public void setDivision(java.lang.String division) {
      this.division = division;
      division__is_set = true;
    }

    protected void setDivision(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("division", "urn:metadata.tooling.soap.sforce.com","division","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDivision(__typeMapper.readString(__in, _lookupTypeInfo("division", "urn:metadata.tooling.soap.sforce.com","division","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDivision(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("division", "urn:metadata.tooling.soap.sforce.com","division","http://www.w3.org/2001/XMLSchema","string",0,1,true), division, division__is_set);
    }

    /**
     * element : filterScope of type {urn:tooling.soap.sforce.com}FilterScope
     * java type: com.sforce.soap.tooling.FilterScope
     */
    private boolean filterScope__is_set = false;

    private com.sforce.soap.tooling.FilterScope filterScope;

    public com.sforce.soap.tooling.FilterScope getFilterScope() {
      return filterScope;
    }

    public void setFilterScope(com.sforce.soap.tooling.FilterScope filterScope) {
      this.filterScope = filterScope;
      filterScope__is_set = true;
    }

    protected void setFilterScope(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("filterScope", "urn:metadata.tooling.soap.sforce.com","filterScope","urn:tooling.soap.sforce.com","FilterScope",1,1,true))) {
        setFilterScope((com.sforce.soap.tooling.FilterScope)__typeMapper.readObject(__in, _lookupTypeInfo("filterScope", "urn:metadata.tooling.soap.sforce.com","filterScope","urn:tooling.soap.sforce.com","FilterScope",1,1,true), com.sforce.soap.tooling.FilterScope.class));
      }
    }

    private void writeFieldFilterScope(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("filterScope", "urn:metadata.tooling.soap.sforce.com","filterScope","urn:tooling.soap.sforce.com","FilterScope",1,1,true), filterScope, filterScope__is_set);
    }

    /**
     * element : filters of type {urn:metadata.tooling.soap.sforce.com}ListViewFilter
     * java type: com.sforce.soap.tooling.metadata.ListViewFilter[]
     */
    private boolean filters__is_set = false;

    private com.sforce.soap.tooling.metadata.ListViewFilter[] filters = new com.sforce.soap.tooling.metadata.ListViewFilter[0];

    public com.sforce.soap.tooling.metadata.ListViewFilter[] getFilters() {
      return filters;
    }

    public void setFilters(com.sforce.soap.tooling.metadata.ListViewFilter[] filters) {
      this.filters = filters;
      filters__is_set = true;
    }

    protected void setFilters(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("filters", "urn:metadata.tooling.soap.sforce.com","filters","urn:metadata.tooling.soap.sforce.com","ListViewFilter",0,-1,true))) {
        setFilters((com.sforce.soap.tooling.metadata.ListViewFilter[])__typeMapper.readObject(__in, _lookupTypeInfo("filters", "urn:metadata.tooling.soap.sforce.com","filters","urn:metadata.tooling.soap.sforce.com","ListViewFilter",0,-1,true), com.sforce.soap.tooling.metadata.ListViewFilter[].class));
      }
    }

    private void writeFieldFilters(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("filters", "urn:metadata.tooling.soap.sforce.com","filters","urn:metadata.tooling.soap.sforce.com","ListViewFilter",0,-1,true), filters, filters__is_set);
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("label", "urn:metadata.tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setLabel(__typeMapper.readString(__in, _lookupTypeInfo("label", "urn:metadata.tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("label", "urn:metadata.tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true), label, label__is_set);
    }

    /**
     * element : language of type {urn:tooling.soap.sforce.com}Language
     * java type: com.sforce.soap.tooling.Language
     */
    private boolean language__is_set = false;

    private com.sforce.soap.tooling.Language language;

    public com.sforce.soap.tooling.Language getLanguage() {
      return language;
    }

    public void setLanguage(com.sforce.soap.tooling.Language language) {
      this.language = language;
      language__is_set = true;
    }

    protected void setLanguage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("language", "urn:metadata.tooling.soap.sforce.com","language","urn:tooling.soap.sforce.com","Language",0,1,true))) {
        setLanguage((com.sforce.soap.tooling.Language)__typeMapper.readObject(__in, _lookupTypeInfo("language", "urn:metadata.tooling.soap.sforce.com","language","urn:tooling.soap.sforce.com","Language",0,1,true), com.sforce.soap.tooling.Language.class));
      }
    }

    private void writeFieldLanguage(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("language", "urn:metadata.tooling.soap.sforce.com","language","urn:tooling.soap.sforce.com","Language",0,1,true), language, language__is_set);
    }

    /**
     * element : queue of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean queue__is_set = false;

    private java.lang.String queue;

    public java.lang.String getQueue() {
      return queue;
    }

    public void setQueue(java.lang.String queue) {
      this.queue = queue;
      queue__is_set = true;
    }

    protected void setQueue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("queue", "urn:metadata.tooling.soap.sforce.com","queue","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setQueue(__typeMapper.readString(__in, _lookupTypeInfo("queue", "urn:metadata.tooling.soap.sforce.com","queue","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldQueue(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("queue", "urn:metadata.tooling.soap.sforce.com","queue","http://www.w3.org/2001/XMLSchema","string",0,1,true), queue, queue__is_set);
    }

    /**
     * element : sharedTo of type {urn:metadata.tooling.soap.sforce.com}SharedTo
     * java type: com.sforce.soap.tooling.metadata.SharedTo
     */
    private boolean sharedTo__is_set = false;

    private com.sforce.soap.tooling.metadata.SharedTo sharedTo;

    public com.sforce.soap.tooling.metadata.SharedTo getSharedTo() {
      return sharedTo;
    }

    public void setSharedTo(com.sforce.soap.tooling.metadata.SharedTo sharedTo) {
      this.sharedTo = sharedTo;
      sharedTo__is_set = true;
    }

    protected void setSharedTo(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("sharedTo", "urn:metadata.tooling.soap.sforce.com","sharedTo","urn:metadata.tooling.soap.sforce.com","SharedTo",0,1,true))) {
        setSharedTo((com.sforce.soap.tooling.metadata.SharedTo)__typeMapper.readObject(__in, _lookupTypeInfo("sharedTo", "urn:metadata.tooling.soap.sforce.com","sharedTo","urn:metadata.tooling.soap.sforce.com","SharedTo",0,1,true), com.sforce.soap.tooling.metadata.SharedTo.class));
      }
    }

    private void writeFieldSharedTo(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("sharedTo", "urn:metadata.tooling.soap.sforce.com","sharedTo","urn:metadata.tooling.soap.sforce.com","SharedTo",0,1,true), sharedTo, sharedTo__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "ListView");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ListView ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldBooleanFilter(__out, __typeMapper);
      writeFieldColumns(__out, __typeMapper);
      writeFieldDivision(__out, __typeMapper);
      writeFieldFilterScope(__out, __typeMapper);
      writeFieldFilters(__out, __typeMapper);
      writeFieldLabel(__out, __typeMapper);
      writeFieldLanguage(__out, __typeMapper);
      writeFieldQueue(__out, __typeMapper);
      writeFieldSharedTo(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setBooleanFilter(__in, __typeMapper);
      setColumns(__in, __typeMapper);
      setDivision(__in, __typeMapper);
      setFilterScope(__in, __typeMapper);
      setFilters(__in, __typeMapper);
      setLabel(__in, __typeMapper);
      setLanguage(__in, __typeMapper);
      setQueue(__in, __typeMapper);
      setSharedTo(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "booleanFilter", booleanFilter);
      toStringHelper(sb, "columns", columns);
      toStringHelper(sb, "division", division);
      toStringHelper(sb, "filterScope", filterScope);
      toStringHelper(sb, "filters", filters);
      toStringHelper(sb, "label", label);
      toStringHelper(sb, "language", language);
      toStringHelper(sb, "queue", queue);
      toStringHelper(sb, "sharedTo", sharedTo);
    }


}
