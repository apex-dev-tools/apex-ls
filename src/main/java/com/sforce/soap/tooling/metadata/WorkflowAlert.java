package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class WorkflowAlert extends com.sforce.soap.tooling.metadata.WorkflowAction {

    /**
     * Constructor
     */
    public WorkflowAlert() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : ccEmails of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private boolean ccEmails__is_set = false;

    private java.lang.String[] ccEmails = new java.lang.String[0];

    public java.lang.String[] getCcEmails() {
      return ccEmails;
    }

    public void setCcEmails(java.lang.String[] ccEmails) {
      this.ccEmails = ccEmails;
      ccEmails__is_set = true;
    }

    protected void setCcEmails(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("ccEmails", "urn:metadata.tooling.soap.sforce.com","ccEmails","http://www.w3.org/2001/XMLSchema","string",0,-1,true))) {
        setCcEmails((java.lang.String[])__typeMapper.readObject(__in, _lookupTypeInfo("ccEmails", "urn:metadata.tooling.soap.sforce.com","ccEmails","http://www.w3.org/2001/XMLSchema","string",0,-1,true), java.lang.String[].class));
      }
    }

    private void writeFieldCcEmails(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("ccEmails", "urn:metadata.tooling.soap.sforce.com","ccEmails","http://www.w3.org/2001/XMLSchema","string",0,-1,true), ccEmails, ccEmails__is_set);
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setDescription(__typeMapper.readString(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDescription(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",1,1,true), description, description__is_set);
    }

    /**
     * element : protected of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean _protected__is_set = false;

    private boolean _protected;

    public boolean getProtected() {
      return _protected;
    }

    public boolean isProtected() {
      return _protected;
    }

    public void setProtected(boolean _protected) {
      this._protected = _protected;
      _protected__is_set = true;
    }

    protected void setProtected(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("_protected", "urn:metadata.tooling.soap.sforce.com","protected","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setProtected(__typeMapper.readBoolean(__in, _lookupTypeInfo("_protected", "urn:metadata.tooling.soap.sforce.com","protected","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldProtected(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("_protected", "urn:metadata.tooling.soap.sforce.com","protected","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), _protected, _protected__is_set);
    }

    /**
     * element : recipients of type {urn:metadata.tooling.soap.sforce.com}WorkflowEmailRecipient
     * java type: com.sforce.soap.tooling.metadata.WorkflowEmailRecipient[]
     */
    private boolean recipients__is_set = false;

    private com.sforce.soap.tooling.metadata.WorkflowEmailRecipient[] recipients = new com.sforce.soap.tooling.metadata.WorkflowEmailRecipient[0];

    public com.sforce.soap.tooling.metadata.WorkflowEmailRecipient[] getRecipients() {
      return recipients;
    }

    public void setRecipients(com.sforce.soap.tooling.metadata.WorkflowEmailRecipient[] recipients) {
      this.recipients = recipients;
      recipients__is_set = true;
    }

    protected void setRecipients(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("recipients", "urn:metadata.tooling.soap.sforce.com","recipients","urn:metadata.tooling.soap.sforce.com","WorkflowEmailRecipient",0,-1,true))) {
        setRecipients((com.sforce.soap.tooling.metadata.WorkflowEmailRecipient[])__typeMapper.readObject(__in, _lookupTypeInfo("recipients", "urn:metadata.tooling.soap.sforce.com","recipients","urn:metadata.tooling.soap.sforce.com","WorkflowEmailRecipient",0,-1,true), com.sforce.soap.tooling.metadata.WorkflowEmailRecipient[].class));
      }
    }

    private void writeFieldRecipients(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("recipients", "urn:metadata.tooling.soap.sforce.com","recipients","urn:metadata.tooling.soap.sforce.com","WorkflowEmailRecipient",0,-1,true), recipients, recipients__is_set);
    }

    /**
     * element : senderAddress of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean senderAddress__is_set = false;

    private java.lang.String senderAddress;

    public java.lang.String getSenderAddress() {
      return senderAddress;
    }

    public void setSenderAddress(java.lang.String senderAddress) {
      this.senderAddress = senderAddress;
      senderAddress__is_set = true;
    }

    protected void setSenderAddress(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("senderAddress", "urn:metadata.tooling.soap.sforce.com","senderAddress","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setSenderAddress(__typeMapper.readString(__in, _lookupTypeInfo("senderAddress", "urn:metadata.tooling.soap.sforce.com","senderAddress","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSenderAddress(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("senderAddress", "urn:metadata.tooling.soap.sforce.com","senderAddress","http://www.w3.org/2001/XMLSchema","string",0,1,true), senderAddress, senderAddress__is_set);
    }

    /**
     * element : senderType of type {urn:tooling.soap.sforce.com}ActionEmailSenderType
     * java type: com.sforce.soap.tooling.ActionEmailSenderType
     */
    private boolean senderType__is_set = false;

    private com.sforce.soap.tooling.ActionEmailSenderType senderType;

    public com.sforce.soap.tooling.ActionEmailSenderType getSenderType() {
      return senderType;
    }

    public void setSenderType(com.sforce.soap.tooling.ActionEmailSenderType senderType) {
      this.senderType = senderType;
      senderType__is_set = true;
    }

    protected void setSenderType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("senderType", "urn:metadata.tooling.soap.sforce.com","senderType","urn:tooling.soap.sforce.com","ActionEmailSenderType",0,1,true))) {
        setSenderType((com.sforce.soap.tooling.ActionEmailSenderType)__typeMapper.readObject(__in, _lookupTypeInfo("senderType", "urn:metadata.tooling.soap.sforce.com","senderType","urn:tooling.soap.sforce.com","ActionEmailSenderType",0,1,true), com.sforce.soap.tooling.ActionEmailSenderType.class));
      }
    }

    private void writeFieldSenderType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("senderType", "urn:metadata.tooling.soap.sforce.com","senderType","urn:tooling.soap.sforce.com","ActionEmailSenderType",0,1,true), senderType, senderType__is_set);
    }

    /**
     * element : template of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean template__is_set = false;

    private java.lang.String template;

    public java.lang.String getTemplate() {
      return template;
    }

    public void setTemplate(java.lang.String template) {
      this.template = template;
      template__is_set = true;
    }

    protected void setTemplate(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("template", "urn:metadata.tooling.soap.sforce.com","template","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setTemplate(__typeMapper.readString(__in, _lookupTypeInfo("template", "urn:metadata.tooling.soap.sforce.com","template","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldTemplate(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("template", "urn:metadata.tooling.soap.sforce.com","template","http://www.w3.org/2001/XMLSchema","string",1,1,true), template, template__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "WorkflowAlert");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[WorkflowAlert ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldCcEmails(__out, __typeMapper);
      writeFieldDescription(__out, __typeMapper);
      writeFieldProtected(__out, __typeMapper);
      writeFieldRecipients(__out, __typeMapper);
      writeFieldSenderAddress(__out, __typeMapper);
      writeFieldSenderType(__out, __typeMapper);
      writeFieldTemplate(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setCcEmails(__in, __typeMapper);
      setDescription(__in, __typeMapper);
      setProtected(__in, __typeMapper);
      setRecipients(__in, __typeMapper);
      setSenderAddress(__in, __typeMapper);
      setSenderType(__in, __typeMapper);
      setTemplate(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "ccEmails", ccEmails);
      toStringHelper(sb, "description", description);
      toStringHelper(sb, "_protected", _protected);
      toStringHelper(sb, "recipients", recipients);
      toStringHelper(sb, "senderAddress", senderAddress);
      toStringHelper(sb, "senderType", senderType);
      toStringHelper(sb, "template", template);
    }


}
