package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class CustomPageWebLink extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public CustomPageWebLink() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : availability of type {urn:tooling.soap.sforce.com}WebLinkAvailability
     * java type: com.sforce.soap.tooling.WebLinkAvailability
     */
    private boolean availability__is_set = false;

    private com.sforce.soap.tooling.WebLinkAvailability availability;

    public com.sforce.soap.tooling.WebLinkAvailability getAvailability() {
      return availability;
    }

    public void setAvailability(com.sforce.soap.tooling.WebLinkAvailability availability) {
      this.availability = availability;
      availability__is_set = true;
    }

    protected void setAvailability(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("availability", "urn:metadata.tooling.soap.sforce.com","availability","urn:tooling.soap.sforce.com","WebLinkAvailability",1,1,true))) {
        setAvailability((com.sforce.soap.tooling.WebLinkAvailability)__typeMapper.readObject(__in, _lookupTypeInfo("availability", "urn:metadata.tooling.soap.sforce.com","availability","urn:tooling.soap.sforce.com","WebLinkAvailability",1,1,true), com.sforce.soap.tooling.WebLinkAvailability.class));
      }
    }

    private void writeFieldAvailability(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("availability", "urn:metadata.tooling.soap.sforce.com","availability","urn:tooling.soap.sforce.com","WebLinkAvailability",1,1,true), availability, availability__is_set);
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDescription(__typeMapper.readString(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDescription(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), description, description__is_set);
    }

    /**
     * element : displayType of type {urn:tooling.soap.sforce.com}WebLinkDisplayType
     * java type: com.sforce.soap.tooling.WebLinkDisplayType
     */
    private boolean displayType__is_set = false;

    private com.sforce.soap.tooling.WebLinkDisplayType displayType;

    public com.sforce.soap.tooling.WebLinkDisplayType getDisplayType() {
      return displayType;
    }

    public void setDisplayType(com.sforce.soap.tooling.WebLinkDisplayType displayType) {
      this.displayType = displayType;
      displayType__is_set = true;
    }

    protected void setDisplayType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("displayType", "urn:metadata.tooling.soap.sforce.com","displayType","urn:tooling.soap.sforce.com","WebLinkDisplayType",1,1,true))) {
        setDisplayType((com.sforce.soap.tooling.WebLinkDisplayType)__typeMapper.readObject(__in, _lookupTypeInfo("displayType", "urn:metadata.tooling.soap.sforce.com","displayType","urn:tooling.soap.sforce.com","WebLinkDisplayType",1,1,true), com.sforce.soap.tooling.WebLinkDisplayType.class));
      }
    }

    private void writeFieldDisplayType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("displayType", "urn:metadata.tooling.soap.sforce.com","displayType","urn:tooling.soap.sforce.com","WebLinkDisplayType",1,1,true), displayType, displayType__is_set);
    }

    /**
     * element : encodingKey of type {urn:tooling.soap.sforce.com}Encoding
     * java type: com.sforce.soap.tooling.Encoding
     */
    private boolean encodingKey__is_set = false;

    private com.sforce.soap.tooling.Encoding encodingKey;

    public com.sforce.soap.tooling.Encoding getEncodingKey() {
      return encodingKey;
    }

    public void setEncodingKey(com.sforce.soap.tooling.Encoding encodingKey) {
      this.encodingKey = encodingKey;
      encodingKey__is_set = true;
    }

    protected void setEncodingKey(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("encodingKey", "urn:metadata.tooling.soap.sforce.com","encodingKey","urn:tooling.soap.sforce.com","Encoding",0,1,true))) {
        setEncodingKey((com.sforce.soap.tooling.Encoding)__typeMapper.readObject(__in, _lookupTypeInfo("encodingKey", "urn:metadata.tooling.soap.sforce.com","encodingKey","urn:tooling.soap.sforce.com","Encoding",0,1,true), com.sforce.soap.tooling.Encoding.class));
      }
    }

    private void writeFieldEncodingKey(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("encodingKey", "urn:metadata.tooling.soap.sforce.com","encodingKey","urn:tooling.soap.sforce.com","Encoding",0,1,true), encodingKey, encodingKey__is_set);
    }

    /**
     * element : hasMenubar of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean hasMenubar__is_set = false;

    private boolean hasMenubar;

    public boolean getHasMenubar() {
      return hasMenubar;
    }

    public boolean isHasMenubar() {
      return hasMenubar;
    }

    public void setHasMenubar(boolean hasMenubar) {
      this.hasMenubar = hasMenubar;
      hasMenubar__is_set = true;
    }

    protected void setHasMenubar(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("hasMenubar", "urn:metadata.tooling.soap.sforce.com","hasMenubar","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setHasMenubar(__typeMapper.readBoolean(__in, _lookupTypeInfo("hasMenubar", "urn:metadata.tooling.soap.sforce.com","hasMenubar","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldHasMenubar(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("hasMenubar", "urn:metadata.tooling.soap.sforce.com","hasMenubar","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), hasMenubar, hasMenubar__is_set);
    }

    /**
     * element : hasScrollbars of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean hasScrollbars__is_set = false;

    private boolean hasScrollbars;

    public boolean getHasScrollbars() {
      return hasScrollbars;
    }

    public boolean isHasScrollbars() {
      return hasScrollbars;
    }

    public void setHasScrollbars(boolean hasScrollbars) {
      this.hasScrollbars = hasScrollbars;
      hasScrollbars__is_set = true;
    }

    protected void setHasScrollbars(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("hasScrollbars", "urn:metadata.tooling.soap.sforce.com","hasScrollbars","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setHasScrollbars(__typeMapper.readBoolean(__in, _lookupTypeInfo("hasScrollbars", "urn:metadata.tooling.soap.sforce.com","hasScrollbars","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldHasScrollbars(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("hasScrollbars", "urn:metadata.tooling.soap.sforce.com","hasScrollbars","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), hasScrollbars, hasScrollbars__is_set);
    }

    /**
     * element : hasToolbar of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean hasToolbar__is_set = false;

    private boolean hasToolbar;

    public boolean getHasToolbar() {
      return hasToolbar;
    }

    public boolean isHasToolbar() {
      return hasToolbar;
    }

    public void setHasToolbar(boolean hasToolbar) {
      this.hasToolbar = hasToolbar;
      hasToolbar__is_set = true;
    }

    protected void setHasToolbar(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("hasToolbar", "urn:metadata.tooling.soap.sforce.com","hasToolbar","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setHasToolbar(__typeMapper.readBoolean(__in, _lookupTypeInfo("hasToolbar", "urn:metadata.tooling.soap.sforce.com","hasToolbar","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldHasToolbar(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("hasToolbar", "urn:metadata.tooling.soap.sforce.com","hasToolbar","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), hasToolbar, hasToolbar__is_set);
    }

    /**
     * element : height of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean height__is_set = false;

    private int height;

    public int getHeight() {
      return height;
    }

    public void setHeight(int height) {
      this.height = height;
      height__is_set = true;
    }

    protected void setHeight(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("height", "urn:metadata.tooling.soap.sforce.com","height","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setHeight((int)__typeMapper.readInt(__in, _lookupTypeInfo("height", "urn:metadata.tooling.soap.sforce.com","height","http://www.w3.org/2001/XMLSchema","int",0,1,true), int.class));
      }
    }

    private void writeFieldHeight(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("height", "urn:metadata.tooling.soap.sforce.com","height","http://www.w3.org/2001/XMLSchema","int",0,1,true), height, height__is_set);
    }

    /**
     * element : isResizable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isResizable__is_set = false;

    private boolean isResizable;

    public boolean getIsResizable() {
      return isResizable;
    }

    public boolean isIsResizable() {
      return isResizable;
    }

    public void setIsResizable(boolean isResizable) {
      this.isResizable = isResizable;
      isResizable__is_set = true;
    }

    protected void setIsResizable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("isResizable", "urn:metadata.tooling.soap.sforce.com","isResizable","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setIsResizable(__typeMapper.readBoolean(__in, _lookupTypeInfo("isResizable", "urn:metadata.tooling.soap.sforce.com","isResizable","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldIsResizable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isResizable", "urn:metadata.tooling.soap.sforce.com","isResizable","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), isResizable, isResizable__is_set);
    }

    /**
     * element : linkType of type {urn:tooling.soap.sforce.com}WebLinkType
     * java type: com.sforce.soap.tooling.WebLinkType
     */
    private boolean linkType__is_set = false;

    private com.sforce.soap.tooling.WebLinkType linkType;

    public com.sforce.soap.tooling.WebLinkType getLinkType() {
      return linkType;
    }

    public void setLinkType(com.sforce.soap.tooling.WebLinkType linkType) {
      this.linkType = linkType;
      linkType__is_set = true;
    }

    protected void setLinkType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("linkType", "urn:metadata.tooling.soap.sforce.com","linkType","urn:tooling.soap.sforce.com","WebLinkType",1,1,true))) {
        setLinkType((com.sforce.soap.tooling.WebLinkType)__typeMapper.readObject(__in, _lookupTypeInfo("linkType", "urn:metadata.tooling.soap.sforce.com","linkType","urn:tooling.soap.sforce.com","WebLinkType",1,1,true), com.sforce.soap.tooling.WebLinkType.class));
      }
    }

    private void writeFieldLinkType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("linkType", "urn:metadata.tooling.soap.sforce.com","linkType","urn:tooling.soap.sforce.com","WebLinkType",1,1,true), linkType, linkType__is_set);
    }

    /**
     * element : masterLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean masterLabel__is_set = false;

    private java.lang.String masterLabel;

    public java.lang.String getMasterLabel() {
      return masterLabel;
    }

    public void setMasterLabel(java.lang.String masterLabel) {
      this.masterLabel = masterLabel;
      masterLabel__is_set = true;
    }

    protected void setMasterLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setMasterLabel(__typeMapper.readString(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMasterLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true), masterLabel, masterLabel__is_set);
    }

    /**
     * element : openType of type {urn:tooling.soap.sforce.com}WebLinkWindowType
     * java type: com.sforce.soap.tooling.WebLinkWindowType
     */
    private boolean openType__is_set = false;

    private com.sforce.soap.tooling.WebLinkWindowType openType;

    public com.sforce.soap.tooling.WebLinkWindowType getOpenType() {
      return openType;
    }

    public void setOpenType(com.sforce.soap.tooling.WebLinkWindowType openType) {
      this.openType = openType;
      openType__is_set = true;
    }

    protected void setOpenType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("openType", "urn:metadata.tooling.soap.sforce.com","openType","urn:tooling.soap.sforce.com","WebLinkWindowType",1,1,true))) {
        setOpenType((com.sforce.soap.tooling.WebLinkWindowType)__typeMapper.readObject(__in, _lookupTypeInfo("openType", "urn:metadata.tooling.soap.sforce.com","openType","urn:tooling.soap.sforce.com","WebLinkWindowType",1,1,true), com.sforce.soap.tooling.WebLinkWindowType.class));
      }
    }

    private void writeFieldOpenType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("openType", "urn:metadata.tooling.soap.sforce.com","openType","urn:tooling.soap.sforce.com","WebLinkWindowType",1,1,true), openType, openType__is_set);
    }

    /**
     * element : page of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean page__is_set = false;

    private java.lang.String page;

    public java.lang.String getPage() {
      return page;
    }

    public void setPage(java.lang.String page) {
      this.page = page;
      page__is_set = true;
    }

    protected void setPage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("page", "urn:metadata.tooling.soap.sforce.com","page","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setPage(__typeMapper.readString(__in, _lookupTypeInfo("page", "urn:metadata.tooling.soap.sforce.com","page","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldPage(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("page", "urn:metadata.tooling.soap.sforce.com","page","http://www.w3.org/2001/XMLSchema","string",0,1,true), page, page__is_set);
    }

    /**
     * element : position of type {urn:tooling.soap.sforce.com}WebLinkPosition
     * java type: com.sforce.soap.tooling.WebLinkPosition
     */
    private boolean position__is_set = false;

    private com.sforce.soap.tooling.WebLinkPosition position;

    public com.sforce.soap.tooling.WebLinkPosition getPosition() {
      return position;
    }

    public void setPosition(com.sforce.soap.tooling.WebLinkPosition position) {
      this.position = position;
      position__is_set = true;
    }

    protected void setPosition(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("position", "urn:metadata.tooling.soap.sforce.com","position","urn:tooling.soap.sforce.com","WebLinkPosition",0,1,true))) {
        setPosition((com.sforce.soap.tooling.WebLinkPosition)__typeMapper.readObject(__in, _lookupTypeInfo("position", "urn:metadata.tooling.soap.sforce.com","position","urn:tooling.soap.sforce.com","WebLinkPosition",0,1,true), com.sforce.soap.tooling.WebLinkPosition.class));
      }
    }

    private void writeFieldPosition(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("position", "urn:metadata.tooling.soap.sforce.com","position","urn:tooling.soap.sforce.com","WebLinkPosition",0,1,true), position, position__is_set);
    }

    /**
     * element : protected of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean _protected__is_set = false;

    private boolean _protected;

    public boolean getProtected() {
      return _protected;
    }

    public boolean isProtected() {
      return _protected;
    }

    public void setProtected(boolean _protected) {
      this._protected = _protected;
      _protected__is_set = true;
    }

    protected void setProtected(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("_protected", "urn:metadata.tooling.soap.sforce.com","protected","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setProtected(__typeMapper.readBoolean(__in, _lookupTypeInfo("_protected", "urn:metadata.tooling.soap.sforce.com","protected","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldProtected(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("_protected", "urn:metadata.tooling.soap.sforce.com","protected","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), _protected, _protected__is_set);
    }

    /**
     * element : requireRowSelection of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean requireRowSelection__is_set = false;

    private boolean requireRowSelection;

    public boolean getRequireRowSelection() {
      return requireRowSelection;
    }

    public boolean isRequireRowSelection() {
      return requireRowSelection;
    }

    public void setRequireRowSelection(boolean requireRowSelection) {
      this.requireRowSelection = requireRowSelection;
      requireRowSelection__is_set = true;
    }

    protected void setRequireRowSelection(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("requireRowSelection", "urn:metadata.tooling.soap.sforce.com","requireRowSelection","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setRequireRowSelection(__typeMapper.readBoolean(__in, _lookupTypeInfo("requireRowSelection", "urn:metadata.tooling.soap.sforce.com","requireRowSelection","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldRequireRowSelection(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("requireRowSelection", "urn:metadata.tooling.soap.sforce.com","requireRowSelection","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), requireRowSelection, requireRowSelection__is_set);
    }

    /**
     * element : scontrol of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean scontrol__is_set = false;

    private java.lang.String scontrol;

    public java.lang.String getScontrol() {
      return scontrol;
    }

    public void setScontrol(java.lang.String scontrol) {
      this.scontrol = scontrol;
      scontrol__is_set = true;
    }

    protected void setScontrol(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("scontrol", "urn:metadata.tooling.soap.sforce.com","scontrol","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setScontrol(__typeMapper.readString(__in, _lookupTypeInfo("scontrol", "urn:metadata.tooling.soap.sforce.com","scontrol","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldScontrol(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("scontrol", "urn:metadata.tooling.soap.sforce.com","scontrol","http://www.w3.org/2001/XMLSchema","string",0,1,true), scontrol, scontrol__is_set);
    }

    /**
     * element : showsLocation of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean showsLocation__is_set = false;

    private boolean showsLocation;

    public boolean getShowsLocation() {
      return showsLocation;
    }

    public boolean isShowsLocation() {
      return showsLocation;
    }

    public void setShowsLocation(boolean showsLocation) {
      this.showsLocation = showsLocation;
      showsLocation__is_set = true;
    }

    protected void setShowsLocation(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("showsLocation", "urn:metadata.tooling.soap.sforce.com","showsLocation","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setShowsLocation(__typeMapper.readBoolean(__in, _lookupTypeInfo("showsLocation", "urn:metadata.tooling.soap.sforce.com","showsLocation","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldShowsLocation(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("showsLocation", "urn:metadata.tooling.soap.sforce.com","showsLocation","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), showsLocation, showsLocation__is_set);
    }

    /**
     * element : showsStatus of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean showsStatus__is_set = false;

    private boolean showsStatus;

    public boolean getShowsStatus() {
      return showsStatus;
    }

    public boolean isShowsStatus() {
      return showsStatus;
    }

    public void setShowsStatus(boolean showsStatus) {
      this.showsStatus = showsStatus;
      showsStatus__is_set = true;
    }

    protected void setShowsStatus(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("showsStatus", "urn:metadata.tooling.soap.sforce.com","showsStatus","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setShowsStatus(__typeMapper.readBoolean(__in, _lookupTypeInfo("showsStatus", "urn:metadata.tooling.soap.sforce.com","showsStatus","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldShowsStatus(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("showsStatus", "urn:metadata.tooling.soap.sforce.com","showsStatus","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), showsStatus, showsStatus__is_set);
    }

    /**
     * element : url of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean url__is_set = false;

    private java.lang.String url;

    public java.lang.String getUrl() {
      return url;
    }

    public void setUrl(java.lang.String url) {
      this.url = url;
      url__is_set = true;
    }

    protected void setUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("url", "urn:metadata.tooling.soap.sforce.com","url","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setUrl(__typeMapper.readString(__in, _lookupTypeInfo("url", "urn:metadata.tooling.soap.sforce.com","url","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldUrl(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("url", "urn:metadata.tooling.soap.sforce.com","url","http://www.w3.org/2001/XMLSchema","string",0,1,true), url, url__is_set);
    }

    /**
     * element : width of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean width__is_set = false;

    private int width;

    public int getWidth() {
      return width;
    }

    public void setWidth(int width) {
      this.width = width;
      width__is_set = true;
    }

    protected void setWidth(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("width", "urn:metadata.tooling.soap.sforce.com","width","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setWidth((int)__typeMapper.readInt(__in, _lookupTypeInfo("width", "urn:metadata.tooling.soap.sforce.com","width","http://www.w3.org/2001/XMLSchema","int",0,1,true), int.class));
      }
    }

    private void writeFieldWidth(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("width", "urn:metadata.tooling.soap.sforce.com","width","http://www.w3.org/2001/XMLSchema","int",0,1,true), width, width__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "CustomPageWebLink");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[CustomPageWebLink ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldAvailability(__out, __typeMapper);
      writeFieldDescription(__out, __typeMapper);
      writeFieldDisplayType(__out, __typeMapper);
      writeFieldEncodingKey(__out, __typeMapper);
      writeFieldHasMenubar(__out, __typeMapper);
      writeFieldHasScrollbars(__out, __typeMapper);
      writeFieldHasToolbar(__out, __typeMapper);
      writeFieldHeight(__out, __typeMapper);
      writeFieldIsResizable(__out, __typeMapper);
      writeFieldLinkType(__out, __typeMapper);
      writeFieldMasterLabel(__out, __typeMapper);
      writeFieldOpenType(__out, __typeMapper);
      writeFieldPage(__out, __typeMapper);
      writeFieldPosition(__out, __typeMapper);
      writeFieldProtected(__out, __typeMapper);
      writeFieldRequireRowSelection(__out, __typeMapper);
      writeFieldScontrol(__out, __typeMapper);
      writeFieldShowsLocation(__out, __typeMapper);
      writeFieldShowsStatus(__out, __typeMapper);
      writeFieldUrl(__out, __typeMapper);
      writeFieldWidth(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setAvailability(__in, __typeMapper);
      setDescription(__in, __typeMapper);
      setDisplayType(__in, __typeMapper);
      setEncodingKey(__in, __typeMapper);
      setHasMenubar(__in, __typeMapper);
      setHasScrollbars(__in, __typeMapper);
      setHasToolbar(__in, __typeMapper);
      setHeight(__in, __typeMapper);
      setIsResizable(__in, __typeMapper);
      setLinkType(__in, __typeMapper);
      setMasterLabel(__in, __typeMapper);
      setOpenType(__in, __typeMapper);
      setPage(__in, __typeMapper);
      setPosition(__in, __typeMapper);
      setProtected(__in, __typeMapper);
      setRequireRowSelection(__in, __typeMapper);
      setScontrol(__in, __typeMapper);
      setShowsLocation(__in, __typeMapper);
      setShowsStatus(__in, __typeMapper);
      setUrl(__in, __typeMapper);
      setWidth(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "availability", availability);
      toStringHelper(sb, "description", description);
      toStringHelper(sb, "displayType", displayType);
      toStringHelper(sb, "encodingKey", encodingKey);
      toStringHelper(sb, "hasMenubar", hasMenubar);
      toStringHelper(sb, "hasScrollbars", hasScrollbars);
      toStringHelper(sb, "hasToolbar", hasToolbar);
      toStringHelper(sb, "height", height);
      toStringHelper(sb, "isResizable", isResizable);
      toStringHelper(sb, "linkType", linkType);
      toStringHelper(sb, "masterLabel", masterLabel);
      toStringHelper(sb, "openType", openType);
      toStringHelper(sb, "page", page);
      toStringHelper(sb, "position", position);
      toStringHelper(sb, "_protected", _protected);
      toStringHelper(sb, "requireRowSelection", requireRowSelection);
      toStringHelper(sb, "scontrol", scontrol);
      toStringHelper(sb, "showsLocation", showsLocation);
      toStringHelper(sb, "showsStatus", showsStatus);
      toStringHelper(sb, "url", url);
      toStringHelper(sb, "width", width);
    }


}
