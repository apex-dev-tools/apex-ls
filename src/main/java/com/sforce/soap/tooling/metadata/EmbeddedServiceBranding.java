package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class EmbeddedServiceBranding extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public EmbeddedServiceBranding() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : contrastInvertedColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean contrastInvertedColor__is_set = false;

    private java.lang.String contrastInvertedColor;

    public java.lang.String getContrastInvertedColor() {
      return contrastInvertedColor;
    }

    public void setContrastInvertedColor(java.lang.String contrastInvertedColor) {
      this.contrastInvertedColor = contrastInvertedColor;
      contrastInvertedColor__is_set = true;
    }

    protected void setContrastInvertedColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("contrastInvertedColor", "urn:metadata.tooling.soap.sforce.com","contrastInvertedColor","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setContrastInvertedColor(__typeMapper.readString(__in, _lookupTypeInfo("contrastInvertedColor", "urn:metadata.tooling.soap.sforce.com","contrastInvertedColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldContrastInvertedColor(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("contrastInvertedColor", "urn:metadata.tooling.soap.sforce.com","contrastInvertedColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), contrastInvertedColor, contrastInvertedColor__is_set);
    }

    /**
     * element : contrastPrimaryColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean contrastPrimaryColor__is_set = false;

    private java.lang.String contrastPrimaryColor;

    public java.lang.String getContrastPrimaryColor() {
      return contrastPrimaryColor;
    }

    public void setContrastPrimaryColor(java.lang.String contrastPrimaryColor) {
      this.contrastPrimaryColor = contrastPrimaryColor;
      contrastPrimaryColor__is_set = true;
    }

    protected void setContrastPrimaryColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("contrastPrimaryColor", "urn:metadata.tooling.soap.sforce.com","contrastPrimaryColor","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setContrastPrimaryColor(__typeMapper.readString(__in, _lookupTypeInfo("contrastPrimaryColor", "urn:metadata.tooling.soap.sforce.com","contrastPrimaryColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldContrastPrimaryColor(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("contrastPrimaryColor", "urn:metadata.tooling.soap.sforce.com","contrastPrimaryColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), contrastPrimaryColor, contrastPrimaryColor__is_set);
    }

    /**
     * element : embeddedServiceConfig of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean embeddedServiceConfig__is_set = false;

    private java.lang.String embeddedServiceConfig;

    public java.lang.String getEmbeddedServiceConfig() {
      return embeddedServiceConfig;
    }

    public void setEmbeddedServiceConfig(java.lang.String embeddedServiceConfig) {
      this.embeddedServiceConfig = embeddedServiceConfig;
      embeddedServiceConfig__is_set = true;
    }

    protected void setEmbeddedServiceConfig(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("embeddedServiceConfig", "urn:metadata.tooling.soap.sforce.com","embeddedServiceConfig","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setEmbeddedServiceConfig(__typeMapper.readString(__in, _lookupTypeInfo("embeddedServiceConfig", "urn:metadata.tooling.soap.sforce.com","embeddedServiceConfig","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldEmbeddedServiceConfig(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("embeddedServiceConfig", "urn:metadata.tooling.soap.sforce.com","embeddedServiceConfig","http://www.w3.org/2001/XMLSchema","string",1,1,true), embeddedServiceConfig, embeddedServiceConfig__is_set);
    }

    /**
     * element : font of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean font__is_set = false;

    private java.lang.String font;

    public java.lang.String getFont() {
      return font;
    }

    public void setFont(java.lang.String font) {
      this.font = font;
      font__is_set = true;
    }

    protected void setFont(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("font", "urn:metadata.tooling.soap.sforce.com","font","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setFont(__typeMapper.readString(__in, _lookupTypeInfo("font", "urn:metadata.tooling.soap.sforce.com","font","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldFont(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("font", "urn:metadata.tooling.soap.sforce.com","font","http://www.w3.org/2001/XMLSchema","string",0,1,true), font, font__is_set);
    }

    /**
     * element : height of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean height__is_set = false;

    private int height;

    public int getHeight() {
      return height;
    }

    public void setHeight(int height) {
      this.height = height;
      height__is_set = true;
    }

    protected void setHeight(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("height", "urn:metadata.tooling.soap.sforce.com","height","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setHeight((int)__typeMapper.readInt(__in, _lookupTypeInfo("height", "urn:metadata.tooling.soap.sforce.com","height","http://www.w3.org/2001/XMLSchema","int",0,1,true), int.class));
      }
    }

    private void writeFieldHeight(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("height", "urn:metadata.tooling.soap.sforce.com","height","http://www.w3.org/2001/XMLSchema","int",0,1,true), height, height__is_set);
    }

    /**
     * element : masterLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean masterLabel__is_set = false;

    private java.lang.String masterLabel;

    public java.lang.String getMasterLabel() {
      return masterLabel;
    }

    public void setMasterLabel(java.lang.String masterLabel) {
      this.masterLabel = masterLabel;
      masterLabel__is_set = true;
    }

    protected void setMasterLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setMasterLabel(__typeMapper.readString(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMasterLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true), masterLabel, masterLabel__is_set);
    }

    /**
     * element : navBarColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean navBarColor__is_set = false;

    private java.lang.String navBarColor;

    public java.lang.String getNavBarColor() {
      return navBarColor;
    }

    public void setNavBarColor(java.lang.String navBarColor) {
      this.navBarColor = navBarColor;
      navBarColor__is_set = true;
    }

    protected void setNavBarColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("navBarColor", "urn:metadata.tooling.soap.sforce.com","navBarColor","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setNavBarColor(__typeMapper.readString(__in, _lookupTypeInfo("navBarColor", "urn:metadata.tooling.soap.sforce.com","navBarColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldNavBarColor(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("navBarColor", "urn:metadata.tooling.soap.sforce.com","navBarColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), navBarColor, navBarColor__is_set);
    }

    /**
     * element : primaryColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean primaryColor__is_set = false;

    private java.lang.String primaryColor;

    public java.lang.String getPrimaryColor() {
      return primaryColor;
    }

    public void setPrimaryColor(java.lang.String primaryColor) {
      this.primaryColor = primaryColor;
      primaryColor__is_set = true;
    }

    protected void setPrimaryColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("primaryColor", "urn:metadata.tooling.soap.sforce.com","primaryColor","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setPrimaryColor(__typeMapper.readString(__in, _lookupTypeInfo("primaryColor", "urn:metadata.tooling.soap.sforce.com","primaryColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldPrimaryColor(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("primaryColor", "urn:metadata.tooling.soap.sforce.com","primaryColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), primaryColor, primaryColor__is_set);
    }

    /**
     * element : secondaryColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean secondaryColor__is_set = false;

    private java.lang.String secondaryColor;

    public java.lang.String getSecondaryColor() {
      return secondaryColor;
    }

    public void setSecondaryColor(java.lang.String secondaryColor) {
      this.secondaryColor = secondaryColor;
      secondaryColor__is_set = true;
    }

    protected void setSecondaryColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("secondaryColor", "urn:metadata.tooling.soap.sforce.com","secondaryColor","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setSecondaryColor(__typeMapper.readString(__in, _lookupTypeInfo("secondaryColor", "urn:metadata.tooling.soap.sforce.com","secondaryColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSecondaryColor(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("secondaryColor", "urn:metadata.tooling.soap.sforce.com","secondaryColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), secondaryColor, secondaryColor__is_set);
    }

    /**
     * element : width of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean width__is_set = false;

    private int width;

    public int getWidth() {
      return width;
    }

    public void setWidth(int width) {
      this.width = width;
      width__is_set = true;
    }

    protected void setWidth(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("width", "urn:metadata.tooling.soap.sforce.com","width","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setWidth((int)__typeMapper.readInt(__in, _lookupTypeInfo("width", "urn:metadata.tooling.soap.sforce.com","width","http://www.w3.org/2001/XMLSchema","int",0,1,true), int.class));
      }
    }

    private void writeFieldWidth(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("width", "urn:metadata.tooling.soap.sforce.com","width","http://www.w3.org/2001/XMLSchema","int",0,1,true), width, width__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "EmbeddedServiceBranding");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EmbeddedServiceBranding ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldContrastInvertedColor(__out, __typeMapper);
      writeFieldContrastPrimaryColor(__out, __typeMapper);
      writeFieldEmbeddedServiceConfig(__out, __typeMapper);
      writeFieldFont(__out, __typeMapper);
      writeFieldHeight(__out, __typeMapper);
      writeFieldMasterLabel(__out, __typeMapper);
      writeFieldNavBarColor(__out, __typeMapper);
      writeFieldPrimaryColor(__out, __typeMapper);
      writeFieldSecondaryColor(__out, __typeMapper);
      writeFieldWidth(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setContrastInvertedColor(__in, __typeMapper);
      setContrastPrimaryColor(__in, __typeMapper);
      setEmbeddedServiceConfig(__in, __typeMapper);
      setFont(__in, __typeMapper);
      setHeight(__in, __typeMapper);
      setMasterLabel(__in, __typeMapper);
      setNavBarColor(__in, __typeMapper);
      setPrimaryColor(__in, __typeMapper);
      setSecondaryColor(__in, __typeMapper);
      setWidth(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "contrastInvertedColor", contrastInvertedColor);
      toStringHelper(sb, "contrastPrimaryColor", contrastPrimaryColor);
      toStringHelper(sb, "embeddedServiceConfig", embeddedServiceConfig);
      toStringHelper(sb, "font", font);
      toStringHelper(sb, "height", height);
      toStringHelper(sb, "masterLabel", masterLabel);
      toStringHelper(sb, "navBarColor", navBarColor);
      toStringHelper(sb, "primaryColor", primaryColor);
      toStringHelper(sb, "secondaryColor", secondaryColor);
      toStringHelper(sb, "width", width);
    }


}
