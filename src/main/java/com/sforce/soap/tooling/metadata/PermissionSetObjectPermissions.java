package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class PermissionSetObjectPermissions implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public PermissionSetObjectPermissions() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : allowCreate of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean allowCreate__is_set = false;

    private boolean allowCreate;

    public boolean getAllowCreate() {
      return allowCreate;
    }

    public boolean isAllowCreate() {
      return allowCreate;
    }

    public void setAllowCreate(boolean allowCreate) {
      this.allowCreate = allowCreate;
      allowCreate__is_set = true;
    }

    protected void setAllowCreate(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("allowCreate", "urn:metadata.tooling.soap.sforce.com","allowCreate","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setAllowCreate(__typeMapper.readBoolean(__in, _lookupTypeInfo("allowCreate", "urn:metadata.tooling.soap.sforce.com","allowCreate","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldAllowCreate(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("allowCreate", "urn:metadata.tooling.soap.sforce.com","allowCreate","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), allowCreate, allowCreate__is_set);
    }

    /**
     * element : allowDelete of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean allowDelete__is_set = false;

    private boolean allowDelete;

    public boolean getAllowDelete() {
      return allowDelete;
    }

    public boolean isAllowDelete() {
      return allowDelete;
    }

    public void setAllowDelete(boolean allowDelete) {
      this.allowDelete = allowDelete;
      allowDelete__is_set = true;
    }

    protected void setAllowDelete(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("allowDelete", "urn:metadata.tooling.soap.sforce.com","allowDelete","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setAllowDelete(__typeMapper.readBoolean(__in, _lookupTypeInfo("allowDelete", "urn:metadata.tooling.soap.sforce.com","allowDelete","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldAllowDelete(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("allowDelete", "urn:metadata.tooling.soap.sforce.com","allowDelete","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), allowDelete, allowDelete__is_set);
    }

    /**
     * element : allowEdit of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean allowEdit__is_set = false;

    private boolean allowEdit;

    public boolean getAllowEdit() {
      return allowEdit;
    }

    public boolean isAllowEdit() {
      return allowEdit;
    }

    public void setAllowEdit(boolean allowEdit) {
      this.allowEdit = allowEdit;
      allowEdit__is_set = true;
    }

    protected void setAllowEdit(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("allowEdit", "urn:metadata.tooling.soap.sforce.com","allowEdit","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setAllowEdit(__typeMapper.readBoolean(__in, _lookupTypeInfo("allowEdit", "urn:metadata.tooling.soap.sforce.com","allowEdit","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldAllowEdit(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("allowEdit", "urn:metadata.tooling.soap.sforce.com","allowEdit","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), allowEdit, allowEdit__is_set);
    }

    /**
     * element : allowRead of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean allowRead__is_set = false;

    private boolean allowRead;

    public boolean getAllowRead() {
      return allowRead;
    }

    public boolean isAllowRead() {
      return allowRead;
    }

    public void setAllowRead(boolean allowRead) {
      this.allowRead = allowRead;
      allowRead__is_set = true;
    }

    protected void setAllowRead(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("allowRead", "urn:metadata.tooling.soap.sforce.com","allowRead","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setAllowRead(__typeMapper.readBoolean(__in, _lookupTypeInfo("allowRead", "urn:metadata.tooling.soap.sforce.com","allowRead","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldAllowRead(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("allowRead", "urn:metadata.tooling.soap.sforce.com","allowRead","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), allowRead, allowRead__is_set);
    }

    /**
     * element : modifyAllRecords of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean modifyAllRecords__is_set = false;

    private boolean modifyAllRecords;

    public boolean getModifyAllRecords() {
      return modifyAllRecords;
    }

    public boolean isModifyAllRecords() {
      return modifyAllRecords;
    }

    public void setModifyAllRecords(boolean modifyAllRecords) {
      this.modifyAllRecords = modifyAllRecords;
      modifyAllRecords__is_set = true;
    }

    protected void setModifyAllRecords(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("modifyAllRecords", "urn:metadata.tooling.soap.sforce.com","modifyAllRecords","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setModifyAllRecords(__typeMapper.readBoolean(__in, _lookupTypeInfo("modifyAllRecords", "urn:metadata.tooling.soap.sforce.com","modifyAllRecords","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldModifyAllRecords(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("modifyAllRecords", "urn:metadata.tooling.soap.sforce.com","modifyAllRecords","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), modifyAllRecords, modifyAllRecords__is_set);
    }

    /**
     * element : object of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean object__is_set = false;

    private java.lang.String object;

    public java.lang.String getObject() {
      return object;
    }

    public void setObject(java.lang.String object) {
      this.object = object;
      object__is_set = true;
    }

    protected void setObject(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("object", "urn:metadata.tooling.soap.sforce.com","object","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setObject(__typeMapper.readString(__in, _lookupTypeInfo("object", "urn:metadata.tooling.soap.sforce.com","object","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldObject(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("object", "urn:metadata.tooling.soap.sforce.com","object","http://www.w3.org/2001/XMLSchema","string",1,1,true), object, object__is_set);
    }

    /**
     * element : viewAllRecords of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean viewAllRecords__is_set = false;

    private boolean viewAllRecords;

    public boolean getViewAllRecords() {
      return viewAllRecords;
    }

    public boolean isViewAllRecords() {
      return viewAllRecords;
    }

    public void setViewAllRecords(boolean viewAllRecords) {
      this.viewAllRecords = viewAllRecords;
      viewAllRecords__is_set = true;
    }

    protected void setViewAllRecords(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("viewAllRecords", "urn:metadata.tooling.soap.sforce.com","viewAllRecords","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setViewAllRecords(__typeMapper.readBoolean(__in, _lookupTypeInfo("viewAllRecords", "urn:metadata.tooling.soap.sforce.com","viewAllRecords","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldViewAllRecords(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("viewAllRecords", "urn:metadata.tooling.soap.sforce.com","viewAllRecords","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), viewAllRecords, viewAllRecords__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[PermissionSetObjectPermissions ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldAllowCreate(__out, __typeMapper);
      writeFieldAllowDelete(__out, __typeMapper);
      writeFieldAllowEdit(__out, __typeMapper);
      writeFieldAllowRead(__out, __typeMapper);
      writeFieldModifyAllRecords(__out, __typeMapper);
      writeFieldObject(__out, __typeMapper);
      writeFieldViewAllRecords(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setAllowCreate(__in, __typeMapper);
      setAllowDelete(__in, __typeMapper);
      setAllowEdit(__in, __typeMapper);
      setAllowRead(__in, __typeMapper);
      setModifyAllRecords(__in, __typeMapper);
      setObject(__in, __typeMapper);
      setViewAllRecords(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "allowCreate", allowCreate);
      toStringHelper(sb, "allowDelete", allowDelete);
      toStringHelper(sb, "allowEdit", allowEdit);
      toStringHelper(sb, "allowRead", allowRead);
      toStringHelper(sb, "modifyAllRecords", modifyAllRecords);
      toStringHelper(sb, "object", object);
      toStringHelper(sb, "viewAllRecords", viewAllRecords);
    }


}
