package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class FeedItemSettings implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public FeedItemSettings() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : characterLimit of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean characterLimit__is_set = false;

    private int characterLimit;

    public int getCharacterLimit() {
      return characterLimit;
    }

    public void setCharacterLimit(int characterLimit) {
      this.characterLimit = characterLimit;
      characterLimit__is_set = true;
    }

    protected void setCharacterLimit(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("characterLimit", "urn:metadata.tooling.soap.sforce.com","characterLimit","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setCharacterLimit((int)__typeMapper.readInt(__in, _lookupTypeInfo("characterLimit", "urn:metadata.tooling.soap.sforce.com","characterLimit","http://www.w3.org/2001/XMLSchema","int",0,1,true), int.class));
      }
    }

    private void writeFieldCharacterLimit(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("characterLimit", "urn:metadata.tooling.soap.sforce.com","characterLimit","http://www.w3.org/2001/XMLSchema","int",0,1,true), characterLimit, characterLimit__is_set);
    }

    /**
     * element : collapseThread of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean collapseThread__is_set = false;

    private boolean collapseThread;

    public boolean getCollapseThread() {
      return collapseThread;
    }

    public boolean isCollapseThread() {
      return collapseThread;
    }

    public void setCollapseThread(boolean collapseThread) {
      this.collapseThread = collapseThread;
      collapseThread__is_set = true;
    }

    protected void setCollapseThread(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("collapseThread", "urn:metadata.tooling.soap.sforce.com","collapseThread","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setCollapseThread(__typeMapper.readBoolean(__in, _lookupTypeInfo("collapseThread", "urn:metadata.tooling.soap.sforce.com","collapseThread","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldCollapseThread(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("collapseThread", "urn:metadata.tooling.soap.sforce.com","collapseThread","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), collapseThread, collapseThread__is_set);
    }

    /**
     * element : displayFormat of type {urn:tooling.soap.sforce.com}FeedItemDisplayFormat
     * java type: com.sforce.soap.tooling.FeedItemDisplayFormat
     */
    private boolean displayFormat__is_set = false;

    private com.sforce.soap.tooling.FeedItemDisplayFormat displayFormat;

    public com.sforce.soap.tooling.FeedItemDisplayFormat getDisplayFormat() {
      return displayFormat;
    }

    public void setDisplayFormat(com.sforce.soap.tooling.FeedItemDisplayFormat displayFormat) {
      this.displayFormat = displayFormat;
      displayFormat__is_set = true;
    }

    protected void setDisplayFormat(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("displayFormat", "urn:metadata.tooling.soap.sforce.com","displayFormat","urn:tooling.soap.sforce.com","FeedItemDisplayFormat",0,1,true))) {
        setDisplayFormat((com.sforce.soap.tooling.FeedItemDisplayFormat)__typeMapper.readObject(__in, _lookupTypeInfo("displayFormat", "urn:metadata.tooling.soap.sforce.com","displayFormat","urn:tooling.soap.sforce.com","FeedItemDisplayFormat",0,1,true), com.sforce.soap.tooling.FeedItemDisplayFormat.class));
      }
    }

    private void writeFieldDisplayFormat(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("displayFormat", "urn:metadata.tooling.soap.sforce.com","displayFormat","urn:tooling.soap.sforce.com","FeedItemDisplayFormat",0,1,true), displayFormat, displayFormat__is_set);
    }

    /**
     * element : feedItemType of type {urn:tooling.soap.sforce.com}FeedItemType
     * java type: com.sforce.soap.tooling.FeedItemType
     */
    private boolean feedItemType__is_set = false;

    private com.sforce.soap.tooling.FeedItemType feedItemType;

    public com.sforce.soap.tooling.FeedItemType getFeedItemType() {
      return feedItemType;
    }

    public void setFeedItemType(com.sforce.soap.tooling.FeedItemType feedItemType) {
      this.feedItemType = feedItemType;
      feedItemType__is_set = true;
    }

    protected void setFeedItemType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("feedItemType", "urn:metadata.tooling.soap.sforce.com","feedItemType","urn:tooling.soap.sforce.com","FeedItemType",1,1,true))) {
        setFeedItemType((com.sforce.soap.tooling.FeedItemType)__typeMapper.readObject(__in, _lookupTypeInfo("feedItemType", "urn:metadata.tooling.soap.sforce.com","feedItemType","urn:tooling.soap.sforce.com","FeedItemType",1,1,true), com.sforce.soap.tooling.FeedItemType.class));
      }
    }

    private void writeFieldFeedItemType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("feedItemType", "urn:metadata.tooling.soap.sforce.com","feedItemType","urn:tooling.soap.sforce.com","FeedItemType",1,1,true), feedItemType, feedItemType__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FeedItemSettings ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldCharacterLimit(__out, __typeMapper);
      writeFieldCollapseThread(__out, __typeMapper);
      writeFieldDisplayFormat(__out, __typeMapper);
      writeFieldFeedItemType(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setCharacterLimit(__in, __typeMapper);
      setCollapseThread(__in, __typeMapper);
      setDisplayFormat(__in, __typeMapper);
      setFeedItemType(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "characterLimit", characterLimit);
      toStringHelper(sb, "collapseThread", collapseThread);
      toStringHelper(sb, "displayFormat", displayFormat);
      toStringHelper(sb, "feedItemType", feedItemType);
    }


}
