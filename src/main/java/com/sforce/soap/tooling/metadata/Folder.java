package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class Folder extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public Folder() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : accessType of type {urn:tooling.soap.sforce.com}FolderAccessTypes
     * java type: com.sforce.soap.tooling.FolderAccessTypes
     */
    private boolean accessType__is_set = false;

    private com.sforce.soap.tooling.FolderAccessTypes accessType;

    public com.sforce.soap.tooling.FolderAccessTypes getAccessType() {
      return accessType;
    }

    public void setAccessType(com.sforce.soap.tooling.FolderAccessTypes accessType) {
      this.accessType = accessType;
      accessType__is_set = true;
    }

    protected void setAccessType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("accessType", "urn:metadata.tooling.soap.sforce.com","accessType","urn:tooling.soap.sforce.com","FolderAccessTypes",0,1,true))) {
        setAccessType((com.sforce.soap.tooling.FolderAccessTypes)__typeMapper.readObject(__in, _lookupTypeInfo("accessType", "urn:metadata.tooling.soap.sforce.com","accessType","urn:tooling.soap.sforce.com","FolderAccessTypes",0,1,true), com.sforce.soap.tooling.FolderAccessTypes.class));
      }
    }

    private void writeFieldAccessType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("accessType", "urn:metadata.tooling.soap.sforce.com","accessType","urn:tooling.soap.sforce.com","FolderAccessTypes",0,1,true), accessType, accessType__is_set);
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean name__is_set = false;

    private java.lang.String name;

    public java.lang.String getName() {
      return name;
    }

    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("name", "urn:metadata.tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setName(__typeMapper.readString(__in, _lookupTypeInfo("name", "urn:metadata.tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("name", "urn:metadata.tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), name, name__is_set);
    }

    /**
     * element : publicFolderAccess of type {urn:tooling.soap.sforce.com}PublicFolderAccess
     * java type: com.sforce.soap.tooling.PublicFolderAccess
     */
    private boolean publicFolderAccess__is_set = false;

    private com.sforce.soap.tooling.PublicFolderAccess publicFolderAccess;

    public com.sforce.soap.tooling.PublicFolderAccess getPublicFolderAccess() {
      return publicFolderAccess;
    }

    public void setPublicFolderAccess(com.sforce.soap.tooling.PublicFolderAccess publicFolderAccess) {
      this.publicFolderAccess = publicFolderAccess;
      publicFolderAccess__is_set = true;
    }

    protected void setPublicFolderAccess(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("publicFolderAccess", "urn:metadata.tooling.soap.sforce.com","publicFolderAccess","urn:tooling.soap.sforce.com","PublicFolderAccess",0,1,true))) {
        setPublicFolderAccess((com.sforce.soap.tooling.PublicFolderAccess)__typeMapper.readObject(__in, _lookupTypeInfo("publicFolderAccess", "urn:metadata.tooling.soap.sforce.com","publicFolderAccess","urn:tooling.soap.sforce.com","PublicFolderAccess",0,1,true), com.sforce.soap.tooling.PublicFolderAccess.class));
      }
    }

    private void writeFieldPublicFolderAccess(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("publicFolderAccess", "urn:metadata.tooling.soap.sforce.com","publicFolderAccess","urn:tooling.soap.sforce.com","PublicFolderAccess",0,1,true), publicFolderAccess, publicFolderAccess__is_set);
    }

    /**
     * element : sharedTo of type {urn:metadata.tooling.soap.sforce.com}SharedTo
     * java type: com.sforce.soap.tooling.metadata.SharedTo
     */
    private boolean sharedTo__is_set = false;

    private com.sforce.soap.tooling.metadata.SharedTo sharedTo;

    public com.sforce.soap.tooling.metadata.SharedTo getSharedTo() {
      return sharedTo;
    }

    public void setSharedTo(com.sforce.soap.tooling.metadata.SharedTo sharedTo) {
      this.sharedTo = sharedTo;
      sharedTo__is_set = true;
    }

    protected void setSharedTo(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("sharedTo", "urn:metadata.tooling.soap.sforce.com","sharedTo","urn:metadata.tooling.soap.sforce.com","SharedTo",0,1,true))) {
        setSharedTo((com.sforce.soap.tooling.metadata.SharedTo)__typeMapper.readObject(__in, _lookupTypeInfo("sharedTo", "urn:metadata.tooling.soap.sforce.com","sharedTo","urn:metadata.tooling.soap.sforce.com","SharedTo",0,1,true), com.sforce.soap.tooling.metadata.SharedTo.class));
      }
    }

    private void writeFieldSharedTo(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("sharedTo", "urn:metadata.tooling.soap.sforce.com","sharedTo","urn:metadata.tooling.soap.sforce.com","SharedTo",0,1,true), sharedTo, sharedTo__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "Folder");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[Folder ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldAccessType(__out, __typeMapper);
      writeFieldName(__out, __typeMapper);
      writeFieldPublicFolderAccess(__out, __typeMapper);
      writeFieldSharedTo(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setAccessType(__in, __typeMapper);
      setName(__in, __typeMapper);
      setPublicFolderAccess(__in, __typeMapper);
      setSharedTo(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "accessType", accessType);
      toStringHelper(sb, "name", name);
      toStringHelper(sb, "publicFolderAccess", publicFolderAccess);
      toStringHelper(sb, "sharedTo", sharedTo);
    }


}
