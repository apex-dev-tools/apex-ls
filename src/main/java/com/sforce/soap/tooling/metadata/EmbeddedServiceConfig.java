package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class EmbeddedServiceConfig extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public EmbeddedServiceConfig() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : authMethod of type {urn:tooling.soap.sforce.com}EmbeddedServiceAuthMethod
     * java type: com.sforce.soap.tooling.EmbeddedServiceAuthMethod
     */
    private boolean authMethod__is_set = false;

    private com.sforce.soap.tooling.EmbeddedServiceAuthMethod authMethod;

    public com.sforce.soap.tooling.EmbeddedServiceAuthMethod getAuthMethod() {
      return authMethod;
    }

    public void setAuthMethod(com.sforce.soap.tooling.EmbeddedServiceAuthMethod authMethod) {
      this.authMethod = authMethod;
      authMethod__is_set = true;
    }

    protected void setAuthMethod(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("authMethod", "urn:metadata.tooling.soap.sforce.com","authMethod","urn:tooling.soap.sforce.com","EmbeddedServiceAuthMethod",0,1,true))) {
        setAuthMethod((com.sforce.soap.tooling.EmbeddedServiceAuthMethod)__typeMapper.readObject(__in, _lookupTypeInfo("authMethod", "urn:metadata.tooling.soap.sforce.com","authMethod","urn:tooling.soap.sforce.com","EmbeddedServiceAuthMethod",0,1,true), com.sforce.soap.tooling.EmbeddedServiceAuthMethod.class));
      }
    }

    private void writeFieldAuthMethod(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("authMethod", "urn:metadata.tooling.soap.sforce.com","authMethod","urn:tooling.soap.sforce.com","EmbeddedServiceAuthMethod",0,1,true), authMethod, authMethod__is_set);
    }

    /**
     * element : customMinimizedComponent of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean customMinimizedComponent__is_set = false;

    private java.lang.String customMinimizedComponent;

    public java.lang.String getCustomMinimizedComponent() {
      return customMinimizedComponent;
    }

    public void setCustomMinimizedComponent(java.lang.String customMinimizedComponent) {
      this.customMinimizedComponent = customMinimizedComponent;
      customMinimizedComponent__is_set = true;
    }

    protected void setCustomMinimizedComponent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("customMinimizedComponent", "urn:metadata.tooling.soap.sforce.com","customMinimizedComponent","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setCustomMinimizedComponent(__typeMapper.readString(__in, _lookupTypeInfo("customMinimizedComponent", "urn:metadata.tooling.soap.sforce.com","customMinimizedComponent","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldCustomMinimizedComponent(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("customMinimizedComponent", "urn:metadata.tooling.soap.sforce.com","customMinimizedComponent","http://www.w3.org/2001/XMLSchema","string",0,1,true), customMinimizedComponent, customMinimizedComponent__is_set);
    }

    /**
     * element : masterLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean masterLabel__is_set = false;

    private java.lang.String masterLabel;

    public java.lang.String getMasterLabel() {
      return masterLabel;
    }

    public void setMasterLabel(java.lang.String masterLabel) {
      this.masterLabel = masterLabel;
      masterLabel__is_set = true;
    }

    protected void setMasterLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setMasterLabel(__typeMapper.readString(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMasterLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true), masterLabel, masterLabel__is_set);
    }

    /**
     * element : shouldHideAuthDialog of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean shouldHideAuthDialog__is_set = false;

    private boolean shouldHideAuthDialog;

    public boolean getShouldHideAuthDialog() {
      return shouldHideAuthDialog;
    }

    public boolean isShouldHideAuthDialog() {
      return shouldHideAuthDialog;
    }

    public void setShouldHideAuthDialog(boolean shouldHideAuthDialog) {
      this.shouldHideAuthDialog = shouldHideAuthDialog;
      shouldHideAuthDialog__is_set = true;
    }

    protected void setShouldHideAuthDialog(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("shouldHideAuthDialog", "urn:metadata.tooling.soap.sforce.com","shouldHideAuthDialog","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setShouldHideAuthDialog(__typeMapper.readBoolean(__in, _lookupTypeInfo("shouldHideAuthDialog", "urn:metadata.tooling.soap.sforce.com","shouldHideAuthDialog","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldShouldHideAuthDialog(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("shouldHideAuthDialog", "urn:metadata.tooling.soap.sforce.com","shouldHideAuthDialog","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), shouldHideAuthDialog, shouldHideAuthDialog__is_set);
    }

    /**
     * element : site of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean site__is_set = false;

    private java.lang.String site;

    public java.lang.String getSite() {
      return site;
    }

    public void setSite(java.lang.String site) {
      this.site = site;
      site__is_set = true;
    }

    protected void setSite(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("site", "urn:metadata.tooling.soap.sforce.com","site","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setSite(__typeMapper.readString(__in, _lookupTypeInfo("site", "urn:metadata.tooling.soap.sforce.com","site","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSite(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("site", "urn:metadata.tooling.soap.sforce.com","site","http://www.w3.org/2001/XMLSchema","string",1,1,true), site, site__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "EmbeddedServiceConfig");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EmbeddedServiceConfig ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldAuthMethod(__out, __typeMapper);
      writeFieldCustomMinimizedComponent(__out, __typeMapper);
      writeFieldMasterLabel(__out, __typeMapper);
      writeFieldShouldHideAuthDialog(__out, __typeMapper);
      writeFieldSite(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setAuthMethod(__in, __typeMapper);
      setCustomMinimizedComponent(__in, __typeMapper);
      setMasterLabel(__in, __typeMapper);
      setShouldHideAuthDialog(__in, __typeMapper);
      setSite(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "authMethod", authMethod);
      toStringHelper(sb, "customMinimizedComponent", customMinimizedComponent);
      toStringHelper(sb, "masterLabel", masterLabel);
      toStringHelper(sb, "shouldHideAuthDialog", shouldHideAuthDialog);
      toStringHelper(sb, "site", site);
    }


}
