package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class FlowScreen extends com.sforce.soap.tooling.metadata.FlowNode {

    /**
     * Constructor
     */
    public FlowScreen() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : allowBack of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean allowBack__is_set = false;

    private boolean allowBack;

    public boolean getAllowBack() {
      return allowBack;
    }

    public boolean isAllowBack() {
      return allowBack;
    }

    public void setAllowBack(boolean allowBack) {
      this.allowBack = allowBack;
      allowBack__is_set = true;
    }

    protected void setAllowBack(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("allowBack", "urn:metadata.tooling.soap.sforce.com","allowBack","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setAllowBack(__typeMapper.readBoolean(__in, _lookupTypeInfo("allowBack", "urn:metadata.tooling.soap.sforce.com","allowBack","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldAllowBack(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("allowBack", "urn:metadata.tooling.soap.sforce.com","allowBack","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), allowBack, allowBack__is_set);
    }

    /**
     * element : allowFinish of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean allowFinish__is_set = false;

    private boolean allowFinish;

    public boolean getAllowFinish() {
      return allowFinish;
    }

    public boolean isAllowFinish() {
      return allowFinish;
    }

    public void setAllowFinish(boolean allowFinish) {
      this.allowFinish = allowFinish;
      allowFinish__is_set = true;
    }

    protected void setAllowFinish(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("allowFinish", "urn:metadata.tooling.soap.sforce.com","allowFinish","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setAllowFinish(__typeMapper.readBoolean(__in, _lookupTypeInfo("allowFinish", "urn:metadata.tooling.soap.sforce.com","allowFinish","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldAllowFinish(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("allowFinish", "urn:metadata.tooling.soap.sforce.com","allowFinish","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), allowFinish, allowFinish__is_set);
    }

    /**
     * element : allowPause of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean allowPause__is_set = false;

    private boolean allowPause;

    public boolean getAllowPause() {
      return allowPause;
    }

    public boolean isAllowPause() {
      return allowPause;
    }

    public void setAllowPause(boolean allowPause) {
      this.allowPause = allowPause;
      allowPause__is_set = true;
    }

    protected void setAllowPause(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("allowPause", "urn:metadata.tooling.soap.sforce.com","allowPause","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setAllowPause(__typeMapper.readBoolean(__in, _lookupTypeInfo("allowPause", "urn:metadata.tooling.soap.sforce.com","allowPause","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldAllowPause(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("allowPause", "urn:metadata.tooling.soap.sforce.com","allowPause","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), allowPause, allowPause__is_set);
    }

    /**
     * element : connector of type {urn:metadata.tooling.soap.sforce.com}FlowConnector
     * java type: com.sforce.soap.tooling.metadata.FlowConnector
     */
    private boolean connector__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowConnector connector;

    public com.sforce.soap.tooling.metadata.FlowConnector getConnector() {
      return connector;
    }

    public void setConnector(com.sforce.soap.tooling.metadata.FlowConnector connector) {
      this.connector = connector;
      connector__is_set = true;
    }

    protected void setConnector(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("connector", "urn:metadata.tooling.soap.sforce.com","connector","urn:metadata.tooling.soap.sforce.com","FlowConnector",0,1,true))) {
        setConnector((com.sforce.soap.tooling.metadata.FlowConnector)__typeMapper.readObject(__in, _lookupTypeInfo("connector", "urn:metadata.tooling.soap.sforce.com","connector","urn:metadata.tooling.soap.sforce.com","FlowConnector",0,1,true), com.sforce.soap.tooling.metadata.FlowConnector.class));
      }
    }

    private void writeFieldConnector(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("connector", "urn:metadata.tooling.soap.sforce.com","connector","urn:metadata.tooling.soap.sforce.com","FlowConnector",0,1,true), connector, connector__is_set);
    }

    /**
     * element : fields of type {urn:metadata.tooling.soap.sforce.com}FlowScreenField
     * java type: com.sforce.soap.tooling.metadata.FlowScreenField[]
     */
    private boolean fields__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowScreenField[] fields = new com.sforce.soap.tooling.metadata.FlowScreenField[0];

    public com.sforce.soap.tooling.metadata.FlowScreenField[] getFields() {
      return fields;
    }

    public void setFields(com.sforce.soap.tooling.metadata.FlowScreenField[] fields) {
      this.fields = fields;
      fields__is_set = true;
    }

    protected void setFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("fields", "urn:metadata.tooling.soap.sforce.com","fields","urn:metadata.tooling.soap.sforce.com","FlowScreenField",0,-1,true))) {
        setFields((com.sforce.soap.tooling.metadata.FlowScreenField[])__typeMapper.readObject(__in, _lookupTypeInfo("fields", "urn:metadata.tooling.soap.sforce.com","fields","urn:metadata.tooling.soap.sforce.com","FlowScreenField",0,-1,true), com.sforce.soap.tooling.metadata.FlowScreenField[].class));
      }
    }

    private void writeFieldFields(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fields", "urn:metadata.tooling.soap.sforce.com","fields","urn:metadata.tooling.soap.sforce.com","FlowScreenField",0,-1,true), fields, fields__is_set);
    }

    /**
     * element : helpText of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean helpText__is_set = false;

    private java.lang.String helpText;

    public java.lang.String getHelpText() {
      return helpText;
    }

    public void setHelpText(java.lang.String helpText) {
      this.helpText = helpText;
      helpText__is_set = true;
    }

    protected void setHelpText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("helpText", "urn:metadata.tooling.soap.sforce.com","helpText","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setHelpText(__typeMapper.readString(__in, _lookupTypeInfo("helpText", "urn:metadata.tooling.soap.sforce.com","helpText","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldHelpText(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("helpText", "urn:metadata.tooling.soap.sforce.com","helpText","http://www.w3.org/2001/XMLSchema","string",0,1,true), helpText, helpText__is_set);
    }

    /**
     * element : pausedText of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean pausedText__is_set = false;

    private java.lang.String pausedText;

    public java.lang.String getPausedText() {
      return pausedText;
    }

    public void setPausedText(java.lang.String pausedText) {
      this.pausedText = pausedText;
      pausedText__is_set = true;
    }

    protected void setPausedText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("pausedText", "urn:metadata.tooling.soap.sforce.com","pausedText","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setPausedText(__typeMapper.readString(__in, _lookupTypeInfo("pausedText", "urn:metadata.tooling.soap.sforce.com","pausedText","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldPausedText(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("pausedText", "urn:metadata.tooling.soap.sforce.com","pausedText","http://www.w3.org/2001/XMLSchema","string",0,1,true), pausedText, pausedText__is_set);
    }

    /**
     * element : rules of type {urn:metadata.tooling.soap.sforce.com}FlowScreenRule
     * java type: com.sforce.soap.tooling.metadata.FlowScreenRule[]
     */
    private boolean rules__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowScreenRule[] rules = new com.sforce.soap.tooling.metadata.FlowScreenRule[0];

    public com.sforce.soap.tooling.metadata.FlowScreenRule[] getRules() {
      return rules;
    }

    public void setRules(com.sforce.soap.tooling.metadata.FlowScreenRule[] rules) {
      this.rules = rules;
      rules__is_set = true;
    }

    protected void setRules(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("rules", "urn:metadata.tooling.soap.sforce.com","rules","urn:metadata.tooling.soap.sforce.com","FlowScreenRule",0,-1,true))) {
        setRules((com.sforce.soap.tooling.metadata.FlowScreenRule[])__typeMapper.readObject(__in, _lookupTypeInfo("rules", "urn:metadata.tooling.soap.sforce.com","rules","urn:metadata.tooling.soap.sforce.com","FlowScreenRule",0,-1,true), com.sforce.soap.tooling.metadata.FlowScreenRule[].class));
      }
    }

    private void writeFieldRules(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("rules", "urn:metadata.tooling.soap.sforce.com","rules","urn:metadata.tooling.soap.sforce.com","FlowScreenRule",0,-1,true), rules, rules__is_set);
    }

    /**
     * element : showFooter of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean showFooter__is_set = false;

    private boolean showFooter;

    public boolean getShowFooter() {
      return showFooter;
    }

    public boolean isShowFooter() {
      return showFooter;
    }

    public void setShowFooter(boolean showFooter) {
      this.showFooter = showFooter;
      showFooter__is_set = true;
    }

    protected void setShowFooter(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("showFooter", "urn:metadata.tooling.soap.sforce.com","showFooter","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setShowFooter(__typeMapper.readBoolean(__in, _lookupTypeInfo("showFooter", "urn:metadata.tooling.soap.sforce.com","showFooter","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldShowFooter(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("showFooter", "urn:metadata.tooling.soap.sforce.com","showFooter","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), showFooter, showFooter__is_set);
    }

    /**
     * element : showHeader of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean showHeader__is_set = false;

    private boolean showHeader;

    public boolean getShowHeader() {
      return showHeader;
    }

    public boolean isShowHeader() {
      return showHeader;
    }

    public void setShowHeader(boolean showHeader) {
      this.showHeader = showHeader;
      showHeader__is_set = true;
    }

    protected void setShowHeader(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("showHeader", "urn:metadata.tooling.soap.sforce.com","showHeader","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setShowHeader(__typeMapper.readBoolean(__in, _lookupTypeInfo("showHeader", "urn:metadata.tooling.soap.sforce.com","showHeader","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldShowHeader(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("showHeader", "urn:metadata.tooling.soap.sforce.com","showHeader","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), showHeader, showHeader__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "FlowScreen");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlowScreen ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldAllowBack(__out, __typeMapper);
      writeFieldAllowFinish(__out, __typeMapper);
      writeFieldAllowPause(__out, __typeMapper);
      writeFieldConnector(__out, __typeMapper);
      writeFieldFields(__out, __typeMapper);
      writeFieldHelpText(__out, __typeMapper);
      writeFieldPausedText(__out, __typeMapper);
      writeFieldRules(__out, __typeMapper);
      writeFieldShowFooter(__out, __typeMapper);
      writeFieldShowHeader(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setAllowBack(__in, __typeMapper);
      setAllowFinish(__in, __typeMapper);
      setAllowPause(__in, __typeMapper);
      setConnector(__in, __typeMapper);
      setFields(__in, __typeMapper);
      setHelpText(__in, __typeMapper);
      setPausedText(__in, __typeMapper);
      setRules(__in, __typeMapper);
      setShowFooter(__in, __typeMapper);
      setShowHeader(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "allowBack", allowBack);
      toStringHelper(sb, "allowFinish", allowFinish);
      toStringHelper(sb, "allowPause", allowPause);
      toStringHelper(sb, "connector", connector);
      toStringHelper(sb, "fields", fields);
      toStringHelper(sb, "helpText", helpText);
      toStringHelper(sb, "pausedText", pausedText);
      toStringHelper(sb, "rules", rules);
      toStringHelper(sb, "showFooter", showFooter);
      toStringHelper(sb, "showHeader", showHeader);
    }


}
