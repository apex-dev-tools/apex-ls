package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class SessionSettings implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public SessionSettings() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : disableTimeoutWarning of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean disableTimeoutWarning__is_set = false;

    private boolean disableTimeoutWarning;

    public boolean getDisableTimeoutWarning() {
      return disableTimeoutWarning;
    }

    public boolean isDisableTimeoutWarning() {
      return disableTimeoutWarning;
    }

    public void setDisableTimeoutWarning(boolean disableTimeoutWarning) {
      this.disableTimeoutWarning = disableTimeoutWarning;
      disableTimeoutWarning__is_set = true;
    }

    protected void setDisableTimeoutWarning(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("disableTimeoutWarning", "urn:metadata.tooling.soap.sforce.com","disableTimeoutWarning","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setDisableTimeoutWarning(__typeMapper.readBoolean(__in, _lookupTypeInfo("disableTimeoutWarning", "urn:metadata.tooling.soap.sforce.com","disableTimeoutWarning","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldDisableTimeoutWarning(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("disableTimeoutWarning", "urn:metadata.tooling.soap.sforce.com","disableTimeoutWarning","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), disableTimeoutWarning, disableTimeoutWarning__is_set);
    }

    /**
     * element : enableCSPOnEmail of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableCSPOnEmail__is_set = false;

    private boolean enableCSPOnEmail;

    public boolean getEnableCSPOnEmail() {
      return enableCSPOnEmail;
    }

    public boolean isEnableCSPOnEmail() {
      return enableCSPOnEmail;
    }

    public void setEnableCSPOnEmail(boolean enableCSPOnEmail) {
      this.enableCSPOnEmail = enableCSPOnEmail;
      enableCSPOnEmail__is_set = true;
    }

    protected void setEnableCSPOnEmail(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableCSPOnEmail", "urn:metadata.tooling.soap.sforce.com","enableCSPOnEmail","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableCSPOnEmail(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableCSPOnEmail", "urn:metadata.tooling.soap.sforce.com","enableCSPOnEmail","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableCSPOnEmail(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableCSPOnEmail", "urn:metadata.tooling.soap.sforce.com","enableCSPOnEmail","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableCSPOnEmail, enableCSPOnEmail__is_set);
    }

    /**
     * element : enableCSRFOnGet of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableCSRFOnGet__is_set = false;

    private boolean enableCSRFOnGet;

    public boolean getEnableCSRFOnGet() {
      return enableCSRFOnGet;
    }

    public boolean isEnableCSRFOnGet() {
      return enableCSRFOnGet;
    }

    public void setEnableCSRFOnGet(boolean enableCSRFOnGet) {
      this.enableCSRFOnGet = enableCSRFOnGet;
      enableCSRFOnGet__is_set = true;
    }

    protected void setEnableCSRFOnGet(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableCSRFOnGet", "urn:metadata.tooling.soap.sforce.com","enableCSRFOnGet","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableCSRFOnGet(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableCSRFOnGet", "urn:metadata.tooling.soap.sforce.com","enableCSRFOnGet","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableCSRFOnGet(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableCSRFOnGet", "urn:metadata.tooling.soap.sforce.com","enableCSRFOnGet","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableCSRFOnGet, enableCSRFOnGet__is_set);
    }

    /**
     * element : enableCSRFOnPost of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableCSRFOnPost__is_set = false;

    private boolean enableCSRFOnPost;

    public boolean getEnableCSRFOnPost() {
      return enableCSRFOnPost;
    }

    public boolean isEnableCSRFOnPost() {
      return enableCSRFOnPost;
    }

    public void setEnableCSRFOnPost(boolean enableCSRFOnPost) {
      this.enableCSRFOnPost = enableCSRFOnPost;
      enableCSRFOnPost__is_set = true;
    }

    protected void setEnableCSRFOnPost(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableCSRFOnPost", "urn:metadata.tooling.soap.sforce.com","enableCSRFOnPost","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableCSRFOnPost(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableCSRFOnPost", "urn:metadata.tooling.soap.sforce.com","enableCSRFOnPost","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableCSRFOnPost(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableCSRFOnPost", "urn:metadata.tooling.soap.sforce.com","enableCSRFOnPost","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableCSRFOnPost, enableCSRFOnPost__is_set);
    }

    /**
     * element : enableCacheAndAutocomplete of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableCacheAndAutocomplete__is_set = false;

    private boolean enableCacheAndAutocomplete;

    public boolean getEnableCacheAndAutocomplete() {
      return enableCacheAndAutocomplete;
    }

    public boolean isEnableCacheAndAutocomplete() {
      return enableCacheAndAutocomplete;
    }

    public void setEnableCacheAndAutocomplete(boolean enableCacheAndAutocomplete) {
      this.enableCacheAndAutocomplete = enableCacheAndAutocomplete;
      enableCacheAndAutocomplete__is_set = true;
    }

    protected void setEnableCacheAndAutocomplete(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableCacheAndAutocomplete", "urn:metadata.tooling.soap.sforce.com","enableCacheAndAutocomplete","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableCacheAndAutocomplete(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableCacheAndAutocomplete", "urn:metadata.tooling.soap.sforce.com","enableCacheAndAutocomplete","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableCacheAndAutocomplete(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableCacheAndAutocomplete", "urn:metadata.tooling.soap.sforce.com","enableCacheAndAutocomplete","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableCacheAndAutocomplete, enableCacheAndAutocomplete__is_set);
    }

    /**
     * element : enableClickjackNonsetupSFDC of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableClickjackNonsetupSFDC__is_set = false;

    private boolean enableClickjackNonsetupSFDC;

    public boolean getEnableClickjackNonsetupSFDC() {
      return enableClickjackNonsetupSFDC;
    }

    public boolean isEnableClickjackNonsetupSFDC() {
      return enableClickjackNonsetupSFDC;
    }

    public void setEnableClickjackNonsetupSFDC(boolean enableClickjackNonsetupSFDC) {
      this.enableClickjackNonsetupSFDC = enableClickjackNonsetupSFDC;
      enableClickjackNonsetupSFDC__is_set = true;
    }

    protected void setEnableClickjackNonsetupSFDC(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableClickjackNonsetupSFDC", "urn:metadata.tooling.soap.sforce.com","enableClickjackNonsetupSFDC","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableClickjackNonsetupSFDC(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableClickjackNonsetupSFDC", "urn:metadata.tooling.soap.sforce.com","enableClickjackNonsetupSFDC","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableClickjackNonsetupSFDC(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableClickjackNonsetupSFDC", "urn:metadata.tooling.soap.sforce.com","enableClickjackNonsetupSFDC","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableClickjackNonsetupSFDC, enableClickjackNonsetupSFDC__is_set);
    }

    /**
     * element : enableClickjackNonsetupUser of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableClickjackNonsetupUser__is_set = false;

    private boolean enableClickjackNonsetupUser;

    public boolean getEnableClickjackNonsetupUser() {
      return enableClickjackNonsetupUser;
    }

    public boolean isEnableClickjackNonsetupUser() {
      return enableClickjackNonsetupUser;
    }

    public void setEnableClickjackNonsetupUser(boolean enableClickjackNonsetupUser) {
      this.enableClickjackNonsetupUser = enableClickjackNonsetupUser;
      enableClickjackNonsetupUser__is_set = true;
    }

    protected void setEnableClickjackNonsetupUser(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableClickjackNonsetupUser", "urn:metadata.tooling.soap.sforce.com","enableClickjackNonsetupUser","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableClickjackNonsetupUser(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableClickjackNonsetupUser", "urn:metadata.tooling.soap.sforce.com","enableClickjackNonsetupUser","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableClickjackNonsetupUser(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableClickjackNonsetupUser", "urn:metadata.tooling.soap.sforce.com","enableClickjackNonsetupUser","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableClickjackNonsetupUser, enableClickjackNonsetupUser__is_set);
    }

    /**
     * element : enableClickjackNonsetupUserHeaderless of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableClickjackNonsetupUserHeaderless__is_set = false;

    private boolean enableClickjackNonsetupUserHeaderless;

    public boolean getEnableClickjackNonsetupUserHeaderless() {
      return enableClickjackNonsetupUserHeaderless;
    }

    public boolean isEnableClickjackNonsetupUserHeaderless() {
      return enableClickjackNonsetupUserHeaderless;
    }

    public void setEnableClickjackNonsetupUserHeaderless(boolean enableClickjackNonsetupUserHeaderless) {
      this.enableClickjackNonsetupUserHeaderless = enableClickjackNonsetupUserHeaderless;
      enableClickjackNonsetupUserHeaderless__is_set = true;
    }

    protected void setEnableClickjackNonsetupUserHeaderless(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableClickjackNonsetupUserHeaderless", "urn:metadata.tooling.soap.sforce.com","enableClickjackNonsetupUserHeaderless","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableClickjackNonsetupUserHeaderless(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableClickjackNonsetupUserHeaderless", "urn:metadata.tooling.soap.sforce.com","enableClickjackNonsetupUserHeaderless","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableClickjackNonsetupUserHeaderless(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableClickjackNonsetupUserHeaderless", "urn:metadata.tooling.soap.sforce.com","enableClickjackNonsetupUserHeaderless","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableClickjackNonsetupUserHeaderless, enableClickjackNonsetupUserHeaderless__is_set);
    }

    /**
     * element : enableClickjackSetup of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableClickjackSetup__is_set = false;

    private boolean enableClickjackSetup;

    public boolean getEnableClickjackSetup() {
      return enableClickjackSetup;
    }

    public boolean isEnableClickjackSetup() {
      return enableClickjackSetup;
    }

    public void setEnableClickjackSetup(boolean enableClickjackSetup) {
      this.enableClickjackSetup = enableClickjackSetup;
      enableClickjackSetup__is_set = true;
    }

    protected void setEnableClickjackSetup(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableClickjackSetup", "urn:metadata.tooling.soap.sforce.com","enableClickjackSetup","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableClickjackSetup(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableClickjackSetup", "urn:metadata.tooling.soap.sforce.com","enableClickjackSetup","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableClickjackSetup(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableClickjackSetup", "urn:metadata.tooling.soap.sforce.com","enableClickjackSetup","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableClickjackSetup, enableClickjackSetup__is_set);
    }

    /**
     * element : enableContentSniffingProtection of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableContentSniffingProtection__is_set = false;

    private boolean enableContentSniffingProtection;

    public boolean getEnableContentSniffingProtection() {
      return enableContentSniffingProtection;
    }

    public boolean isEnableContentSniffingProtection() {
      return enableContentSniffingProtection;
    }

    public void setEnableContentSniffingProtection(boolean enableContentSniffingProtection) {
      this.enableContentSniffingProtection = enableContentSniffingProtection;
      enableContentSniffingProtection__is_set = true;
    }

    protected void setEnableContentSniffingProtection(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableContentSniffingProtection", "urn:metadata.tooling.soap.sforce.com","enableContentSniffingProtection","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableContentSniffingProtection(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableContentSniffingProtection", "urn:metadata.tooling.soap.sforce.com","enableContentSniffingProtection","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableContentSniffingProtection(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableContentSniffingProtection", "urn:metadata.tooling.soap.sforce.com","enableContentSniffingProtection","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableContentSniffingProtection, enableContentSniffingProtection__is_set);
    }

    /**
     * element : enablePostForSessions of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enablePostForSessions__is_set = false;

    private boolean enablePostForSessions;

    public boolean getEnablePostForSessions() {
      return enablePostForSessions;
    }

    public boolean isEnablePostForSessions() {
      return enablePostForSessions;
    }

    public void setEnablePostForSessions(boolean enablePostForSessions) {
      this.enablePostForSessions = enablePostForSessions;
      enablePostForSessions__is_set = true;
    }

    protected void setEnablePostForSessions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enablePostForSessions", "urn:metadata.tooling.soap.sforce.com","enablePostForSessions","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnablePostForSessions(__typeMapper.readBoolean(__in, _lookupTypeInfo("enablePostForSessions", "urn:metadata.tooling.soap.sforce.com","enablePostForSessions","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnablePostForSessions(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enablePostForSessions", "urn:metadata.tooling.soap.sforce.com","enablePostForSessions","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enablePostForSessions, enablePostForSessions__is_set);
    }

    /**
     * element : enableSMSIdentity of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableSMSIdentity__is_set = false;

    private boolean enableSMSIdentity;

    public boolean getEnableSMSIdentity() {
      return enableSMSIdentity;
    }

    public boolean isEnableSMSIdentity() {
      return enableSMSIdentity;
    }

    public void setEnableSMSIdentity(boolean enableSMSIdentity) {
      this.enableSMSIdentity = enableSMSIdentity;
      enableSMSIdentity__is_set = true;
    }

    protected void setEnableSMSIdentity(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableSMSIdentity", "urn:metadata.tooling.soap.sforce.com","enableSMSIdentity","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableSMSIdentity(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableSMSIdentity", "urn:metadata.tooling.soap.sforce.com","enableSMSIdentity","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableSMSIdentity(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableSMSIdentity", "urn:metadata.tooling.soap.sforce.com","enableSMSIdentity","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableSMSIdentity, enableSMSIdentity__is_set);
    }

    /**
     * element : enableUpgradeInsecureRequests of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableUpgradeInsecureRequests__is_set = false;

    private boolean enableUpgradeInsecureRequests;

    public boolean getEnableUpgradeInsecureRequests() {
      return enableUpgradeInsecureRequests;
    }

    public boolean isEnableUpgradeInsecureRequests() {
      return enableUpgradeInsecureRequests;
    }

    public void setEnableUpgradeInsecureRequests(boolean enableUpgradeInsecureRequests) {
      this.enableUpgradeInsecureRequests = enableUpgradeInsecureRequests;
      enableUpgradeInsecureRequests__is_set = true;
    }

    protected void setEnableUpgradeInsecureRequests(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableUpgradeInsecureRequests", "urn:metadata.tooling.soap.sforce.com","enableUpgradeInsecureRequests","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableUpgradeInsecureRequests(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableUpgradeInsecureRequests", "urn:metadata.tooling.soap.sforce.com","enableUpgradeInsecureRequests","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableUpgradeInsecureRequests(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableUpgradeInsecureRequests", "urn:metadata.tooling.soap.sforce.com","enableUpgradeInsecureRequests","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableUpgradeInsecureRequests, enableUpgradeInsecureRequests__is_set);
    }

    /**
     * element : enableXssProtection of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enableXssProtection__is_set = false;

    private boolean enableXssProtection;

    public boolean getEnableXssProtection() {
      return enableXssProtection;
    }

    public boolean isEnableXssProtection() {
      return enableXssProtection;
    }

    public void setEnableXssProtection(boolean enableXssProtection) {
      this.enableXssProtection = enableXssProtection;
      enableXssProtection__is_set = true;
    }

    protected void setEnableXssProtection(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enableXssProtection", "urn:metadata.tooling.soap.sforce.com","enableXssProtection","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnableXssProtection(__typeMapper.readBoolean(__in, _lookupTypeInfo("enableXssProtection", "urn:metadata.tooling.soap.sforce.com","enableXssProtection","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnableXssProtection(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enableXssProtection", "urn:metadata.tooling.soap.sforce.com","enableXssProtection","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enableXssProtection, enableXssProtection__is_set);
    }

    /**
     * element : enforceIpRangesEveryRequest of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enforceIpRangesEveryRequest__is_set = false;

    private boolean enforceIpRangesEveryRequest;

    public boolean getEnforceIpRangesEveryRequest() {
      return enforceIpRangesEveryRequest;
    }

    public boolean isEnforceIpRangesEveryRequest() {
      return enforceIpRangesEveryRequest;
    }

    public void setEnforceIpRangesEveryRequest(boolean enforceIpRangesEveryRequest) {
      this.enforceIpRangesEveryRequest = enforceIpRangesEveryRequest;
      enforceIpRangesEveryRequest__is_set = true;
    }

    protected void setEnforceIpRangesEveryRequest(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("enforceIpRangesEveryRequest", "urn:metadata.tooling.soap.sforce.com","enforceIpRangesEveryRequest","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setEnforceIpRangesEveryRequest(__typeMapper.readBoolean(__in, _lookupTypeInfo("enforceIpRangesEveryRequest", "urn:metadata.tooling.soap.sforce.com","enforceIpRangesEveryRequest","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldEnforceIpRangesEveryRequest(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enforceIpRangesEveryRequest", "urn:metadata.tooling.soap.sforce.com","enforceIpRangesEveryRequest","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), enforceIpRangesEveryRequest, enforceIpRangesEveryRequest__is_set);
    }

    /**
     * element : forceLogoutOnSessionTimeout of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean forceLogoutOnSessionTimeout__is_set = false;

    private boolean forceLogoutOnSessionTimeout;

    public boolean getForceLogoutOnSessionTimeout() {
      return forceLogoutOnSessionTimeout;
    }

    public boolean isForceLogoutOnSessionTimeout() {
      return forceLogoutOnSessionTimeout;
    }

    public void setForceLogoutOnSessionTimeout(boolean forceLogoutOnSessionTimeout) {
      this.forceLogoutOnSessionTimeout = forceLogoutOnSessionTimeout;
      forceLogoutOnSessionTimeout__is_set = true;
    }

    protected void setForceLogoutOnSessionTimeout(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("forceLogoutOnSessionTimeout", "urn:metadata.tooling.soap.sforce.com","forceLogoutOnSessionTimeout","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setForceLogoutOnSessionTimeout(__typeMapper.readBoolean(__in, _lookupTypeInfo("forceLogoutOnSessionTimeout", "urn:metadata.tooling.soap.sforce.com","forceLogoutOnSessionTimeout","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldForceLogoutOnSessionTimeout(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("forceLogoutOnSessionTimeout", "urn:metadata.tooling.soap.sforce.com","forceLogoutOnSessionTimeout","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), forceLogoutOnSessionTimeout, forceLogoutOnSessionTimeout__is_set);
    }

    /**
     * element : forceRelogin of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean forceRelogin__is_set = false;

    private boolean forceRelogin;

    public boolean getForceRelogin() {
      return forceRelogin;
    }

    public boolean isForceRelogin() {
      return forceRelogin;
    }

    public void setForceRelogin(boolean forceRelogin) {
      this.forceRelogin = forceRelogin;
      forceRelogin__is_set = true;
    }

    protected void setForceRelogin(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("forceRelogin", "urn:metadata.tooling.soap.sforce.com","forceRelogin","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setForceRelogin(__typeMapper.readBoolean(__in, _lookupTypeInfo("forceRelogin", "urn:metadata.tooling.soap.sforce.com","forceRelogin","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldForceRelogin(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("forceRelogin", "urn:metadata.tooling.soap.sforce.com","forceRelogin","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), forceRelogin, forceRelogin__is_set);
    }

    /**
     * element : hstsOnForcecomSites of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean hstsOnForcecomSites__is_set = false;

    private boolean hstsOnForcecomSites;

    public boolean getHstsOnForcecomSites() {
      return hstsOnForcecomSites;
    }

    public boolean isHstsOnForcecomSites() {
      return hstsOnForcecomSites;
    }

    public void setHstsOnForcecomSites(boolean hstsOnForcecomSites) {
      this.hstsOnForcecomSites = hstsOnForcecomSites;
      hstsOnForcecomSites__is_set = true;
    }

    protected void setHstsOnForcecomSites(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("hstsOnForcecomSites", "urn:metadata.tooling.soap.sforce.com","hstsOnForcecomSites","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setHstsOnForcecomSites(__typeMapper.readBoolean(__in, _lookupTypeInfo("hstsOnForcecomSites", "urn:metadata.tooling.soap.sforce.com","hstsOnForcecomSites","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldHstsOnForcecomSites(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("hstsOnForcecomSites", "urn:metadata.tooling.soap.sforce.com","hstsOnForcecomSites","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), hstsOnForcecomSites, hstsOnForcecomSites__is_set);
    }

    /**
     * element : identityConfirmationOnEmailChange of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean identityConfirmationOnEmailChange__is_set = false;

    private boolean identityConfirmationOnEmailChange;

    public boolean getIdentityConfirmationOnEmailChange() {
      return identityConfirmationOnEmailChange;
    }

    public boolean isIdentityConfirmationOnEmailChange() {
      return identityConfirmationOnEmailChange;
    }

    public void setIdentityConfirmationOnEmailChange(boolean identityConfirmationOnEmailChange) {
      this.identityConfirmationOnEmailChange = identityConfirmationOnEmailChange;
      identityConfirmationOnEmailChange__is_set = true;
    }

    protected void setIdentityConfirmationOnEmailChange(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("identityConfirmationOnEmailChange", "urn:metadata.tooling.soap.sforce.com","identityConfirmationOnEmailChange","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setIdentityConfirmationOnEmailChange(__typeMapper.readBoolean(__in, _lookupTypeInfo("identityConfirmationOnEmailChange", "urn:metadata.tooling.soap.sforce.com","identityConfirmationOnEmailChange","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldIdentityConfirmationOnEmailChange(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("identityConfirmationOnEmailChange", "urn:metadata.tooling.soap.sforce.com","identityConfirmationOnEmailChange","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), identityConfirmationOnEmailChange, identityConfirmationOnEmailChange__is_set);
    }

    /**
     * element : identityConfirmationOnTwoFactorRegistrationEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean identityConfirmationOnTwoFactorRegistrationEnabled__is_set = false;

    private boolean identityConfirmationOnTwoFactorRegistrationEnabled;

    public boolean getIdentityConfirmationOnTwoFactorRegistrationEnabled() {
      return identityConfirmationOnTwoFactorRegistrationEnabled;
    }

    public boolean isIdentityConfirmationOnTwoFactorRegistrationEnabled() {
      return identityConfirmationOnTwoFactorRegistrationEnabled;
    }

    public void setIdentityConfirmationOnTwoFactorRegistrationEnabled(boolean identityConfirmationOnTwoFactorRegistrationEnabled) {
      this.identityConfirmationOnTwoFactorRegistrationEnabled = identityConfirmationOnTwoFactorRegistrationEnabled;
      identityConfirmationOnTwoFactorRegistrationEnabled__is_set = true;
    }

    protected void setIdentityConfirmationOnTwoFactorRegistrationEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("identityConfirmationOnTwoFactorRegistrationEnabled", "urn:metadata.tooling.soap.sforce.com","identityConfirmationOnTwoFactorRegistrationEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setIdentityConfirmationOnTwoFactorRegistrationEnabled(__typeMapper.readBoolean(__in, _lookupTypeInfo("identityConfirmationOnTwoFactorRegistrationEnabled", "urn:metadata.tooling.soap.sforce.com","identityConfirmationOnTwoFactorRegistrationEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldIdentityConfirmationOnTwoFactorRegistrationEnabled(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("identityConfirmationOnTwoFactorRegistrationEnabled", "urn:metadata.tooling.soap.sforce.com","identityConfirmationOnTwoFactorRegistrationEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), identityConfirmationOnTwoFactorRegistrationEnabled, identityConfirmationOnTwoFactorRegistrationEnabled__is_set);
    }

    /**
     * element : lockSessionsToDomain of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean lockSessionsToDomain__is_set = false;

    private boolean lockSessionsToDomain;

    public boolean getLockSessionsToDomain() {
      return lockSessionsToDomain;
    }

    public boolean isLockSessionsToDomain() {
      return lockSessionsToDomain;
    }

    public void setLockSessionsToDomain(boolean lockSessionsToDomain) {
      this.lockSessionsToDomain = lockSessionsToDomain;
      lockSessionsToDomain__is_set = true;
    }

    protected void setLockSessionsToDomain(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("lockSessionsToDomain", "urn:metadata.tooling.soap.sforce.com","lockSessionsToDomain","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setLockSessionsToDomain(__typeMapper.readBoolean(__in, _lookupTypeInfo("lockSessionsToDomain", "urn:metadata.tooling.soap.sforce.com","lockSessionsToDomain","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldLockSessionsToDomain(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("lockSessionsToDomain", "urn:metadata.tooling.soap.sforce.com","lockSessionsToDomain","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), lockSessionsToDomain, lockSessionsToDomain__is_set);
    }

    /**
     * element : lockSessionsToIp of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean lockSessionsToIp__is_set = false;

    private boolean lockSessionsToIp;

    public boolean getLockSessionsToIp() {
      return lockSessionsToIp;
    }

    public boolean isLockSessionsToIp() {
      return lockSessionsToIp;
    }

    public void setLockSessionsToIp(boolean lockSessionsToIp) {
      this.lockSessionsToIp = lockSessionsToIp;
      lockSessionsToIp__is_set = true;
    }

    protected void setLockSessionsToIp(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("lockSessionsToIp", "urn:metadata.tooling.soap.sforce.com","lockSessionsToIp","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setLockSessionsToIp(__typeMapper.readBoolean(__in, _lookupTypeInfo("lockSessionsToIp", "urn:metadata.tooling.soap.sforce.com","lockSessionsToIp","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldLockSessionsToIp(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("lockSessionsToIp", "urn:metadata.tooling.soap.sforce.com","lockSessionsToIp","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), lockSessionsToIp, lockSessionsToIp__is_set);
    }

    /**
     * element : lockerServiceCSP of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean lockerServiceCSP__is_set = false;

    private boolean lockerServiceCSP;

    public boolean getLockerServiceCSP() {
      return lockerServiceCSP;
    }

    public boolean isLockerServiceCSP() {
      return lockerServiceCSP;
    }

    public void setLockerServiceCSP(boolean lockerServiceCSP) {
      this.lockerServiceCSP = lockerServiceCSP;
      lockerServiceCSP__is_set = true;
    }

    protected void setLockerServiceCSP(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("lockerServiceCSP", "urn:metadata.tooling.soap.sforce.com","lockerServiceCSP","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setLockerServiceCSP(__typeMapper.readBoolean(__in, _lookupTypeInfo("lockerServiceCSP", "urn:metadata.tooling.soap.sforce.com","lockerServiceCSP","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldLockerServiceCSP(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("lockerServiceCSP", "urn:metadata.tooling.soap.sforce.com","lockerServiceCSP","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), lockerServiceCSP, lockerServiceCSP__is_set);
    }

    /**
     * element : lockerServiceFrozenRealm of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean lockerServiceFrozenRealm__is_set = false;

    private boolean lockerServiceFrozenRealm;

    public boolean getLockerServiceFrozenRealm() {
      return lockerServiceFrozenRealm;
    }

    public boolean isLockerServiceFrozenRealm() {
      return lockerServiceFrozenRealm;
    }

    public void setLockerServiceFrozenRealm(boolean lockerServiceFrozenRealm) {
      this.lockerServiceFrozenRealm = lockerServiceFrozenRealm;
      lockerServiceFrozenRealm__is_set = true;
    }

    protected void setLockerServiceFrozenRealm(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("lockerServiceFrozenRealm", "urn:metadata.tooling.soap.sforce.com","lockerServiceFrozenRealm","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setLockerServiceFrozenRealm(__typeMapper.readBoolean(__in, _lookupTypeInfo("lockerServiceFrozenRealm", "urn:metadata.tooling.soap.sforce.com","lockerServiceFrozenRealm","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldLockerServiceFrozenRealm(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("lockerServiceFrozenRealm", "urn:metadata.tooling.soap.sforce.com","lockerServiceFrozenRealm","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), lockerServiceFrozenRealm, lockerServiceFrozenRealm__is_set);
    }

    /**
     * element : logoutURL of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean logoutURL__is_set = false;

    private java.lang.String logoutURL;

    public java.lang.String getLogoutURL() {
      return logoutURL;
    }

    public void setLogoutURL(java.lang.String logoutURL) {
      this.logoutURL = logoutURL;
      logoutURL__is_set = true;
    }

    protected void setLogoutURL(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("logoutURL", "urn:metadata.tooling.soap.sforce.com","logoutURL","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setLogoutURL(__typeMapper.readString(__in, _lookupTypeInfo("logoutURL", "urn:metadata.tooling.soap.sforce.com","logoutURL","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLogoutURL(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("logoutURL", "urn:metadata.tooling.soap.sforce.com","logoutURL","http://www.w3.org/2001/XMLSchema","string",0,1,true), logoutURL, logoutURL__is_set);
    }

    /**
     * element : redirectionWarning of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean redirectionWarning__is_set = false;

    private boolean redirectionWarning;

    public boolean getRedirectionWarning() {
      return redirectionWarning;
    }

    public boolean isRedirectionWarning() {
      return redirectionWarning;
    }

    public void setRedirectionWarning(boolean redirectionWarning) {
      this.redirectionWarning = redirectionWarning;
      redirectionWarning__is_set = true;
    }

    protected void setRedirectionWarning(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("redirectionWarning", "urn:metadata.tooling.soap.sforce.com","redirectionWarning","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setRedirectionWarning(__typeMapper.readBoolean(__in, _lookupTypeInfo("redirectionWarning", "urn:metadata.tooling.soap.sforce.com","redirectionWarning","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldRedirectionWarning(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("redirectionWarning", "urn:metadata.tooling.soap.sforce.com","redirectionWarning","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), redirectionWarning, redirectionWarning__is_set);
    }

    /**
     * element : referrerPolicy of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean referrerPolicy__is_set = false;

    private boolean referrerPolicy;

    public boolean getReferrerPolicy() {
      return referrerPolicy;
    }

    public boolean isReferrerPolicy() {
      return referrerPolicy;
    }

    public void setReferrerPolicy(boolean referrerPolicy) {
      this.referrerPolicy = referrerPolicy;
      referrerPolicy__is_set = true;
    }

    protected void setReferrerPolicy(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("referrerPolicy", "urn:metadata.tooling.soap.sforce.com","referrerPolicy","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setReferrerPolicy(__typeMapper.readBoolean(__in, _lookupTypeInfo("referrerPolicy", "urn:metadata.tooling.soap.sforce.com","referrerPolicy","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldReferrerPolicy(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("referrerPolicy", "urn:metadata.tooling.soap.sforce.com","referrerPolicy","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), referrerPolicy, referrerPolicy__is_set);
    }

    /**
     * element : requireHttpOnly of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean requireHttpOnly__is_set = false;

    private boolean requireHttpOnly;

    public boolean getRequireHttpOnly() {
      return requireHttpOnly;
    }

    public boolean isRequireHttpOnly() {
      return requireHttpOnly;
    }

    public void setRequireHttpOnly(boolean requireHttpOnly) {
      this.requireHttpOnly = requireHttpOnly;
      requireHttpOnly__is_set = true;
    }

    protected void setRequireHttpOnly(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("requireHttpOnly", "urn:metadata.tooling.soap.sforce.com","requireHttpOnly","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setRequireHttpOnly(__typeMapper.readBoolean(__in, _lookupTypeInfo("requireHttpOnly", "urn:metadata.tooling.soap.sforce.com","requireHttpOnly","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldRequireHttpOnly(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("requireHttpOnly", "urn:metadata.tooling.soap.sforce.com","requireHttpOnly","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), requireHttpOnly, requireHttpOnly__is_set);
    }

    /**
     * element : requireHttps of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean requireHttps__is_set = false;

    private boolean requireHttps;

    public boolean getRequireHttps() {
      return requireHttps;
    }

    public boolean isRequireHttps() {
      return requireHttps;
    }

    public void setRequireHttps(boolean requireHttps) {
      this.requireHttps = requireHttps;
      requireHttps__is_set = true;
    }

    protected void setRequireHttps(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("requireHttps", "urn:metadata.tooling.soap.sforce.com","requireHttps","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setRequireHttps(__typeMapper.readBoolean(__in, _lookupTypeInfo("requireHttps", "urn:metadata.tooling.soap.sforce.com","requireHttps","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldRequireHttps(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("requireHttps", "urn:metadata.tooling.soap.sforce.com","requireHttps","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), requireHttps, requireHttps__is_set);
    }

    /**
     * element : securityCentralKillSession of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean securityCentralKillSession__is_set = false;

    private boolean securityCentralKillSession;

    public boolean getSecurityCentralKillSession() {
      return securityCentralKillSession;
    }

    public boolean isSecurityCentralKillSession() {
      return securityCentralKillSession;
    }

    public void setSecurityCentralKillSession(boolean securityCentralKillSession) {
      this.securityCentralKillSession = securityCentralKillSession;
      securityCentralKillSession__is_set = true;
    }

    protected void setSecurityCentralKillSession(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("securityCentralKillSession", "urn:metadata.tooling.soap.sforce.com","securityCentralKillSession","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setSecurityCentralKillSession(__typeMapper.readBoolean(__in, _lookupTypeInfo("securityCentralKillSession", "urn:metadata.tooling.soap.sforce.com","securityCentralKillSession","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldSecurityCentralKillSession(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("securityCentralKillSession", "urn:metadata.tooling.soap.sforce.com","securityCentralKillSession","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), securityCentralKillSession, securityCentralKillSession__is_set);
    }

    /**
     * element : sessionTimeout of type {urn:metadata.tooling.soap.sforce.com}SessionTimeout
     * java type: com.sforce.soap.tooling.metadata.SessionTimeout
     */
    private boolean sessionTimeout__is_set = false;

    private com.sforce.soap.tooling.metadata.SessionTimeout sessionTimeout;

    public com.sforce.soap.tooling.metadata.SessionTimeout getSessionTimeout() {
      return sessionTimeout;
    }

    public void setSessionTimeout(com.sforce.soap.tooling.metadata.SessionTimeout sessionTimeout) {
      this.sessionTimeout = sessionTimeout;
      sessionTimeout__is_set = true;
    }

    protected void setSessionTimeout(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("sessionTimeout", "urn:metadata.tooling.soap.sforce.com","sessionTimeout","urn:metadata.tooling.soap.sforce.com","SessionTimeout",0,1,true))) {
        setSessionTimeout((com.sforce.soap.tooling.metadata.SessionTimeout)__typeMapper.readObject(__in, _lookupTypeInfo("sessionTimeout", "urn:metadata.tooling.soap.sforce.com","sessionTimeout","urn:metadata.tooling.soap.sforce.com","SessionTimeout",0,1,true), com.sforce.soap.tooling.metadata.SessionTimeout.class));
      }
    }

    private void writeFieldSessionTimeout(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("sessionTimeout", "urn:metadata.tooling.soap.sforce.com","sessionTimeout","urn:metadata.tooling.soap.sforce.com","SessionTimeout",0,1,true), sessionTimeout, sessionTimeout__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[SessionSettings ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldDisableTimeoutWarning(__out, __typeMapper);
      writeFieldEnableCSPOnEmail(__out, __typeMapper);
      writeFieldEnableCSRFOnGet(__out, __typeMapper);
      writeFieldEnableCSRFOnPost(__out, __typeMapper);
      writeFieldEnableCacheAndAutocomplete(__out, __typeMapper);
      writeFieldEnableClickjackNonsetupSFDC(__out, __typeMapper);
      writeFieldEnableClickjackNonsetupUser(__out, __typeMapper);
      writeFieldEnableClickjackNonsetupUserHeaderless(__out, __typeMapper);
      writeFieldEnableClickjackSetup(__out, __typeMapper);
      writeFieldEnableContentSniffingProtection(__out, __typeMapper);
      writeFieldEnablePostForSessions(__out, __typeMapper);
      writeFieldEnableSMSIdentity(__out, __typeMapper);
      writeFieldEnableUpgradeInsecureRequests(__out, __typeMapper);
      writeFieldEnableXssProtection(__out, __typeMapper);
      writeFieldEnforceIpRangesEveryRequest(__out, __typeMapper);
      writeFieldForceLogoutOnSessionTimeout(__out, __typeMapper);
      writeFieldForceRelogin(__out, __typeMapper);
      writeFieldHstsOnForcecomSites(__out, __typeMapper);
      writeFieldIdentityConfirmationOnEmailChange(__out, __typeMapper);
      writeFieldIdentityConfirmationOnTwoFactorRegistrationEnabled(__out, __typeMapper);
      writeFieldLockSessionsToDomain(__out, __typeMapper);
      writeFieldLockSessionsToIp(__out, __typeMapper);
      writeFieldLockerServiceCSP(__out, __typeMapper);
      writeFieldLockerServiceFrozenRealm(__out, __typeMapper);
      writeFieldLogoutURL(__out, __typeMapper);
      writeFieldRedirectionWarning(__out, __typeMapper);
      writeFieldReferrerPolicy(__out, __typeMapper);
      writeFieldRequireHttpOnly(__out, __typeMapper);
      writeFieldRequireHttps(__out, __typeMapper);
      writeFieldSecurityCentralKillSession(__out, __typeMapper);
      writeFieldSessionTimeout(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setDisableTimeoutWarning(__in, __typeMapper);
      setEnableCSPOnEmail(__in, __typeMapper);
      setEnableCSRFOnGet(__in, __typeMapper);
      setEnableCSRFOnPost(__in, __typeMapper);
      setEnableCacheAndAutocomplete(__in, __typeMapper);
      setEnableClickjackNonsetupSFDC(__in, __typeMapper);
      setEnableClickjackNonsetupUser(__in, __typeMapper);
      setEnableClickjackNonsetupUserHeaderless(__in, __typeMapper);
      setEnableClickjackSetup(__in, __typeMapper);
      setEnableContentSniffingProtection(__in, __typeMapper);
      setEnablePostForSessions(__in, __typeMapper);
      setEnableSMSIdentity(__in, __typeMapper);
      setEnableUpgradeInsecureRequests(__in, __typeMapper);
      setEnableXssProtection(__in, __typeMapper);
      setEnforceIpRangesEveryRequest(__in, __typeMapper);
      setForceLogoutOnSessionTimeout(__in, __typeMapper);
      setForceRelogin(__in, __typeMapper);
      setHstsOnForcecomSites(__in, __typeMapper);
      setIdentityConfirmationOnEmailChange(__in, __typeMapper);
      setIdentityConfirmationOnTwoFactorRegistrationEnabled(__in, __typeMapper);
      setLockSessionsToDomain(__in, __typeMapper);
      setLockSessionsToIp(__in, __typeMapper);
      setLockerServiceCSP(__in, __typeMapper);
      setLockerServiceFrozenRealm(__in, __typeMapper);
      setLogoutURL(__in, __typeMapper);
      setRedirectionWarning(__in, __typeMapper);
      setReferrerPolicy(__in, __typeMapper);
      setRequireHttpOnly(__in, __typeMapper);
      setRequireHttps(__in, __typeMapper);
      setSecurityCentralKillSession(__in, __typeMapper);
      setSessionTimeout(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "disableTimeoutWarning", disableTimeoutWarning);
      toStringHelper(sb, "enableCSPOnEmail", enableCSPOnEmail);
      toStringHelper(sb, "enableCSRFOnGet", enableCSRFOnGet);
      toStringHelper(sb, "enableCSRFOnPost", enableCSRFOnPost);
      toStringHelper(sb, "enableCacheAndAutocomplete", enableCacheAndAutocomplete);
      toStringHelper(sb, "enableClickjackNonsetupSFDC", enableClickjackNonsetupSFDC);
      toStringHelper(sb, "enableClickjackNonsetupUser", enableClickjackNonsetupUser);
      toStringHelper(sb, "enableClickjackNonsetupUserHeaderless", enableClickjackNonsetupUserHeaderless);
      toStringHelper(sb, "enableClickjackSetup", enableClickjackSetup);
      toStringHelper(sb, "enableContentSniffingProtection", enableContentSniffingProtection);
      toStringHelper(sb, "enablePostForSessions", enablePostForSessions);
      toStringHelper(sb, "enableSMSIdentity", enableSMSIdentity);
      toStringHelper(sb, "enableUpgradeInsecureRequests", enableUpgradeInsecureRequests);
      toStringHelper(sb, "enableXssProtection", enableXssProtection);
      toStringHelper(sb, "enforceIpRangesEveryRequest", enforceIpRangesEveryRequest);
      toStringHelper(sb, "forceLogoutOnSessionTimeout", forceLogoutOnSessionTimeout);
      toStringHelper(sb, "forceRelogin", forceRelogin);
      toStringHelper(sb, "hstsOnForcecomSites", hstsOnForcecomSites);
      toStringHelper(sb, "identityConfirmationOnEmailChange", identityConfirmationOnEmailChange);
      toStringHelper(sb, "identityConfirmationOnTwoFactorRegistrationEnabled", identityConfirmationOnTwoFactorRegistrationEnabled);
      toStringHelper(sb, "lockSessionsToDomain", lockSessionsToDomain);
      toStringHelper(sb, "lockSessionsToIp", lockSessionsToIp);
      toStringHelper(sb, "lockerServiceCSP", lockerServiceCSP);
      toStringHelper(sb, "lockerServiceFrozenRealm", lockerServiceFrozenRealm);
      toStringHelper(sb, "logoutURL", logoutURL);
      toStringHelper(sb, "redirectionWarning", redirectionWarning);
      toStringHelper(sb, "referrerPolicy", referrerPolicy);
      toStringHelper(sb, "requireHttpOnly", requireHttpOnly);
      toStringHelper(sb, "requireHttps", requireHttps);
      toStringHelper(sb, "securityCentralKillSession", securityCentralKillSession);
      toStringHelper(sb, "sessionTimeout", sessionTimeout);
    }


}
