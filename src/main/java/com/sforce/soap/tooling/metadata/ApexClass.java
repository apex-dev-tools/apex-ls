package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class ApexClass extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public ApexClass() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : apiVersion of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private boolean apiVersion__is_set = false;

    private double apiVersion;

    public double getApiVersion() {
      return apiVersion;
    }

    public void setApiVersion(double apiVersion) {
      this.apiVersion = apiVersion;
      apiVersion__is_set = true;
    }

    protected void setApiVersion(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("apiVersion", "urn:metadata.tooling.soap.sforce.com","apiVersion","http://www.w3.org/2001/XMLSchema","double",1,1,true))) {
        setApiVersion((double)__typeMapper.readDouble(__in, _lookupTypeInfo("apiVersion", "urn:metadata.tooling.soap.sforce.com","apiVersion","http://www.w3.org/2001/XMLSchema","double",1,1,true), double.class));
      }
    }

    private void writeFieldApiVersion(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("apiVersion", "urn:metadata.tooling.soap.sforce.com","apiVersion","http://www.w3.org/2001/XMLSchema","double",1,1,true), apiVersion, apiVersion__is_set);
    }

    /**
     * element : packageVersions of type {urn:metadata.tooling.soap.sforce.com}PackageVersion
     * java type: com.sforce.soap.tooling.metadata.PackageVersion[]
     */
    private boolean packageVersions__is_set = false;

    private com.sforce.soap.tooling.metadata.PackageVersion[] packageVersions = new com.sforce.soap.tooling.metadata.PackageVersion[0];

    public com.sforce.soap.tooling.metadata.PackageVersion[] getPackageVersions() {
      return packageVersions;
    }

    public void setPackageVersions(com.sforce.soap.tooling.metadata.PackageVersion[] packageVersions) {
      this.packageVersions = packageVersions;
      packageVersions__is_set = true;
    }

    protected void setPackageVersions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("packageVersions", "urn:metadata.tooling.soap.sforce.com","packageVersions","urn:metadata.tooling.soap.sforce.com","PackageVersion",0,-1,true))) {
        setPackageVersions((com.sforce.soap.tooling.metadata.PackageVersion[])__typeMapper.readObject(__in, _lookupTypeInfo("packageVersions", "urn:metadata.tooling.soap.sforce.com","packageVersions","urn:metadata.tooling.soap.sforce.com","PackageVersion",0,-1,true), com.sforce.soap.tooling.metadata.PackageVersion[].class));
      }
    }

    private void writeFieldPackageVersions(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("packageVersions", "urn:metadata.tooling.soap.sforce.com","packageVersions","urn:metadata.tooling.soap.sforce.com","PackageVersion",0,-1,true), packageVersions, packageVersions__is_set);
    }

    /**
     * element : status of type {urn:tooling.soap.sforce.com}ApexCodeUnitStatus
     * java type: com.sforce.soap.tooling.ApexCodeUnitStatus
     */
    private boolean status__is_set = false;

    private com.sforce.soap.tooling.ApexCodeUnitStatus status;

    public com.sforce.soap.tooling.ApexCodeUnitStatus getStatus() {
      return status;
    }

    public void setStatus(com.sforce.soap.tooling.ApexCodeUnitStatus status) {
      this.status = status;
      status__is_set = true;
    }

    protected void setStatus(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("status", "urn:metadata.tooling.soap.sforce.com","status","urn:tooling.soap.sforce.com","ApexCodeUnitStatus",1,1,true))) {
        setStatus((com.sforce.soap.tooling.ApexCodeUnitStatus)__typeMapper.readObject(__in, _lookupTypeInfo("status", "urn:metadata.tooling.soap.sforce.com","status","urn:tooling.soap.sforce.com","ApexCodeUnitStatus",1,1,true), com.sforce.soap.tooling.ApexCodeUnitStatus.class));
      }
    }

    private void writeFieldStatus(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("status", "urn:metadata.tooling.soap.sforce.com","status","urn:tooling.soap.sforce.com","ApexCodeUnitStatus",1,1,true), status, status__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "ApexClass");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ApexClass ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldApiVersion(__out, __typeMapper);
      writeFieldPackageVersions(__out, __typeMapper);
      writeFieldStatus(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setApiVersion(__in, __typeMapper);
      setPackageVersions(__in, __typeMapper);
      setStatus(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "apiVersion", apiVersion);
      toStringHelper(sb, "packageVersions", packageVersions);
      toStringHelper(sb, "status", status);
    }


}
