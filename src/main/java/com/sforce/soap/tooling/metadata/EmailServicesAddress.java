package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class EmailServicesAddress implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public EmailServicesAddress() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : authorizedSenders of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean authorizedSenders__is_set = false;

    private java.lang.String authorizedSenders;

    public java.lang.String getAuthorizedSenders() {
      return authorizedSenders;
    }

    public void setAuthorizedSenders(java.lang.String authorizedSenders) {
      this.authorizedSenders = authorizedSenders;
      authorizedSenders__is_set = true;
    }

    protected void setAuthorizedSenders(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("authorizedSenders", "urn:metadata.tooling.soap.sforce.com","authorizedSenders","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setAuthorizedSenders(__typeMapper.readString(__in, _lookupTypeInfo("authorizedSenders", "urn:metadata.tooling.soap.sforce.com","authorizedSenders","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldAuthorizedSenders(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("authorizedSenders", "urn:metadata.tooling.soap.sforce.com","authorizedSenders","http://www.w3.org/2001/XMLSchema","string",0,1,true), authorizedSenders, authorizedSenders__is_set);
    }

    /**
     * element : developerName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean developerName__is_set = false;

    private java.lang.String developerName;

    public java.lang.String getDeveloperName() {
      return developerName;
    }

    public void setDeveloperName(java.lang.String developerName) {
      this.developerName = developerName;
      developerName__is_set = true;
    }

    protected void setDeveloperName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("developerName", "urn:metadata.tooling.soap.sforce.com","developerName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setDeveloperName(__typeMapper.readString(__in, _lookupTypeInfo("developerName", "urn:metadata.tooling.soap.sforce.com","developerName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDeveloperName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("developerName", "urn:metadata.tooling.soap.sforce.com","developerName","http://www.w3.org/2001/XMLSchema","string",1,1,true), developerName, developerName__is_set);
    }

    /**
     * element : isActive of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isActive__is_set = false;

    private boolean isActive;

    public boolean getIsActive() {
      return isActive;
    }

    public boolean isIsActive() {
      return isActive;
    }

    public void setIsActive(boolean isActive) {
      this.isActive = isActive;
      isActive__is_set = true;
    }

    protected void setIsActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("isActive", "urn:metadata.tooling.soap.sforce.com","isActive","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setIsActive(__typeMapper.readBoolean(__in, _lookupTypeInfo("isActive", "urn:metadata.tooling.soap.sforce.com","isActive","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldIsActive(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isActive", "urn:metadata.tooling.soap.sforce.com","isActive","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), isActive, isActive__is_set);
    }

    /**
     * element : localPart of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean localPart__is_set = false;

    private java.lang.String localPart;

    public java.lang.String getLocalPart() {
      return localPart;
    }

    public void setLocalPart(java.lang.String localPart) {
      this.localPart = localPart;
      localPart__is_set = true;
    }

    protected void setLocalPart(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("localPart", "urn:metadata.tooling.soap.sforce.com","localPart","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setLocalPart(__typeMapper.readString(__in, _lookupTypeInfo("localPart", "urn:metadata.tooling.soap.sforce.com","localPart","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLocalPart(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("localPart", "urn:metadata.tooling.soap.sforce.com","localPart","http://www.w3.org/2001/XMLSchema","string",1,1,true), localPart, localPart__is_set);
    }

    /**
     * element : runAsUser of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean runAsUser__is_set = false;

    private java.lang.String runAsUser;

    public java.lang.String getRunAsUser() {
      return runAsUser;
    }

    public void setRunAsUser(java.lang.String runAsUser) {
      this.runAsUser = runAsUser;
      runAsUser__is_set = true;
    }

    protected void setRunAsUser(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("runAsUser", "urn:metadata.tooling.soap.sforce.com","runAsUser","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setRunAsUser(__typeMapper.readString(__in, _lookupTypeInfo("runAsUser", "urn:metadata.tooling.soap.sforce.com","runAsUser","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldRunAsUser(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("runAsUser", "urn:metadata.tooling.soap.sforce.com","runAsUser","http://www.w3.org/2001/XMLSchema","string",1,1,true), runAsUser, runAsUser__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EmailServicesAddress ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldAuthorizedSenders(__out, __typeMapper);
      writeFieldDeveloperName(__out, __typeMapper);
      writeFieldIsActive(__out, __typeMapper);
      writeFieldLocalPart(__out, __typeMapper);
      writeFieldRunAsUser(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setAuthorizedSenders(__in, __typeMapper);
      setDeveloperName(__in, __typeMapper);
      setIsActive(__in, __typeMapper);
      setLocalPart(__in, __typeMapper);
      setRunAsUser(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "authorizedSenders", authorizedSenders);
      toStringHelper(sb, "developerName", developerName);
      toStringHelper(sb, "isActive", isActive);
      toStringHelper(sb, "localPart", localPart);
      toStringHelper(sb, "runAsUser", runAsUser);
    }


}
