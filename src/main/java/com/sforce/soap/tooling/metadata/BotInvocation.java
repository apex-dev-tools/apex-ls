package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class BotInvocation implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public BotInvocation() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : invocationActionName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean invocationActionName__is_set = false;

    private java.lang.String invocationActionName;

    public java.lang.String getInvocationActionName() {
      return invocationActionName;
    }

    public void setInvocationActionName(java.lang.String invocationActionName) {
      this.invocationActionName = invocationActionName;
      invocationActionName__is_set = true;
    }

    protected void setInvocationActionName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("invocationActionName", "urn:metadata.tooling.soap.sforce.com","invocationActionName","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setInvocationActionName(__typeMapper.readString(__in, _lookupTypeInfo("invocationActionName", "urn:metadata.tooling.soap.sforce.com","invocationActionName","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldInvocationActionName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("invocationActionName", "urn:metadata.tooling.soap.sforce.com","invocationActionName","http://www.w3.org/2001/XMLSchema","string",0,1,true), invocationActionName, invocationActionName__is_set);
    }

    /**
     * element : invocationActionType of type {urn:tooling.soap.sforce.com}ConversationInvocableTargetType
     * java type: com.sforce.soap.tooling.ConversationInvocableTargetType
     */
    private boolean invocationActionType__is_set = false;

    private com.sforce.soap.tooling.ConversationInvocableTargetType invocationActionType;

    public com.sforce.soap.tooling.ConversationInvocableTargetType getInvocationActionType() {
      return invocationActionType;
    }

    public void setInvocationActionType(com.sforce.soap.tooling.ConversationInvocableTargetType invocationActionType) {
      this.invocationActionType = invocationActionType;
      invocationActionType__is_set = true;
    }

    protected void setInvocationActionType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("invocationActionType", "urn:metadata.tooling.soap.sforce.com","invocationActionType","urn:tooling.soap.sforce.com","ConversationInvocableTargetType",0,1,true))) {
        setInvocationActionType((com.sforce.soap.tooling.ConversationInvocableTargetType)__typeMapper.readObject(__in, _lookupTypeInfo("invocationActionType", "urn:metadata.tooling.soap.sforce.com","invocationActionType","urn:tooling.soap.sforce.com","ConversationInvocableTargetType",0,1,true), com.sforce.soap.tooling.ConversationInvocableTargetType.class));
      }
    }

    private void writeFieldInvocationActionType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("invocationActionType", "urn:metadata.tooling.soap.sforce.com","invocationActionType","urn:tooling.soap.sforce.com","ConversationInvocableTargetType",0,1,true), invocationActionType, invocationActionType__is_set);
    }

    /**
     * element : invocationMappings of type {urn:metadata.tooling.soap.sforce.com}BotInvocationMapping
     * java type: com.sforce.soap.tooling.metadata.BotInvocationMapping[]
     */
    private boolean invocationMappings__is_set = false;

    private com.sforce.soap.tooling.metadata.BotInvocationMapping[] invocationMappings = new com.sforce.soap.tooling.metadata.BotInvocationMapping[0];

    public com.sforce.soap.tooling.metadata.BotInvocationMapping[] getInvocationMappings() {
      return invocationMappings;
    }

    public void setInvocationMappings(com.sforce.soap.tooling.metadata.BotInvocationMapping[] invocationMappings) {
      this.invocationMappings = invocationMappings;
      invocationMappings__is_set = true;
    }

    protected void setInvocationMappings(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("invocationMappings", "urn:metadata.tooling.soap.sforce.com","invocationMappings","urn:metadata.tooling.soap.sforce.com","BotInvocationMapping",0,-1,true))) {
        setInvocationMappings((com.sforce.soap.tooling.metadata.BotInvocationMapping[])__typeMapper.readObject(__in, _lookupTypeInfo("invocationMappings", "urn:metadata.tooling.soap.sforce.com","invocationMappings","urn:metadata.tooling.soap.sforce.com","BotInvocationMapping",0,-1,true), com.sforce.soap.tooling.metadata.BotInvocationMapping[].class));
      }
    }

    private void writeFieldInvocationMappings(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("invocationMappings", "urn:metadata.tooling.soap.sforce.com","invocationMappings","urn:metadata.tooling.soap.sforce.com","BotInvocationMapping",0,-1,true), invocationMappings, invocationMappings__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[BotInvocation ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldInvocationActionName(__out, __typeMapper);
      writeFieldInvocationActionType(__out, __typeMapper);
      writeFieldInvocationMappings(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setInvocationActionName(__in, __typeMapper);
      setInvocationActionType(__in, __typeMapper);
      setInvocationMappings(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "invocationActionName", invocationActionName);
      toStringHelper(sb, "invocationActionType", invocationActionType);
      toStringHelper(sb, "invocationMappings", invocationMappings);
    }


}
