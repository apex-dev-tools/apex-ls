package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class ProfileActionOverride implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ProfileActionOverride() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : actionName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean actionName__is_set = false;

    private java.lang.String actionName;

    public java.lang.String getActionName() {
      return actionName;
    }

    public void setActionName(java.lang.String actionName) {
      this.actionName = actionName;
      actionName__is_set = true;
    }

    protected void setActionName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("actionName", "urn:metadata.tooling.soap.sforce.com","actionName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setActionName(__typeMapper.readString(__in, _lookupTypeInfo("actionName", "urn:metadata.tooling.soap.sforce.com","actionName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldActionName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("actionName", "urn:metadata.tooling.soap.sforce.com","actionName","http://www.w3.org/2001/XMLSchema","string",1,1,true), actionName, actionName__is_set);
    }

    /**
     * element : content of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean content__is_set = false;

    private java.lang.String content;

    public java.lang.String getContent() {
      return content;
    }

    public void setContent(java.lang.String content) {
      this.content = content;
      content__is_set = true;
    }

    protected void setContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("content", "urn:metadata.tooling.soap.sforce.com","content","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setContent(__typeMapper.readString(__in, _lookupTypeInfo("content", "urn:metadata.tooling.soap.sforce.com","content","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldContent(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("content", "urn:metadata.tooling.soap.sforce.com","content","http://www.w3.org/2001/XMLSchema","string",0,1,true), content, content__is_set);
    }

    /**
     * element : formFactor of type {urn:tooling.soap.sforce.com}FormFactor
     * java type: com.sforce.soap.tooling.FormFactor
     */
    private boolean formFactor__is_set = false;

    private com.sforce.soap.tooling.FormFactor formFactor;

    public com.sforce.soap.tooling.FormFactor getFormFactor() {
      return formFactor;
    }

    public void setFormFactor(com.sforce.soap.tooling.FormFactor formFactor) {
      this.formFactor = formFactor;
      formFactor__is_set = true;
    }

    protected void setFormFactor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("formFactor", "urn:metadata.tooling.soap.sforce.com","formFactor","urn:tooling.soap.sforce.com","FormFactor",1,1,true))) {
        setFormFactor((com.sforce.soap.tooling.FormFactor)__typeMapper.readObject(__in, _lookupTypeInfo("formFactor", "urn:metadata.tooling.soap.sforce.com","formFactor","urn:tooling.soap.sforce.com","FormFactor",1,1,true), com.sforce.soap.tooling.FormFactor.class));
      }
    }

    private void writeFieldFormFactor(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("formFactor", "urn:metadata.tooling.soap.sforce.com","formFactor","urn:tooling.soap.sforce.com","FormFactor",1,1,true), formFactor, formFactor__is_set);
    }

    /**
     * element : pageOrSobjectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean pageOrSobjectType__is_set = false;

    private java.lang.String pageOrSobjectType;

    public java.lang.String getPageOrSobjectType() {
      return pageOrSobjectType;
    }

    public void setPageOrSobjectType(java.lang.String pageOrSobjectType) {
      this.pageOrSobjectType = pageOrSobjectType;
      pageOrSobjectType__is_set = true;
    }

    protected void setPageOrSobjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("pageOrSobjectType", "urn:metadata.tooling.soap.sforce.com","pageOrSobjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setPageOrSobjectType(__typeMapper.readString(__in, _lookupTypeInfo("pageOrSobjectType", "urn:metadata.tooling.soap.sforce.com","pageOrSobjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldPageOrSobjectType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("pageOrSobjectType", "urn:metadata.tooling.soap.sforce.com","pageOrSobjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true), pageOrSobjectType, pageOrSobjectType__is_set);
    }

    /**
     * element : recordType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean recordType__is_set = false;

    private java.lang.String recordType;

    public java.lang.String getRecordType() {
      return recordType;
    }

    public void setRecordType(java.lang.String recordType) {
      this.recordType = recordType;
      recordType__is_set = true;
    }

    protected void setRecordType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("recordType", "urn:metadata.tooling.soap.sforce.com","recordType","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setRecordType(__typeMapper.readString(__in, _lookupTypeInfo("recordType", "urn:metadata.tooling.soap.sforce.com","recordType","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldRecordType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("recordType", "urn:metadata.tooling.soap.sforce.com","recordType","http://www.w3.org/2001/XMLSchema","string",0,1,true), recordType, recordType__is_set);
    }

    /**
     * element : type of type {urn:tooling.soap.sforce.com}ActionOverrideType
     * java type: com.sforce.soap.tooling.ActionOverrideType
     */
    private boolean type__is_set = false;

    private com.sforce.soap.tooling.ActionOverrideType type;

    public com.sforce.soap.tooling.ActionOverrideType getType() {
      return type;
    }

    public void setType(com.sforce.soap.tooling.ActionOverrideType type) {
      this.type = type;
      type__is_set = true;
    }

    protected void setType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("type", "urn:metadata.tooling.soap.sforce.com","type","urn:tooling.soap.sforce.com","ActionOverrideType",1,1,true))) {
        setType((com.sforce.soap.tooling.ActionOverrideType)__typeMapper.readObject(__in, _lookupTypeInfo("type", "urn:metadata.tooling.soap.sforce.com","type","urn:tooling.soap.sforce.com","ActionOverrideType",1,1,true), com.sforce.soap.tooling.ActionOverrideType.class));
      }
    }

    private void writeFieldType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("type", "urn:metadata.tooling.soap.sforce.com","type","urn:tooling.soap.sforce.com","ActionOverrideType",1,1,true), type, type__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ProfileActionOverride ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldActionName(__out, __typeMapper);
      writeFieldContent(__out, __typeMapper);
      writeFieldFormFactor(__out, __typeMapper);
      writeFieldPageOrSobjectType(__out, __typeMapper);
      writeFieldRecordType(__out, __typeMapper);
      writeFieldType(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setActionName(__in, __typeMapper);
      setContent(__in, __typeMapper);
      setFormFactor(__in, __typeMapper);
      setPageOrSobjectType(__in, __typeMapper);
      setRecordType(__in, __typeMapper);
      setType(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "actionName", actionName);
      toStringHelper(sb, "content", content);
      toStringHelper(sb, "formFactor", formFactor);
      toStringHelper(sb, "pageOrSobjectType", pageOrSobjectType);
      toStringHelper(sb, "recordType", recordType);
      toStringHelper(sb, "type", type);
    }


}
