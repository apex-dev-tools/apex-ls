package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class AppBrand implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public AppBrand() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : footerColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean footerColor__is_set = false;

    private java.lang.String footerColor;

    public java.lang.String getFooterColor() {
      return footerColor;
    }

    public void setFooterColor(java.lang.String footerColor) {
      this.footerColor = footerColor;
      footerColor__is_set = true;
    }

    protected void setFooterColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("footerColor", "urn:metadata.tooling.soap.sforce.com","footerColor","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setFooterColor(__typeMapper.readString(__in, _lookupTypeInfo("footerColor", "urn:metadata.tooling.soap.sforce.com","footerColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldFooterColor(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("footerColor", "urn:metadata.tooling.soap.sforce.com","footerColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), footerColor, footerColor__is_set);
    }

    /**
     * element : headerColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean headerColor__is_set = false;

    private java.lang.String headerColor;

    public java.lang.String getHeaderColor() {
      return headerColor;
    }

    public void setHeaderColor(java.lang.String headerColor) {
      this.headerColor = headerColor;
      headerColor__is_set = true;
    }

    protected void setHeaderColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("headerColor", "urn:metadata.tooling.soap.sforce.com","headerColor","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setHeaderColor(__typeMapper.readString(__in, _lookupTypeInfo("headerColor", "urn:metadata.tooling.soap.sforce.com","headerColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldHeaderColor(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("headerColor", "urn:metadata.tooling.soap.sforce.com","headerColor","http://www.w3.org/2001/XMLSchema","string",0,1,true), headerColor, headerColor__is_set);
    }

    /**
     * element : logo of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean logo__is_set = false;

    private java.lang.String logo;

    public java.lang.String getLogo() {
      return logo;
    }

    public void setLogo(java.lang.String logo) {
      this.logo = logo;
      logo__is_set = true;
    }

    protected void setLogo(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("logo", "urn:metadata.tooling.soap.sforce.com","logo","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setLogo(__typeMapper.readString(__in, _lookupTypeInfo("logo", "urn:metadata.tooling.soap.sforce.com","logo","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLogo(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("logo", "urn:metadata.tooling.soap.sforce.com","logo","http://www.w3.org/2001/XMLSchema","string",0,1,true), logo, logo__is_set);
    }

    /**
     * element : logoVersion of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean logoVersion__is_set = false;

    private int logoVersion;

    public int getLogoVersion() {
      return logoVersion;
    }

    public void setLogoVersion(int logoVersion) {
      this.logoVersion = logoVersion;
      logoVersion__is_set = true;
    }

    protected void setLogoVersion(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("logoVersion", "urn:metadata.tooling.soap.sforce.com","logoVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setLogoVersion((int)__typeMapper.readInt(__in, _lookupTypeInfo("logoVersion", "urn:metadata.tooling.soap.sforce.com","logoVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true), int.class));
      }
    }

    private void writeFieldLogoVersion(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("logoVersion", "urn:metadata.tooling.soap.sforce.com","logoVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true), logoVersion, logoVersion__is_set);
    }

    /**
     * element : shouldOverrideOrgTheme of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean shouldOverrideOrgTheme__is_set = false;

    private boolean shouldOverrideOrgTheme;

    public boolean getShouldOverrideOrgTheme() {
      return shouldOverrideOrgTheme;
    }

    public boolean isShouldOverrideOrgTheme() {
      return shouldOverrideOrgTheme;
    }

    public void setShouldOverrideOrgTheme(boolean shouldOverrideOrgTheme) {
      this.shouldOverrideOrgTheme = shouldOverrideOrgTheme;
      shouldOverrideOrgTheme__is_set = true;
    }

    protected void setShouldOverrideOrgTheme(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("shouldOverrideOrgTheme", "urn:metadata.tooling.soap.sforce.com","shouldOverrideOrgTheme","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setShouldOverrideOrgTheme(__typeMapper.readBoolean(__in, _lookupTypeInfo("shouldOverrideOrgTheme", "urn:metadata.tooling.soap.sforce.com","shouldOverrideOrgTheme","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldShouldOverrideOrgTheme(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("shouldOverrideOrgTheme", "urn:metadata.tooling.soap.sforce.com","shouldOverrideOrgTheme","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), shouldOverrideOrgTheme, shouldOverrideOrgTheme__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[AppBrand ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldFooterColor(__out, __typeMapper);
      writeFieldHeaderColor(__out, __typeMapper);
      writeFieldLogo(__out, __typeMapper);
      writeFieldLogoVersion(__out, __typeMapper);
      writeFieldShouldOverrideOrgTheme(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setFooterColor(__in, __typeMapper);
      setHeaderColor(__in, __typeMapper);
      setLogo(__in, __typeMapper);
      setLogoVersion(__in, __typeMapper);
      setShouldOverrideOrgTheme(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "footerColor", footerColor);
      toStringHelper(sb, "headerColor", headerColor);
      toStringHelper(sb, "logo", logo);
      toStringHelper(sb, "logoVersion", logoVersion);
      toStringHelper(sb, "shouldOverrideOrgTheme", shouldOverrideOrgTheme);
    }


}
