package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class FlowSubflow extends com.sforce.soap.tooling.metadata.FlowNode {

    /**
     * Constructor
     */
    public FlowSubflow() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : connector of type {urn:metadata.tooling.soap.sforce.com}FlowConnector
     * java type: com.sforce.soap.tooling.metadata.FlowConnector
     */
    private boolean connector__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowConnector connector;

    public com.sforce.soap.tooling.metadata.FlowConnector getConnector() {
      return connector;
    }

    public void setConnector(com.sforce.soap.tooling.metadata.FlowConnector connector) {
      this.connector = connector;
      connector__is_set = true;
    }

    protected void setConnector(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("connector", "urn:metadata.tooling.soap.sforce.com","connector","urn:metadata.tooling.soap.sforce.com","FlowConnector",0,1,true))) {
        setConnector((com.sforce.soap.tooling.metadata.FlowConnector)__typeMapper.readObject(__in, _lookupTypeInfo("connector", "urn:metadata.tooling.soap.sforce.com","connector","urn:metadata.tooling.soap.sforce.com","FlowConnector",0,1,true), com.sforce.soap.tooling.metadata.FlowConnector.class));
      }
    }

    private void writeFieldConnector(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("connector", "urn:metadata.tooling.soap.sforce.com","connector","urn:metadata.tooling.soap.sforce.com","FlowConnector",0,1,true), connector, connector__is_set);
    }

    /**
     * element : flowName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean flowName__is_set = false;

    private java.lang.String flowName;

    public java.lang.String getFlowName() {
      return flowName;
    }

    public void setFlowName(java.lang.String flowName) {
      this.flowName = flowName;
      flowName__is_set = true;
    }

    protected void setFlowName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("flowName", "urn:metadata.tooling.soap.sforce.com","flowName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setFlowName(__typeMapper.readString(__in, _lookupTypeInfo("flowName", "urn:metadata.tooling.soap.sforce.com","flowName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldFlowName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("flowName", "urn:metadata.tooling.soap.sforce.com","flowName","http://www.w3.org/2001/XMLSchema","string",1,1,true), flowName, flowName__is_set);
    }

    /**
     * element : inputAssignments of type {urn:metadata.tooling.soap.sforce.com}FlowSubflowInputAssignment
     * java type: com.sforce.soap.tooling.metadata.FlowSubflowInputAssignment[]
     */
    private boolean inputAssignments__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowSubflowInputAssignment[] inputAssignments = new com.sforce.soap.tooling.metadata.FlowSubflowInputAssignment[0];

    public com.sforce.soap.tooling.metadata.FlowSubflowInputAssignment[] getInputAssignments() {
      return inputAssignments;
    }

    public void setInputAssignments(com.sforce.soap.tooling.metadata.FlowSubflowInputAssignment[] inputAssignments) {
      this.inputAssignments = inputAssignments;
      inputAssignments__is_set = true;
    }

    protected void setInputAssignments(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("inputAssignments", "urn:metadata.tooling.soap.sforce.com","inputAssignments","urn:metadata.tooling.soap.sforce.com","FlowSubflowInputAssignment",0,-1,true))) {
        setInputAssignments((com.sforce.soap.tooling.metadata.FlowSubflowInputAssignment[])__typeMapper.readObject(__in, _lookupTypeInfo("inputAssignments", "urn:metadata.tooling.soap.sforce.com","inputAssignments","urn:metadata.tooling.soap.sforce.com","FlowSubflowInputAssignment",0,-1,true), com.sforce.soap.tooling.metadata.FlowSubflowInputAssignment[].class));
      }
    }

    private void writeFieldInputAssignments(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("inputAssignments", "urn:metadata.tooling.soap.sforce.com","inputAssignments","urn:metadata.tooling.soap.sforce.com","FlowSubflowInputAssignment",0,-1,true), inputAssignments, inputAssignments__is_set);
    }

    /**
     * element : outputAssignments of type {urn:metadata.tooling.soap.sforce.com}FlowSubflowOutputAssignment
     * java type: com.sforce.soap.tooling.metadata.FlowSubflowOutputAssignment[]
     */
    private boolean outputAssignments__is_set = false;

    private com.sforce.soap.tooling.metadata.FlowSubflowOutputAssignment[] outputAssignments = new com.sforce.soap.tooling.metadata.FlowSubflowOutputAssignment[0];

    public com.sforce.soap.tooling.metadata.FlowSubflowOutputAssignment[] getOutputAssignments() {
      return outputAssignments;
    }

    public void setOutputAssignments(com.sforce.soap.tooling.metadata.FlowSubflowOutputAssignment[] outputAssignments) {
      this.outputAssignments = outputAssignments;
      outputAssignments__is_set = true;
    }

    protected void setOutputAssignments(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("outputAssignments", "urn:metadata.tooling.soap.sforce.com","outputAssignments","urn:metadata.tooling.soap.sforce.com","FlowSubflowOutputAssignment",0,-1,true))) {
        setOutputAssignments((com.sforce.soap.tooling.metadata.FlowSubflowOutputAssignment[])__typeMapper.readObject(__in, _lookupTypeInfo("outputAssignments", "urn:metadata.tooling.soap.sforce.com","outputAssignments","urn:metadata.tooling.soap.sforce.com","FlowSubflowOutputAssignment",0,-1,true), com.sforce.soap.tooling.metadata.FlowSubflowOutputAssignment[].class));
      }
    }

    private void writeFieldOutputAssignments(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("outputAssignments", "urn:metadata.tooling.soap.sforce.com","outputAssignments","urn:metadata.tooling.soap.sforce.com","FlowSubflowOutputAssignment",0,-1,true), outputAssignments, outputAssignments__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "FlowSubflow");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlowSubflow ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldConnector(__out, __typeMapper);
      writeFieldFlowName(__out, __typeMapper);
      writeFieldInputAssignments(__out, __typeMapper);
      writeFieldOutputAssignments(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setConnector(__in, __typeMapper);
      setFlowName(__in, __typeMapper);
      setInputAssignments(__in, __typeMapper);
      setOutputAssignments(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "connector", connector);
      toStringHelper(sb, "flowName", flowName);
      toStringHelper(sb, "inputAssignments", inputAssignments);
      toStringHelper(sb, "outputAssignments", outputAssignments);
    }


}
