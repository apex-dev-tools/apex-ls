package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class EmbeddedServiceLiveAgent extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public EmbeddedServiceLiveAgent() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : avatarImg of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean avatarImg__is_set = false;

    private java.lang.String avatarImg;

    public java.lang.String getAvatarImg() {
      return avatarImg;
    }

    public void setAvatarImg(java.lang.String avatarImg) {
      this.avatarImg = avatarImg;
      avatarImg__is_set = true;
    }

    protected void setAvatarImg(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("avatarImg", "urn:metadata.tooling.soap.sforce.com","avatarImg","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setAvatarImg(__typeMapper.readString(__in, _lookupTypeInfo("avatarImg", "urn:metadata.tooling.soap.sforce.com","avatarImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldAvatarImg(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("avatarImg", "urn:metadata.tooling.soap.sforce.com","avatarImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), avatarImg, avatarImg__is_set);
    }

    /**
     * element : customPrechatComponent of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean customPrechatComponent__is_set = false;

    private java.lang.String customPrechatComponent;

    public java.lang.String getCustomPrechatComponent() {
      return customPrechatComponent;
    }

    public void setCustomPrechatComponent(java.lang.String customPrechatComponent) {
      this.customPrechatComponent = customPrechatComponent;
      customPrechatComponent__is_set = true;
    }

    protected void setCustomPrechatComponent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("customPrechatComponent", "urn:metadata.tooling.soap.sforce.com","customPrechatComponent","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setCustomPrechatComponent(__typeMapper.readString(__in, _lookupTypeInfo("customPrechatComponent", "urn:metadata.tooling.soap.sforce.com","customPrechatComponent","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldCustomPrechatComponent(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("customPrechatComponent", "urn:metadata.tooling.soap.sforce.com","customPrechatComponent","http://www.w3.org/2001/XMLSchema","string",0,1,true), customPrechatComponent, customPrechatComponent__is_set);
    }

    /**
     * element : embeddedServiceConfig of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean embeddedServiceConfig__is_set = false;

    private java.lang.String embeddedServiceConfig;

    public java.lang.String getEmbeddedServiceConfig() {
      return embeddedServiceConfig;
    }

    public void setEmbeddedServiceConfig(java.lang.String embeddedServiceConfig) {
      this.embeddedServiceConfig = embeddedServiceConfig;
      embeddedServiceConfig__is_set = true;
    }

    protected void setEmbeddedServiceConfig(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("embeddedServiceConfig", "urn:metadata.tooling.soap.sforce.com","embeddedServiceConfig","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setEmbeddedServiceConfig(__typeMapper.readString(__in, _lookupTypeInfo("embeddedServiceConfig", "urn:metadata.tooling.soap.sforce.com","embeddedServiceConfig","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldEmbeddedServiceConfig(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("embeddedServiceConfig", "urn:metadata.tooling.soap.sforce.com","embeddedServiceConfig","http://www.w3.org/2001/XMLSchema","string",1,1,true), embeddedServiceConfig, embeddedServiceConfig__is_set);
    }

    /**
     * element : embeddedServiceQuickActions of type {urn:metadata.tooling.soap.sforce.com}EmbeddedServiceQuickAction
     * java type: com.sforce.soap.tooling.metadata.EmbeddedServiceQuickAction[]
     */
    private boolean embeddedServiceQuickActions__is_set = false;

    private com.sforce.soap.tooling.metadata.EmbeddedServiceQuickAction[] embeddedServiceQuickActions = new com.sforce.soap.tooling.metadata.EmbeddedServiceQuickAction[0];

    public com.sforce.soap.tooling.metadata.EmbeddedServiceQuickAction[] getEmbeddedServiceQuickActions() {
      return embeddedServiceQuickActions;
    }

    public void setEmbeddedServiceQuickActions(com.sforce.soap.tooling.metadata.EmbeddedServiceQuickAction[] embeddedServiceQuickActions) {
      this.embeddedServiceQuickActions = embeddedServiceQuickActions;
      embeddedServiceQuickActions__is_set = true;
    }

    protected void setEmbeddedServiceQuickActions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("embeddedServiceQuickActions", "urn:metadata.tooling.soap.sforce.com","embeddedServiceQuickActions","urn:metadata.tooling.soap.sforce.com","EmbeddedServiceQuickAction",0,-1,true))) {
        setEmbeddedServiceQuickActions((com.sforce.soap.tooling.metadata.EmbeddedServiceQuickAction[])__typeMapper.readObject(__in, _lookupTypeInfo("embeddedServiceQuickActions", "urn:metadata.tooling.soap.sforce.com","embeddedServiceQuickActions","urn:metadata.tooling.soap.sforce.com","EmbeddedServiceQuickAction",0,-1,true), com.sforce.soap.tooling.metadata.EmbeddedServiceQuickAction[].class));
      }
    }

    private void writeFieldEmbeddedServiceQuickActions(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("embeddedServiceQuickActions", "urn:metadata.tooling.soap.sforce.com","embeddedServiceQuickActions","urn:metadata.tooling.soap.sforce.com","EmbeddedServiceQuickAction",0,-1,true), embeddedServiceQuickActions, embeddedServiceQuickActions__is_set);
    }

    /**
     * element : enabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean enabled__is_set = false;

    private boolean enabled;

    public boolean getEnabled() {
      return enabled;
    }

    public boolean isEnabled() {
      return enabled;
    }

    public void setEnabled(boolean enabled) {
      this.enabled = enabled;
      enabled__is_set = true;
    }

    protected void setEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("enabled", "urn:metadata.tooling.soap.sforce.com","enabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setEnabled(__typeMapper.readBoolean(__in, _lookupTypeInfo("enabled", "urn:metadata.tooling.soap.sforce.com","enabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldEnabled(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("enabled", "urn:metadata.tooling.soap.sforce.com","enabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), enabled, enabled__is_set);
    }

    /**
     * element : fontSize of type {urn:tooling.soap.sforce.com}EmbeddedServiceFontSize
     * java type: com.sforce.soap.tooling.EmbeddedServiceFontSize
     */
    private boolean fontSize__is_set = false;

    private com.sforce.soap.tooling.EmbeddedServiceFontSize fontSize;

    public com.sforce.soap.tooling.EmbeddedServiceFontSize getFontSize() {
      return fontSize;
    }

    public void setFontSize(com.sforce.soap.tooling.EmbeddedServiceFontSize fontSize) {
      this.fontSize = fontSize;
      fontSize__is_set = true;
    }

    protected void setFontSize(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("fontSize", "urn:metadata.tooling.soap.sforce.com","fontSize","urn:tooling.soap.sforce.com","EmbeddedServiceFontSize",1,1,true))) {
        setFontSize((com.sforce.soap.tooling.EmbeddedServiceFontSize)__typeMapper.readObject(__in, _lookupTypeInfo("fontSize", "urn:metadata.tooling.soap.sforce.com","fontSize","urn:tooling.soap.sforce.com","EmbeddedServiceFontSize",1,1,true), com.sforce.soap.tooling.EmbeddedServiceFontSize.class));
      }
    }

    private void writeFieldFontSize(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fontSize", "urn:metadata.tooling.soap.sforce.com","fontSize","urn:tooling.soap.sforce.com","EmbeddedServiceFontSize",1,1,true), fontSize, fontSize__is_set);
    }

    /**
     * element : headerBackgroundImg of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean headerBackgroundImg__is_set = false;

    private java.lang.String headerBackgroundImg;

    public java.lang.String getHeaderBackgroundImg() {
      return headerBackgroundImg;
    }

    public void setHeaderBackgroundImg(java.lang.String headerBackgroundImg) {
      this.headerBackgroundImg = headerBackgroundImg;
      headerBackgroundImg__is_set = true;
    }

    protected void setHeaderBackgroundImg(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("headerBackgroundImg", "urn:metadata.tooling.soap.sforce.com","headerBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setHeaderBackgroundImg(__typeMapper.readString(__in, _lookupTypeInfo("headerBackgroundImg", "urn:metadata.tooling.soap.sforce.com","headerBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldHeaderBackgroundImg(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("headerBackgroundImg", "urn:metadata.tooling.soap.sforce.com","headerBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), headerBackgroundImg, headerBackgroundImg__is_set);
    }

    /**
     * element : isOfflineCaseEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isOfflineCaseEnabled__is_set = false;

    private boolean isOfflineCaseEnabled;

    public boolean getIsOfflineCaseEnabled() {
      return isOfflineCaseEnabled;
    }

    public boolean isIsOfflineCaseEnabled() {
      return isOfflineCaseEnabled;
    }

    public void setIsOfflineCaseEnabled(boolean isOfflineCaseEnabled) {
      this.isOfflineCaseEnabled = isOfflineCaseEnabled;
      isOfflineCaseEnabled__is_set = true;
    }

    protected void setIsOfflineCaseEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("isOfflineCaseEnabled", "urn:metadata.tooling.soap.sforce.com","isOfflineCaseEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setIsOfflineCaseEnabled(__typeMapper.readBoolean(__in, _lookupTypeInfo("isOfflineCaseEnabled", "urn:metadata.tooling.soap.sforce.com","isOfflineCaseEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldIsOfflineCaseEnabled(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isOfflineCaseEnabled", "urn:metadata.tooling.soap.sforce.com","isOfflineCaseEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), isOfflineCaseEnabled, isOfflineCaseEnabled__is_set);
    }

    /**
     * element : isQueuePositionEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isQueuePositionEnabled__is_set = false;

    private boolean isQueuePositionEnabled;

    public boolean getIsQueuePositionEnabled() {
      return isQueuePositionEnabled;
    }

    public boolean isIsQueuePositionEnabled() {
      return isQueuePositionEnabled;
    }

    public void setIsQueuePositionEnabled(boolean isQueuePositionEnabled) {
      this.isQueuePositionEnabled = isQueuePositionEnabled;
      isQueuePositionEnabled__is_set = true;
    }

    protected void setIsQueuePositionEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("isQueuePositionEnabled", "urn:metadata.tooling.soap.sforce.com","isQueuePositionEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setIsQueuePositionEnabled(__typeMapper.readBoolean(__in, _lookupTypeInfo("isQueuePositionEnabled", "urn:metadata.tooling.soap.sforce.com","isQueuePositionEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldIsQueuePositionEnabled(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isQueuePositionEnabled", "urn:metadata.tooling.soap.sforce.com","isQueuePositionEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), isQueuePositionEnabled, isQueuePositionEnabled__is_set);
    }

    /**
     * element : liveAgentChatUrl of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean liveAgentChatUrl__is_set = false;

    private java.lang.String liveAgentChatUrl;

    public java.lang.String getLiveAgentChatUrl() {
      return liveAgentChatUrl;
    }

    public void setLiveAgentChatUrl(java.lang.String liveAgentChatUrl) {
      this.liveAgentChatUrl = liveAgentChatUrl;
      liveAgentChatUrl__is_set = true;
    }

    protected void setLiveAgentChatUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("liveAgentChatUrl", "urn:metadata.tooling.soap.sforce.com","liveAgentChatUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setLiveAgentChatUrl(__typeMapper.readString(__in, _lookupTypeInfo("liveAgentChatUrl", "urn:metadata.tooling.soap.sforce.com","liveAgentChatUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLiveAgentChatUrl(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("liveAgentChatUrl", "urn:metadata.tooling.soap.sforce.com","liveAgentChatUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true), liveAgentChatUrl, liveAgentChatUrl__is_set);
    }

    /**
     * element : liveAgentContentUrl of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean liveAgentContentUrl__is_set = false;

    private java.lang.String liveAgentContentUrl;

    public java.lang.String getLiveAgentContentUrl() {
      return liveAgentContentUrl;
    }

    public void setLiveAgentContentUrl(java.lang.String liveAgentContentUrl) {
      this.liveAgentContentUrl = liveAgentContentUrl;
      liveAgentContentUrl__is_set = true;
    }

    protected void setLiveAgentContentUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("liveAgentContentUrl", "urn:metadata.tooling.soap.sforce.com","liveAgentContentUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setLiveAgentContentUrl(__typeMapper.readString(__in, _lookupTypeInfo("liveAgentContentUrl", "urn:metadata.tooling.soap.sforce.com","liveAgentContentUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLiveAgentContentUrl(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("liveAgentContentUrl", "urn:metadata.tooling.soap.sforce.com","liveAgentContentUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true), liveAgentContentUrl, liveAgentContentUrl__is_set);
    }

    /**
     * element : liveChatButton of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean liveChatButton__is_set = false;

    private java.lang.String liveChatButton;

    public java.lang.String getLiveChatButton() {
      return liveChatButton;
    }

    public void setLiveChatButton(java.lang.String liveChatButton) {
      this.liveChatButton = liveChatButton;
      liveChatButton__is_set = true;
    }

    protected void setLiveChatButton(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("liveChatButton", "urn:metadata.tooling.soap.sforce.com","liveChatButton","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setLiveChatButton(__typeMapper.readString(__in, _lookupTypeInfo("liveChatButton", "urn:metadata.tooling.soap.sforce.com","liveChatButton","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLiveChatButton(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("liveChatButton", "urn:metadata.tooling.soap.sforce.com","liveChatButton","http://www.w3.org/2001/XMLSchema","string",1,1,true), liveChatButton, liveChatButton__is_set);
    }

    /**
     * element : liveChatDeployment of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean liveChatDeployment__is_set = false;

    private java.lang.String liveChatDeployment;

    public java.lang.String getLiveChatDeployment() {
      return liveChatDeployment;
    }

    public void setLiveChatDeployment(java.lang.String liveChatDeployment) {
      this.liveChatDeployment = liveChatDeployment;
      liveChatDeployment__is_set = true;
    }

    protected void setLiveChatDeployment(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("liveChatDeployment", "urn:metadata.tooling.soap.sforce.com","liveChatDeployment","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setLiveChatDeployment(__typeMapper.readString(__in, _lookupTypeInfo("liveChatDeployment", "urn:metadata.tooling.soap.sforce.com","liveChatDeployment","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLiveChatDeployment(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("liveChatDeployment", "urn:metadata.tooling.soap.sforce.com","liveChatDeployment","http://www.w3.org/2001/XMLSchema","string",1,1,true), liveChatDeployment, liveChatDeployment__is_set);
    }

    /**
     * element : masterLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean masterLabel__is_set = false;

    private java.lang.String masterLabel;

    public java.lang.String getMasterLabel() {
      return masterLabel;
    }

    public void setMasterLabel(java.lang.String masterLabel) {
      this.masterLabel = masterLabel;
      masterLabel__is_set = true;
    }

    protected void setMasterLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setMasterLabel(__typeMapper.readString(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMasterLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true), masterLabel, masterLabel__is_set);
    }

    /**
     * element : offlineCaseBackgroundImg of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean offlineCaseBackgroundImg__is_set = false;

    private java.lang.String offlineCaseBackgroundImg;

    public java.lang.String getOfflineCaseBackgroundImg() {
      return offlineCaseBackgroundImg;
    }

    public void setOfflineCaseBackgroundImg(java.lang.String offlineCaseBackgroundImg) {
      this.offlineCaseBackgroundImg = offlineCaseBackgroundImg;
      offlineCaseBackgroundImg__is_set = true;
    }

    protected void setOfflineCaseBackgroundImg(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("offlineCaseBackgroundImg", "urn:metadata.tooling.soap.sforce.com","offlineCaseBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setOfflineCaseBackgroundImg(__typeMapper.readString(__in, _lookupTypeInfo("offlineCaseBackgroundImg", "urn:metadata.tooling.soap.sforce.com","offlineCaseBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldOfflineCaseBackgroundImg(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("offlineCaseBackgroundImg", "urn:metadata.tooling.soap.sforce.com","offlineCaseBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), offlineCaseBackgroundImg, offlineCaseBackgroundImg__is_set);
    }

    /**
     * element : prechatBackgroundImg of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean prechatBackgroundImg__is_set = false;

    private java.lang.String prechatBackgroundImg;

    public java.lang.String getPrechatBackgroundImg() {
      return prechatBackgroundImg;
    }

    public void setPrechatBackgroundImg(java.lang.String prechatBackgroundImg) {
      this.prechatBackgroundImg = prechatBackgroundImg;
      prechatBackgroundImg__is_set = true;
    }

    protected void setPrechatBackgroundImg(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("prechatBackgroundImg", "urn:metadata.tooling.soap.sforce.com","prechatBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setPrechatBackgroundImg(__typeMapper.readString(__in, _lookupTypeInfo("prechatBackgroundImg", "urn:metadata.tooling.soap.sforce.com","prechatBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldPrechatBackgroundImg(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("prechatBackgroundImg", "urn:metadata.tooling.soap.sforce.com","prechatBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), prechatBackgroundImg, prechatBackgroundImg__is_set);
    }

    /**
     * element : prechatEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean prechatEnabled__is_set = false;

    private boolean prechatEnabled;

    public boolean getPrechatEnabled() {
      return prechatEnabled;
    }

    public boolean isPrechatEnabled() {
      return prechatEnabled;
    }

    public void setPrechatEnabled(boolean prechatEnabled) {
      this.prechatEnabled = prechatEnabled;
      prechatEnabled__is_set = true;
    }

    protected void setPrechatEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("prechatEnabled", "urn:metadata.tooling.soap.sforce.com","prechatEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setPrechatEnabled(__typeMapper.readBoolean(__in, _lookupTypeInfo("prechatEnabled", "urn:metadata.tooling.soap.sforce.com","prechatEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldPrechatEnabled(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("prechatEnabled", "urn:metadata.tooling.soap.sforce.com","prechatEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), prechatEnabled, prechatEnabled__is_set);
    }

    /**
     * element : prechatJson of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean prechatJson__is_set = false;

    private java.lang.String prechatJson;

    public java.lang.String getPrechatJson() {
      return prechatJson;
    }

    public void setPrechatJson(java.lang.String prechatJson) {
      this.prechatJson = prechatJson;
      prechatJson__is_set = true;
    }

    protected void setPrechatJson(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("prechatJson", "urn:metadata.tooling.soap.sforce.com","prechatJson","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setPrechatJson(__typeMapper.readString(__in, _lookupTypeInfo("prechatJson", "urn:metadata.tooling.soap.sforce.com","prechatJson","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldPrechatJson(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("prechatJson", "urn:metadata.tooling.soap.sforce.com","prechatJson","http://www.w3.org/2001/XMLSchema","string",0,1,true), prechatJson, prechatJson__is_set);
    }

    /**
     * element : scenario of type {urn:tooling.soap.sforce.com}EmbeddedServiceScenario
     * java type: com.sforce.soap.tooling.EmbeddedServiceScenario
     */
    private boolean scenario__is_set = false;

    private com.sforce.soap.tooling.EmbeddedServiceScenario scenario;

    public com.sforce.soap.tooling.EmbeddedServiceScenario getScenario() {
      return scenario;
    }

    public void setScenario(com.sforce.soap.tooling.EmbeddedServiceScenario scenario) {
      this.scenario = scenario;
      scenario__is_set = true;
    }

    protected void setScenario(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("scenario", "urn:metadata.tooling.soap.sforce.com","scenario","urn:tooling.soap.sforce.com","EmbeddedServiceScenario",1,1,true))) {
        setScenario((com.sforce.soap.tooling.EmbeddedServiceScenario)__typeMapper.readObject(__in, _lookupTypeInfo("scenario", "urn:metadata.tooling.soap.sforce.com","scenario","urn:tooling.soap.sforce.com","EmbeddedServiceScenario",1,1,true), com.sforce.soap.tooling.EmbeddedServiceScenario.class));
      }
    }

    private void writeFieldScenario(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("scenario", "urn:metadata.tooling.soap.sforce.com","scenario","urn:tooling.soap.sforce.com","EmbeddedServiceScenario",1,1,true), scenario, scenario__is_set);
    }

    /**
     * element : smallCompanyLogoImg of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean smallCompanyLogoImg__is_set = false;

    private java.lang.String smallCompanyLogoImg;

    public java.lang.String getSmallCompanyLogoImg() {
      return smallCompanyLogoImg;
    }

    public void setSmallCompanyLogoImg(java.lang.String smallCompanyLogoImg) {
      this.smallCompanyLogoImg = smallCompanyLogoImg;
      smallCompanyLogoImg__is_set = true;
    }

    protected void setSmallCompanyLogoImg(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("smallCompanyLogoImg", "urn:metadata.tooling.soap.sforce.com","smallCompanyLogoImg","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setSmallCompanyLogoImg(__typeMapper.readString(__in, _lookupTypeInfo("smallCompanyLogoImg", "urn:metadata.tooling.soap.sforce.com","smallCompanyLogoImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSmallCompanyLogoImg(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("smallCompanyLogoImg", "urn:metadata.tooling.soap.sforce.com","smallCompanyLogoImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), smallCompanyLogoImg, smallCompanyLogoImg__is_set);
    }

    /**
     * element : waitingStateBackgroundImg of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean waitingStateBackgroundImg__is_set = false;

    private java.lang.String waitingStateBackgroundImg;

    public java.lang.String getWaitingStateBackgroundImg() {
      return waitingStateBackgroundImg;
    }

    public void setWaitingStateBackgroundImg(java.lang.String waitingStateBackgroundImg) {
      this.waitingStateBackgroundImg = waitingStateBackgroundImg;
      waitingStateBackgroundImg__is_set = true;
    }

    protected void setWaitingStateBackgroundImg(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("waitingStateBackgroundImg", "urn:metadata.tooling.soap.sforce.com","waitingStateBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setWaitingStateBackgroundImg(__typeMapper.readString(__in, _lookupTypeInfo("waitingStateBackgroundImg", "urn:metadata.tooling.soap.sforce.com","waitingStateBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldWaitingStateBackgroundImg(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("waitingStateBackgroundImg", "urn:metadata.tooling.soap.sforce.com","waitingStateBackgroundImg","http://www.w3.org/2001/XMLSchema","string",0,1,true), waitingStateBackgroundImg, waitingStateBackgroundImg__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "EmbeddedServiceLiveAgent");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EmbeddedServiceLiveAgent ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldAvatarImg(__out, __typeMapper);
      writeFieldCustomPrechatComponent(__out, __typeMapper);
      writeFieldEmbeddedServiceConfig(__out, __typeMapper);
      writeFieldEmbeddedServiceQuickActions(__out, __typeMapper);
      writeFieldEnabled(__out, __typeMapper);
      writeFieldFontSize(__out, __typeMapper);
      writeFieldHeaderBackgroundImg(__out, __typeMapper);
      writeFieldIsOfflineCaseEnabled(__out, __typeMapper);
      writeFieldIsQueuePositionEnabled(__out, __typeMapper);
      writeFieldLiveAgentChatUrl(__out, __typeMapper);
      writeFieldLiveAgentContentUrl(__out, __typeMapper);
      writeFieldLiveChatButton(__out, __typeMapper);
      writeFieldLiveChatDeployment(__out, __typeMapper);
      writeFieldMasterLabel(__out, __typeMapper);
      writeFieldOfflineCaseBackgroundImg(__out, __typeMapper);
      writeFieldPrechatBackgroundImg(__out, __typeMapper);
      writeFieldPrechatEnabled(__out, __typeMapper);
      writeFieldPrechatJson(__out, __typeMapper);
      writeFieldScenario(__out, __typeMapper);
      writeFieldSmallCompanyLogoImg(__out, __typeMapper);
      writeFieldWaitingStateBackgroundImg(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setAvatarImg(__in, __typeMapper);
      setCustomPrechatComponent(__in, __typeMapper);
      setEmbeddedServiceConfig(__in, __typeMapper);
      setEmbeddedServiceQuickActions(__in, __typeMapper);
      setEnabled(__in, __typeMapper);
      setFontSize(__in, __typeMapper);
      setHeaderBackgroundImg(__in, __typeMapper);
      setIsOfflineCaseEnabled(__in, __typeMapper);
      setIsQueuePositionEnabled(__in, __typeMapper);
      setLiveAgentChatUrl(__in, __typeMapper);
      setLiveAgentContentUrl(__in, __typeMapper);
      setLiveChatButton(__in, __typeMapper);
      setLiveChatDeployment(__in, __typeMapper);
      setMasterLabel(__in, __typeMapper);
      setOfflineCaseBackgroundImg(__in, __typeMapper);
      setPrechatBackgroundImg(__in, __typeMapper);
      setPrechatEnabled(__in, __typeMapper);
      setPrechatJson(__in, __typeMapper);
      setScenario(__in, __typeMapper);
      setSmallCompanyLogoImg(__in, __typeMapper);
      setWaitingStateBackgroundImg(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "avatarImg", avatarImg);
      toStringHelper(sb, "customPrechatComponent", customPrechatComponent);
      toStringHelper(sb, "embeddedServiceConfig", embeddedServiceConfig);
      toStringHelper(sb, "embeddedServiceQuickActions", embeddedServiceQuickActions);
      toStringHelper(sb, "enabled", enabled);
      toStringHelper(sb, "fontSize", fontSize);
      toStringHelper(sb, "headerBackgroundImg", headerBackgroundImg);
      toStringHelper(sb, "isOfflineCaseEnabled", isOfflineCaseEnabled);
      toStringHelper(sb, "isQueuePositionEnabled", isQueuePositionEnabled);
      toStringHelper(sb, "liveAgentChatUrl", liveAgentChatUrl);
      toStringHelper(sb, "liveAgentContentUrl", liveAgentContentUrl);
      toStringHelper(sb, "liveChatButton", liveChatButton);
      toStringHelper(sb, "liveChatDeployment", liveChatDeployment);
      toStringHelper(sb, "masterLabel", masterLabel);
      toStringHelper(sb, "offlineCaseBackgroundImg", offlineCaseBackgroundImg);
      toStringHelper(sb, "prechatBackgroundImg", prechatBackgroundImg);
      toStringHelper(sb, "prechatEnabled", prechatEnabled);
      toStringHelper(sb, "prechatJson", prechatJson);
      toStringHelper(sb, "scenario", scenario);
      toStringHelper(sb, "smallCompanyLogoImg", smallCompanyLogoImg);
      toStringHelper(sb, "waitingStateBackgroundImg", waitingStateBackgroundImg);
    }


}
