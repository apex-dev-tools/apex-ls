package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class CleanRule implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public CleanRule() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : bulkEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean bulkEnabled__is_set = false;

    private boolean bulkEnabled;

    public boolean getBulkEnabled() {
      return bulkEnabled;
    }

    public boolean isBulkEnabled() {
      return bulkEnabled;
    }

    public void setBulkEnabled(boolean bulkEnabled) {
      this.bulkEnabled = bulkEnabled;
      bulkEnabled__is_set = true;
    }

    protected void setBulkEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("bulkEnabled", "urn:metadata.tooling.soap.sforce.com","bulkEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setBulkEnabled(__typeMapper.readBoolean(__in, _lookupTypeInfo("bulkEnabled", "urn:metadata.tooling.soap.sforce.com","bulkEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldBulkEnabled(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("bulkEnabled", "urn:metadata.tooling.soap.sforce.com","bulkEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), bulkEnabled, bulkEnabled__is_set);
    }

    /**
     * element : bypassTriggers of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean bypassTriggers__is_set = false;

    private boolean bypassTriggers;

    public boolean getBypassTriggers() {
      return bypassTriggers;
    }

    public boolean isBypassTriggers() {
      return bypassTriggers;
    }

    public void setBypassTriggers(boolean bypassTriggers) {
      this.bypassTriggers = bypassTriggers;
      bypassTriggers__is_set = true;
    }

    protected void setBypassTriggers(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("bypassTriggers", "urn:metadata.tooling.soap.sforce.com","bypassTriggers","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setBypassTriggers(__typeMapper.readBoolean(__in, _lookupTypeInfo("bypassTriggers", "urn:metadata.tooling.soap.sforce.com","bypassTriggers","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldBypassTriggers(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("bypassTriggers", "urn:metadata.tooling.soap.sforce.com","bypassTriggers","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), bypassTriggers, bypassTriggers__is_set);
    }

    /**
     * element : bypassWorkflow of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean bypassWorkflow__is_set = false;

    private boolean bypassWorkflow;

    public boolean getBypassWorkflow() {
      return bypassWorkflow;
    }

    public boolean isBypassWorkflow() {
      return bypassWorkflow;
    }

    public void setBypassWorkflow(boolean bypassWorkflow) {
      this.bypassWorkflow = bypassWorkflow;
      bypassWorkflow__is_set = true;
    }

    protected void setBypassWorkflow(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("bypassWorkflow", "urn:metadata.tooling.soap.sforce.com","bypassWorkflow","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setBypassWorkflow(__typeMapper.readBoolean(__in, _lookupTypeInfo("bypassWorkflow", "urn:metadata.tooling.soap.sforce.com","bypassWorkflow","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldBypassWorkflow(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("bypassWorkflow", "urn:metadata.tooling.soap.sforce.com","bypassWorkflow","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), bypassWorkflow, bypassWorkflow__is_set);
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setDescription(__typeMapper.readString(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDescription(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",1,1,true), description, description__is_set);
    }

    /**
     * element : developerName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean developerName__is_set = false;

    private java.lang.String developerName;

    public java.lang.String getDeveloperName() {
      return developerName;
    }

    public void setDeveloperName(java.lang.String developerName) {
      this.developerName = developerName;
      developerName__is_set = true;
    }

    protected void setDeveloperName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("developerName", "urn:metadata.tooling.soap.sforce.com","developerName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setDeveloperName(__typeMapper.readString(__in, _lookupTypeInfo("developerName", "urn:metadata.tooling.soap.sforce.com","developerName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDeveloperName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("developerName", "urn:metadata.tooling.soap.sforce.com","developerName","http://www.w3.org/2001/XMLSchema","string",1,1,true), developerName, developerName__is_set);
    }

    /**
     * element : fieldMappings of type {urn:metadata.tooling.soap.sforce.com}FieldMapping
     * java type: com.sforce.soap.tooling.metadata.FieldMapping[]
     */
    private boolean fieldMappings__is_set = false;

    private com.sforce.soap.tooling.metadata.FieldMapping[] fieldMappings = new com.sforce.soap.tooling.metadata.FieldMapping[0];

    public com.sforce.soap.tooling.metadata.FieldMapping[] getFieldMappings() {
      return fieldMappings;
    }

    public void setFieldMappings(com.sforce.soap.tooling.metadata.FieldMapping[] fieldMappings) {
      this.fieldMappings = fieldMappings;
      fieldMappings__is_set = true;
    }

    protected void setFieldMappings(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("fieldMappings", "urn:metadata.tooling.soap.sforce.com","fieldMappings","urn:metadata.tooling.soap.sforce.com","FieldMapping",0,-1,true))) {
        setFieldMappings((com.sforce.soap.tooling.metadata.FieldMapping[])__typeMapper.readObject(__in, _lookupTypeInfo("fieldMappings", "urn:metadata.tooling.soap.sforce.com","fieldMappings","urn:metadata.tooling.soap.sforce.com","FieldMapping",0,-1,true), com.sforce.soap.tooling.metadata.FieldMapping[].class));
      }
    }

    private void writeFieldFieldMappings(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fieldMappings", "urn:metadata.tooling.soap.sforce.com","fieldMappings","urn:metadata.tooling.soap.sforce.com","FieldMapping",0,-1,true), fieldMappings, fieldMappings__is_set);
    }

    /**
     * element : masterLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean masterLabel__is_set = false;

    private java.lang.String masterLabel;

    public java.lang.String getMasterLabel() {
      return masterLabel;
    }

    public void setMasterLabel(java.lang.String masterLabel) {
      this.masterLabel = masterLabel;
      masterLabel__is_set = true;
    }

    protected void setMasterLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setMasterLabel(__typeMapper.readString(__in, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMasterLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("masterLabel", "urn:metadata.tooling.soap.sforce.com","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true), masterLabel, masterLabel__is_set);
    }

    /**
     * element : matchRule of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean matchRule__is_set = false;

    private java.lang.String matchRule;

    public java.lang.String getMatchRule() {
      return matchRule;
    }

    public void setMatchRule(java.lang.String matchRule) {
      this.matchRule = matchRule;
      matchRule__is_set = true;
    }

    protected void setMatchRule(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("matchRule", "urn:metadata.tooling.soap.sforce.com","matchRule","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setMatchRule(__typeMapper.readString(__in, _lookupTypeInfo("matchRule", "urn:metadata.tooling.soap.sforce.com","matchRule","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMatchRule(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("matchRule", "urn:metadata.tooling.soap.sforce.com","matchRule","http://www.w3.org/2001/XMLSchema","string",1,1,true), matchRule, matchRule__is_set);
    }

    /**
     * element : sourceSobjectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean sourceSobjectType__is_set = false;

    private java.lang.String sourceSobjectType;

    public java.lang.String getSourceSobjectType() {
      return sourceSobjectType;
    }

    public void setSourceSobjectType(java.lang.String sourceSobjectType) {
      this.sourceSobjectType = sourceSobjectType;
      sourceSobjectType__is_set = true;
    }

    protected void setSourceSobjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("sourceSobjectType", "urn:metadata.tooling.soap.sforce.com","sourceSobjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setSourceSobjectType(__typeMapper.readString(__in, _lookupTypeInfo("sourceSobjectType", "urn:metadata.tooling.soap.sforce.com","sourceSobjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSourceSobjectType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("sourceSobjectType", "urn:metadata.tooling.soap.sforce.com","sourceSobjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true), sourceSobjectType, sourceSobjectType__is_set);
    }

    /**
     * element : status of type {urn:tooling.soap.sforce.com}CleanRuleStatus
     * java type: com.sforce.soap.tooling.CleanRuleStatus
     */
    private boolean status__is_set = false;

    private com.sforce.soap.tooling.CleanRuleStatus status;

    public com.sforce.soap.tooling.CleanRuleStatus getStatus() {
      return status;
    }

    public void setStatus(com.sforce.soap.tooling.CleanRuleStatus status) {
      this.status = status;
      status__is_set = true;
    }

    protected void setStatus(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("status", "urn:metadata.tooling.soap.sforce.com","status","urn:tooling.soap.sforce.com","CleanRuleStatus",1,1,true))) {
        setStatus((com.sforce.soap.tooling.CleanRuleStatus)__typeMapper.readObject(__in, _lookupTypeInfo("status", "urn:metadata.tooling.soap.sforce.com","status","urn:tooling.soap.sforce.com","CleanRuleStatus",1,1,true), com.sforce.soap.tooling.CleanRuleStatus.class));
      }
    }

    private void writeFieldStatus(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("status", "urn:metadata.tooling.soap.sforce.com","status","urn:tooling.soap.sforce.com","CleanRuleStatus",1,1,true), status, status__is_set);
    }

    /**
     * element : targetSobjectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean targetSobjectType__is_set = false;

    private java.lang.String targetSobjectType;

    public java.lang.String getTargetSobjectType() {
      return targetSobjectType;
    }

    public void setTargetSobjectType(java.lang.String targetSobjectType) {
      this.targetSobjectType = targetSobjectType;
      targetSobjectType__is_set = true;
    }

    protected void setTargetSobjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("targetSobjectType", "urn:metadata.tooling.soap.sforce.com","targetSobjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setTargetSobjectType(__typeMapper.readString(__in, _lookupTypeInfo("targetSobjectType", "urn:metadata.tooling.soap.sforce.com","targetSobjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldTargetSobjectType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("targetSobjectType", "urn:metadata.tooling.soap.sforce.com","targetSobjectType","http://www.w3.org/2001/XMLSchema","string",1,1,true), targetSobjectType, targetSobjectType__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[CleanRule ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldBulkEnabled(__out, __typeMapper);
      writeFieldBypassTriggers(__out, __typeMapper);
      writeFieldBypassWorkflow(__out, __typeMapper);
      writeFieldDescription(__out, __typeMapper);
      writeFieldDeveloperName(__out, __typeMapper);
      writeFieldFieldMappings(__out, __typeMapper);
      writeFieldMasterLabel(__out, __typeMapper);
      writeFieldMatchRule(__out, __typeMapper);
      writeFieldSourceSobjectType(__out, __typeMapper);
      writeFieldStatus(__out, __typeMapper);
      writeFieldTargetSobjectType(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setBulkEnabled(__in, __typeMapper);
      setBypassTriggers(__in, __typeMapper);
      setBypassWorkflow(__in, __typeMapper);
      setDescription(__in, __typeMapper);
      setDeveloperName(__in, __typeMapper);
      setFieldMappings(__in, __typeMapper);
      setMasterLabel(__in, __typeMapper);
      setMatchRule(__in, __typeMapper);
      setSourceSobjectType(__in, __typeMapper);
      setStatus(__in, __typeMapper);
      setTargetSobjectType(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "bulkEnabled", bulkEnabled);
      toStringHelper(sb, "bypassTriggers", bypassTriggers);
      toStringHelper(sb, "bypassWorkflow", bypassWorkflow);
      toStringHelper(sb, "description", description);
      toStringHelper(sb, "developerName", developerName);
      toStringHelper(sb, "fieldMappings", fieldMappings);
      toStringHelper(sb, "masterLabel", masterLabel);
      toStringHelper(sb, "matchRule", matchRule);
      toStringHelper(sb, "sourceSobjectType", sourceSobjectType);
      toStringHelper(sb, "status", status);
      toStringHelper(sb, "targetSobjectType", targetSobjectType);
    }


}
