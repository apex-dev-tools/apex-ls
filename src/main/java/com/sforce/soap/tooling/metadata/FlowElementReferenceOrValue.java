package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class FlowElementReferenceOrValue implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public FlowElementReferenceOrValue() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : booleanValue of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private boolean booleanValue__is_set = false;

    private java.lang.Boolean booleanValue;

    public java.lang.Boolean getBooleanValue() {
      return booleanValue;
    }

    public void setBooleanValue(java.lang.Boolean booleanValue) {
      this.booleanValue = booleanValue;
      booleanValue__is_set = true;
    }

    protected void setBooleanValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("booleanValue", "urn:metadata.tooling.soap.sforce.com","booleanValue","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setBooleanValue((java.lang.Boolean)__typeMapper.readObject(__in, _lookupTypeInfo("booleanValue", "urn:metadata.tooling.soap.sforce.com","booleanValue","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), java.lang.Boolean.class));
      }
    }

    private void writeFieldBooleanValue(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("booleanValue", "urn:metadata.tooling.soap.sforce.com","booleanValue","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), booleanValue, booleanValue__is_set);
    }

    /**
     * element : dateTimeValue of type {http://www.w3.org/2001/XMLSchema}dateTime
     * java type: java.util.Calendar
     */
    private boolean dateTimeValue__is_set = false;

    private java.util.Calendar dateTimeValue;

    public java.util.Calendar getDateTimeValue() {
      return dateTimeValue;
    }

    public void setDateTimeValue(java.util.Calendar dateTimeValue) {
      this.dateTimeValue = dateTimeValue;
      dateTimeValue__is_set = true;
    }

    protected void setDateTimeValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("dateTimeValue", "urn:metadata.tooling.soap.sforce.com","dateTimeValue","http://www.w3.org/2001/XMLSchema","dateTime",0,1,true))) {
        setDateTimeValue((java.util.Calendar)__typeMapper.readObject(__in, _lookupTypeInfo("dateTimeValue", "urn:metadata.tooling.soap.sforce.com","dateTimeValue","http://www.w3.org/2001/XMLSchema","dateTime",0,1,true), java.util.Calendar.class));
      }
    }

    private void writeFieldDateTimeValue(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("dateTimeValue", "urn:metadata.tooling.soap.sforce.com","dateTimeValue","http://www.w3.org/2001/XMLSchema","dateTime",0,1,true), dateTimeValue, dateTimeValue__is_set);
    }

    /**
     * element : dateValue of type {http://www.w3.org/2001/XMLSchema}date
     * java type: java.util.Calendar
     */
    private boolean dateValue__is_set = false;

    private java.util.Calendar dateValue;

    public java.util.Calendar getDateValue() {
      return dateValue;
    }

    public void setDateValue(java.util.Calendar dateValue) {
      this.dateValue = dateValue;
      dateValue__is_set = true;
    }

    protected void setDateValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("dateValue", "urn:metadata.tooling.soap.sforce.com","dateValue","http://www.w3.org/2001/XMLSchema","date",0,1,true))) {
        setDateValue((java.util.Calendar)__typeMapper.readObject(__in, _lookupTypeInfo("dateValue", "urn:metadata.tooling.soap.sforce.com","dateValue","http://www.w3.org/2001/XMLSchema","date",0,1,true), java.util.Calendar.class));
      }
    }

    private void writeFieldDateValue(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("dateValue", "urn:metadata.tooling.soap.sforce.com","dateValue","http://www.w3.org/2001/XMLSchema","date",0,1,true), dateValue, dateValue__is_set);
    }

    /**
     * element : elementReference of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean elementReference__is_set = false;

    private java.lang.String elementReference;

    public java.lang.String getElementReference() {
      return elementReference;
    }

    public void setElementReference(java.lang.String elementReference) {
      this.elementReference = elementReference;
      elementReference__is_set = true;
    }

    protected void setElementReference(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("elementReference", "urn:metadata.tooling.soap.sforce.com","elementReference","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setElementReference(__typeMapper.readString(__in, _lookupTypeInfo("elementReference", "urn:metadata.tooling.soap.sforce.com","elementReference","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldElementReference(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("elementReference", "urn:metadata.tooling.soap.sforce.com","elementReference","http://www.w3.org/2001/XMLSchema","string",0,1,true), elementReference, elementReference__is_set);
    }

    /**
     * element : numberValue of type {http://www.w3.org/2001/XMLSchema}double
     * java type: java.lang.Double
     */
    private boolean numberValue__is_set = false;

    private java.lang.Double numberValue;

    public java.lang.Double getNumberValue() {
      return numberValue;
    }

    public void setNumberValue(java.lang.Double numberValue) {
      this.numberValue = numberValue;
      numberValue__is_set = true;
    }

    protected void setNumberValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("numberValue", "urn:metadata.tooling.soap.sforce.com","numberValue","http://www.w3.org/2001/XMLSchema","double",0,1,true))) {
        setNumberValue((java.lang.Double)__typeMapper.readObject(__in, _lookupTypeInfo("numberValue", "urn:metadata.tooling.soap.sforce.com","numberValue","http://www.w3.org/2001/XMLSchema","double",0,1,true), java.lang.Double.class));
      }
    }

    private void writeFieldNumberValue(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("numberValue", "urn:metadata.tooling.soap.sforce.com","numberValue","http://www.w3.org/2001/XMLSchema","double",0,1,true), numberValue, numberValue__is_set);
    }

    /**
     * element : stringValue of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean stringValue__is_set = false;

    private java.lang.String stringValue;

    public java.lang.String getStringValue() {
      return stringValue;
    }

    public void setStringValue(java.lang.String stringValue) {
      this.stringValue = stringValue;
      stringValue__is_set = true;
    }

    protected void setStringValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("stringValue", "urn:metadata.tooling.soap.sforce.com","stringValue","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setStringValue(__typeMapper.readString(__in, _lookupTypeInfo("stringValue", "urn:metadata.tooling.soap.sforce.com","stringValue","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldStringValue(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("stringValue", "urn:metadata.tooling.soap.sforce.com","stringValue","http://www.w3.org/2001/XMLSchema","string",0,1,true), stringValue, stringValue__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlowElementReferenceOrValue ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldBooleanValue(__out, __typeMapper);
      writeFieldDateTimeValue(__out, __typeMapper);
      writeFieldDateValue(__out, __typeMapper);
      writeFieldElementReference(__out, __typeMapper);
      writeFieldNumberValue(__out, __typeMapper);
      writeFieldStringValue(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setBooleanValue(__in, __typeMapper);
      setDateTimeValue(__in, __typeMapper);
      setDateValue(__in, __typeMapper);
      setElementReference(__in, __typeMapper);
      setNumberValue(__in, __typeMapper);
      setStringValue(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "booleanValue", booleanValue);
      toStringHelper(sb, "dateTimeValue", dateTimeValue);
      toStringHelper(sb, "dateValue", dateValue);
      toStringHelper(sb, "elementReference", elementReference);
      toStringHelper(sb, "numberValue", numberValue);
      toStringHelper(sb, "stringValue", stringValue);
    }


}
