package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class GlobalPicklistValue extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public GlobalPicklistValue() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : color of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean color__is_set = false;

    private java.lang.String color;

    public java.lang.String getColor() {
      return color;
    }

    public void setColor(java.lang.String color) {
      this.color = color;
      color__is_set = true;
    }

    protected void setColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("color", "urn:metadata.tooling.soap.sforce.com","color","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setColor(__typeMapper.readString(__in, _lookupTypeInfo("color", "urn:metadata.tooling.soap.sforce.com","color","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldColor(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("color", "urn:metadata.tooling.soap.sforce.com","color","http://www.w3.org/2001/XMLSchema","string",0,1,true), color, color__is_set);
    }

    /**
     * element : default of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean _default__is_set = false;

    private boolean _default;

    public boolean getDefault() {
      return _default;
    }

    public boolean isDefault() {
      return _default;
    }

    public void setDefault(boolean _default) {
      this._default = _default;
      _default__is_set = true;
    }

    protected void setDefault(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("_default", "urn:metadata.tooling.soap.sforce.com","default","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setDefault(__typeMapper.readBoolean(__in, _lookupTypeInfo("_default", "urn:metadata.tooling.soap.sforce.com","default","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldDefault(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("_default", "urn:metadata.tooling.soap.sforce.com","default","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), _default, _default__is_set);
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDescription(__typeMapper.readString(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDescription(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), description, description__is_set);
    }

    /**
     * element : isActive of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isActive__is_set = false;

    private boolean isActive;

    public boolean getIsActive() {
      return isActive;
    }

    public boolean isIsActive() {
      return isActive;
    }

    public void setIsActive(boolean isActive) {
      this.isActive = isActive;
      isActive__is_set = true;
    }

    protected void setIsActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("isActive", "urn:metadata.tooling.soap.sforce.com","isActive","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setIsActive(__typeMapper.readBoolean(__in, _lookupTypeInfo("isActive", "urn:metadata.tooling.soap.sforce.com","isActive","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldIsActive(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isActive", "urn:metadata.tooling.soap.sforce.com","isActive","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), isActive, isActive__is_set);
    }

    /**
     * element : valueName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean valueName__is_set = false;

    private java.lang.String valueName;

    public java.lang.String getValueName() {
      return valueName;
    }

    public void setValueName(java.lang.String valueName) {
      this.valueName = valueName;
      valueName__is_set = true;
    }

    protected void setValueName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("valueName", "urn:metadata.tooling.soap.sforce.com","valueName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setValueName(__typeMapper.readString(__in, _lookupTypeInfo("valueName", "urn:metadata.tooling.soap.sforce.com","valueName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldValueName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("valueName", "urn:metadata.tooling.soap.sforce.com","valueName","http://www.w3.org/2001/XMLSchema","string",1,1,true), valueName, valueName__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "GlobalPicklistValue");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[GlobalPicklistValue ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldColor(__out, __typeMapper);
      writeFieldDefault(__out, __typeMapper);
      writeFieldDescription(__out, __typeMapper);
      writeFieldIsActive(__out, __typeMapper);
      writeFieldValueName(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setColor(__in, __typeMapper);
      setDefault(__in, __typeMapper);
      setDescription(__in, __typeMapper);
      setIsActive(__in, __typeMapper);
      setValueName(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "color", color);
      toStringHelper(sb, "_default", _default);
      toStringHelper(sb, "description", description);
      toStringHelper(sb, "isActive", isActive);
      toStringHelper(sb, "valueName", valueName);
    }


}
