package com.sforce.soap.tooling.metadata;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class Profile extends com.sforce.soap.tooling.metadata.Metadata {

    /**
     * Constructor
     */
    public Profile() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : applicationVisibilities of type {urn:metadata.tooling.soap.sforce.com}ProfileApplicationVisibility
     * java type: com.sforce.soap.tooling.metadata.ProfileApplicationVisibility[]
     */
    private boolean applicationVisibilities__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileApplicationVisibility[] applicationVisibilities = new com.sforce.soap.tooling.metadata.ProfileApplicationVisibility[0];

    public com.sforce.soap.tooling.metadata.ProfileApplicationVisibility[] getApplicationVisibilities() {
      return applicationVisibilities;
    }

    public void setApplicationVisibilities(com.sforce.soap.tooling.metadata.ProfileApplicationVisibility[] applicationVisibilities) {
      this.applicationVisibilities = applicationVisibilities;
      applicationVisibilities__is_set = true;
    }

    protected void setApplicationVisibilities(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("applicationVisibilities", "urn:metadata.tooling.soap.sforce.com","applicationVisibilities","urn:metadata.tooling.soap.sforce.com","ProfileApplicationVisibility",0,-1,true))) {
        setApplicationVisibilities((com.sforce.soap.tooling.metadata.ProfileApplicationVisibility[])__typeMapper.readObject(__in, _lookupTypeInfo("applicationVisibilities", "urn:metadata.tooling.soap.sforce.com","applicationVisibilities","urn:metadata.tooling.soap.sforce.com","ProfileApplicationVisibility",0,-1,true), com.sforce.soap.tooling.metadata.ProfileApplicationVisibility[].class));
      }
    }

    private void writeFieldApplicationVisibilities(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("applicationVisibilities", "urn:metadata.tooling.soap.sforce.com","applicationVisibilities","urn:metadata.tooling.soap.sforce.com","ProfileApplicationVisibility",0,-1,true), applicationVisibilities, applicationVisibilities__is_set);
    }

    /**
     * element : classAccesses of type {urn:metadata.tooling.soap.sforce.com}ProfileApexClassAccess
     * java type: com.sforce.soap.tooling.metadata.ProfileApexClassAccess[]
     */
    private boolean classAccesses__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileApexClassAccess[] classAccesses = new com.sforce.soap.tooling.metadata.ProfileApexClassAccess[0];

    public com.sforce.soap.tooling.metadata.ProfileApexClassAccess[] getClassAccesses() {
      return classAccesses;
    }

    public void setClassAccesses(com.sforce.soap.tooling.metadata.ProfileApexClassAccess[] classAccesses) {
      this.classAccesses = classAccesses;
      classAccesses__is_set = true;
    }

    protected void setClassAccesses(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("classAccesses", "urn:metadata.tooling.soap.sforce.com","classAccesses","urn:metadata.tooling.soap.sforce.com","ProfileApexClassAccess",0,-1,true))) {
        setClassAccesses((com.sforce.soap.tooling.metadata.ProfileApexClassAccess[])__typeMapper.readObject(__in, _lookupTypeInfo("classAccesses", "urn:metadata.tooling.soap.sforce.com","classAccesses","urn:metadata.tooling.soap.sforce.com","ProfileApexClassAccess",0,-1,true), com.sforce.soap.tooling.metadata.ProfileApexClassAccess[].class));
      }
    }

    private void writeFieldClassAccesses(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("classAccesses", "urn:metadata.tooling.soap.sforce.com","classAccesses","urn:metadata.tooling.soap.sforce.com","ProfileApexClassAccess",0,-1,true), classAccesses, classAccesses__is_set);
    }

    /**
     * element : custom of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean custom__is_set = false;

    private boolean custom;

    public boolean getCustom() {
      return custom;
    }

    public boolean isCustom() {
      return custom;
    }

    public void setCustom(boolean custom) {
      this.custom = custom;
      custom__is_set = true;
    }

    protected void setCustom(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("custom", "urn:metadata.tooling.soap.sforce.com","custom","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setCustom(__typeMapper.readBoolean(__in, _lookupTypeInfo("custom", "urn:metadata.tooling.soap.sforce.com","custom","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldCustom(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("custom", "urn:metadata.tooling.soap.sforce.com","custom","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), custom, custom__is_set);
    }

    /**
     * element : customPermissions of type {urn:metadata.tooling.soap.sforce.com}ProfileCustomPermissions
     * java type: com.sforce.soap.tooling.metadata.ProfileCustomPermissions[]
     */
    private boolean customPermissions__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileCustomPermissions[] customPermissions = new com.sforce.soap.tooling.metadata.ProfileCustomPermissions[0];

    public com.sforce.soap.tooling.metadata.ProfileCustomPermissions[] getCustomPermissions() {
      return customPermissions;
    }

    public void setCustomPermissions(com.sforce.soap.tooling.metadata.ProfileCustomPermissions[] customPermissions) {
      this.customPermissions = customPermissions;
      customPermissions__is_set = true;
    }

    protected void setCustomPermissions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("customPermissions", "urn:metadata.tooling.soap.sforce.com","customPermissions","urn:metadata.tooling.soap.sforce.com","ProfileCustomPermissions",0,-1,true))) {
        setCustomPermissions((com.sforce.soap.tooling.metadata.ProfileCustomPermissions[])__typeMapper.readObject(__in, _lookupTypeInfo("customPermissions", "urn:metadata.tooling.soap.sforce.com","customPermissions","urn:metadata.tooling.soap.sforce.com","ProfileCustomPermissions",0,-1,true), com.sforce.soap.tooling.metadata.ProfileCustomPermissions[].class));
      }
    }

    private void writeFieldCustomPermissions(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("customPermissions", "urn:metadata.tooling.soap.sforce.com","customPermissions","urn:metadata.tooling.soap.sforce.com","ProfileCustomPermissions",0,-1,true), customPermissions, customPermissions__is_set);
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDescription(__typeMapper.readString(__in, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDescription(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("description", "urn:metadata.tooling.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",0,1,true), description, description__is_set);
    }

    /**
     * element : externalDataSourceAccesses of type {urn:metadata.tooling.soap.sforce.com}ProfileExternalDataSourceAccess
     * java type: com.sforce.soap.tooling.metadata.ProfileExternalDataSourceAccess[]
     */
    private boolean externalDataSourceAccesses__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileExternalDataSourceAccess[] externalDataSourceAccesses = new com.sforce.soap.tooling.metadata.ProfileExternalDataSourceAccess[0];

    public com.sforce.soap.tooling.metadata.ProfileExternalDataSourceAccess[] getExternalDataSourceAccesses() {
      return externalDataSourceAccesses;
    }

    public void setExternalDataSourceAccesses(com.sforce.soap.tooling.metadata.ProfileExternalDataSourceAccess[] externalDataSourceAccesses) {
      this.externalDataSourceAccesses = externalDataSourceAccesses;
      externalDataSourceAccesses__is_set = true;
    }

    protected void setExternalDataSourceAccesses(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("externalDataSourceAccesses", "urn:metadata.tooling.soap.sforce.com","externalDataSourceAccesses","urn:metadata.tooling.soap.sforce.com","ProfileExternalDataSourceAccess",0,-1,true))) {
        setExternalDataSourceAccesses((com.sforce.soap.tooling.metadata.ProfileExternalDataSourceAccess[])__typeMapper.readObject(__in, _lookupTypeInfo("externalDataSourceAccesses", "urn:metadata.tooling.soap.sforce.com","externalDataSourceAccesses","urn:metadata.tooling.soap.sforce.com","ProfileExternalDataSourceAccess",0,-1,true), com.sforce.soap.tooling.metadata.ProfileExternalDataSourceAccess[].class));
      }
    }

    private void writeFieldExternalDataSourceAccesses(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("externalDataSourceAccesses", "urn:metadata.tooling.soap.sforce.com","externalDataSourceAccesses","urn:metadata.tooling.soap.sforce.com","ProfileExternalDataSourceAccess",0,-1,true), externalDataSourceAccesses, externalDataSourceAccesses__is_set);
    }

    /**
     * element : fieldPermissions of type {urn:metadata.tooling.soap.sforce.com}ProfileFieldLevelSecurity
     * java type: com.sforce.soap.tooling.metadata.ProfileFieldLevelSecurity[]
     */
    private boolean fieldPermissions__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileFieldLevelSecurity[] fieldPermissions = new com.sforce.soap.tooling.metadata.ProfileFieldLevelSecurity[0];

    public com.sforce.soap.tooling.metadata.ProfileFieldLevelSecurity[] getFieldPermissions() {
      return fieldPermissions;
    }

    public void setFieldPermissions(com.sforce.soap.tooling.metadata.ProfileFieldLevelSecurity[] fieldPermissions) {
      this.fieldPermissions = fieldPermissions;
      fieldPermissions__is_set = true;
    }

    protected void setFieldPermissions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("fieldPermissions", "urn:metadata.tooling.soap.sforce.com","fieldPermissions","urn:metadata.tooling.soap.sforce.com","ProfileFieldLevelSecurity",0,-1,true))) {
        setFieldPermissions((com.sforce.soap.tooling.metadata.ProfileFieldLevelSecurity[])__typeMapper.readObject(__in, _lookupTypeInfo("fieldPermissions", "urn:metadata.tooling.soap.sforce.com","fieldPermissions","urn:metadata.tooling.soap.sforce.com","ProfileFieldLevelSecurity",0,-1,true), com.sforce.soap.tooling.metadata.ProfileFieldLevelSecurity[].class));
      }
    }

    private void writeFieldFieldPermissions(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fieldPermissions", "urn:metadata.tooling.soap.sforce.com","fieldPermissions","urn:metadata.tooling.soap.sforce.com","ProfileFieldLevelSecurity",0,-1,true), fieldPermissions, fieldPermissions__is_set);
    }

    /**
     * element : loginHours of type {urn:metadata.tooling.soap.sforce.com}ProfileLoginHours
     * java type: com.sforce.soap.tooling.metadata.ProfileLoginHours
     */
    private boolean loginHours__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileLoginHours loginHours;

    public com.sforce.soap.tooling.metadata.ProfileLoginHours getLoginHours() {
      return loginHours;
    }

    public void setLoginHours(com.sforce.soap.tooling.metadata.ProfileLoginHours loginHours) {
      this.loginHours = loginHours;
      loginHours__is_set = true;
    }

    protected void setLoginHours(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("loginHours", "urn:metadata.tooling.soap.sforce.com","loginHours","urn:metadata.tooling.soap.sforce.com","ProfileLoginHours",0,1,true))) {
        setLoginHours((com.sforce.soap.tooling.metadata.ProfileLoginHours)__typeMapper.readObject(__in, _lookupTypeInfo("loginHours", "urn:metadata.tooling.soap.sforce.com","loginHours","urn:metadata.tooling.soap.sforce.com","ProfileLoginHours",0,1,true), com.sforce.soap.tooling.metadata.ProfileLoginHours.class));
      }
    }

    private void writeFieldLoginHours(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("loginHours", "urn:metadata.tooling.soap.sforce.com","loginHours","urn:metadata.tooling.soap.sforce.com","ProfileLoginHours",0,1,true), loginHours, loginHours__is_set);
    }

    /**
     * element : loginIpRanges of type {urn:metadata.tooling.soap.sforce.com}ProfileLoginIpRange
     * java type: com.sforce.soap.tooling.metadata.ProfileLoginIpRange[]
     */
    private boolean loginIpRanges__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileLoginIpRange[] loginIpRanges = new com.sforce.soap.tooling.metadata.ProfileLoginIpRange[0];

    public com.sforce.soap.tooling.metadata.ProfileLoginIpRange[] getLoginIpRanges() {
      return loginIpRanges;
    }

    public void setLoginIpRanges(com.sforce.soap.tooling.metadata.ProfileLoginIpRange[] loginIpRanges) {
      this.loginIpRanges = loginIpRanges;
      loginIpRanges__is_set = true;
    }

    protected void setLoginIpRanges(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("loginIpRanges", "urn:metadata.tooling.soap.sforce.com","loginIpRanges","urn:metadata.tooling.soap.sforce.com","ProfileLoginIpRange",0,-1,true))) {
        setLoginIpRanges((com.sforce.soap.tooling.metadata.ProfileLoginIpRange[])__typeMapper.readObject(__in, _lookupTypeInfo("loginIpRanges", "urn:metadata.tooling.soap.sforce.com","loginIpRanges","urn:metadata.tooling.soap.sforce.com","ProfileLoginIpRange",0,-1,true), com.sforce.soap.tooling.metadata.ProfileLoginIpRange[].class));
      }
    }

    private void writeFieldLoginIpRanges(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("loginIpRanges", "urn:metadata.tooling.soap.sforce.com","loginIpRanges","urn:metadata.tooling.soap.sforce.com","ProfileLoginIpRange",0,-1,true), loginIpRanges, loginIpRanges__is_set);
    }

    /**
     * element : objectPermissions of type {urn:metadata.tooling.soap.sforce.com}ProfileObjectPermissions
     * java type: com.sforce.soap.tooling.metadata.ProfileObjectPermissions[]
     */
    private boolean objectPermissions__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileObjectPermissions[] objectPermissions = new com.sforce.soap.tooling.metadata.ProfileObjectPermissions[0];

    public com.sforce.soap.tooling.metadata.ProfileObjectPermissions[] getObjectPermissions() {
      return objectPermissions;
    }

    public void setObjectPermissions(com.sforce.soap.tooling.metadata.ProfileObjectPermissions[] objectPermissions) {
      this.objectPermissions = objectPermissions;
      objectPermissions__is_set = true;
    }

    protected void setObjectPermissions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("objectPermissions", "urn:metadata.tooling.soap.sforce.com","objectPermissions","urn:metadata.tooling.soap.sforce.com","ProfileObjectPermissions",0,-1,true))) {
        setObjectPermissions((com.sforce.soap.tooling.metadata.ProfileObjectPermissions[])__typeMapper.readObject(__in, _lookupTypeInfo("objectPermissions", "urn:metadata.tooling.soap.sforce.com","objectPermissions","urn:metadata.tooling.soap.sforce.com","ProfileObjectPermissions",0,-1,true), com.sforce.soap.tooling.metadata.ProfileObjectPermissions[].class));
      }
    }

    private void writeFieldObjectPermissions(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("objectPermissions", "urn:metadata.tooling.soap.sforce.com","objectPermissions","urn:metadata.tooling.soap.sforce.com","ProfileObjectPermissions",0,-1,true), objectPermissions, objectPermissions__is_set);
    }

    /**
     * element : pageAccesses of type {urn:metadata.tooling.soap.sforce.com}ProfileApexPageAccess
     * java type: com.sforce.soap.tooling.metadata.ProfileApexPageAccess[]
     */
    private boolean pageAccesses__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileApexPageAccess[] pageAccesses = new com.sforce.soap.tooling.metadata.ProfileApexPageAccess[0];

    public com.sforce.soap.tooling.metadata.ProfileApexPageAccess[] getPageAccesses() {
      return pageAccesses;
    }

    public void setPageAccesses(com.sforce.soap.tooling.metadata.ProfileApexPageAccess[] pageAccesses) {
      this.pageAccesses = pageAccesses;
      pageAccesses__is_set = true;
    }

    protected void setPageAccesses(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("pageAccesses", "urn:metadata.tooling.soap.sforce.com","pageAccesses","urn:metadata.tooling.soap.sforce.com","ProfileApexPageAccess",0,-1,true))) {
        setPageAccesses((com.sforce.soap.tooling.metadata.ProfileApexPageAccess[])__typeMapper.readObject(__in, _lookupTypeInfo("pageAccesses", "urn:metadata.tooling.soap.sforce.com","pageAccesses","urn:metadata.tooling.soap.sforce.com","ProfileApexPageAccess",0,-1,true), com.sforce.soap.tooling.metadata.ProfileApexPageAccess[].class));
      }
    }

    private void writeFieldPageAccesses(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("pageAccesses", "urn:metadata.tooling.soap.sforce.com","pageAccesses","urn:metadata.tooling.soap.sforce.com","ProfileApexPageAccess",0,-1,true), pageAccesses, pageAccesses__is_set);
    }

    /**
     * element : profileActionOverrides of type {urn:metadata.tooling.soap.sforce.com}ProfileActionOverride
     * java type: com.sforce.soap.tooling.metadata.ProfileActionOverride[]
     */
    private boolean profileActionOverrides__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileActionOverride[] profileActionOverrides = new com.sforce.soap.tooling.metadata.ProfileActionOverride[0];

    public com.sforce.soap.tooling.metadata.ProfileActionOverride[] getProfileActionOverrides() {
      return profileActionOverrides;
    }

    public void setProfileActionOverrides(com.sforce.soap.tooling.metadata.ProfileActionOverride[] profileActionOverrides) {
      this.profileActionOverrides = profileActionOverrides;
      profileActionOverrides__is_set = true;
    }

    protected void setProfileActionOverrides(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("profileActionOverrides", "urn:metadata.tooling.soap.sforce.com","profileActionOverrides","urn:metadata.tooling.soap.sforce.com","ProfileActionOverride",0,-1,true))) {
        setProfileActionOverrides((com.sforce.soap.tooling.metadata.ProfileActionOverride[])__typeMapper.readObject(__in, _lookupTypeInfo("profileActionOverrides", "urn:metadata.tooling.soap.sforce.com","profileActionOverrides","urn:metadata.tooling.soap.sforce.com","ProfileActionOverride",0,-1,true), com.sforce.soap.tooling.metadata.ProfileActionOverride[].class));
      }
    }

    private void writeFieldProfileActionOverrides(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("profileActionOverrides", "urn:metadata.tooling.soap.sforce.com","profileActionOverrides","urn:metadata.tooling.soap.sforce.com","ProfileActionOverride",0,-1,true), profileActionOverrides, profileActionOverrides__is_set);
    }

    /**
     * element : recordTypeVisibilities of type {urn:metadata.tooling.soap.sforce.com}ProfileRecordTypeVisibility
     * java type: com.sforce.soap.tooling.metadata.ProfileRecordTypeVisibility[]
     */
    private boolean recordTypeVisibilities__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileRecordTypeVisibility[] recordTypeVisibilities = new com.sforce.soap.tooling.metadata.ProfileRecordTypeVisibility[0];

    public com.sforce.soap.tooling.metadata.ProfileRecordTypeVisibility[] getRecordTypeVisibilities() {
      return recordTypeVisibilities;
    }

    public void setRecordTypeVisibilities(com.sforce.soap.tooling.metadata.ProfileRecordTypeVisibility[] recordTypeVisibilities) {
      this.recordTypeVisibilities = recordTypeVisibilities;
      recordTypeVisibilities__is_set = true;
    }

    protected void setRecordTypeVisibilities(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("recordTypeVisibilities", "urn:metadata.tooling.soap.sforce.com","recordTypeVisibilities","urn:metadata.tooling.soap.sforce.com","ProfileRecordTypeVisibility",0,-1,true))) {
        setRecordTypeVisibilities((com.sforce.soap.tooling.metadata.ProfileRecordTypeVisibility[])__typeMapper.readObject(__in, _lookupTypeInfo("recordTypeVisibilities", "urn:metadata.tooling.soap.sforce.com","recordTypeVisibilities","urn:metadata.tooling.soap.sforce.com","ProfileRecordTypeVisibility",0,-1,true), com.sforce.soap.tooling.metadata.ProfileRecordTypeVisibility[].class));
      }
    }

    private void writeFieldRecordTypeVisibilities(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("recordTypeVisibilities", "urn:metadata.tooling.soap.sforce.com","recordTypeVisibilities","urn:metadata.tooling.soap.sforce.com","ProfileRecordTypeVisibility",0,-1,true), recordTypeVisibilities, recordTypeVisibilities__is_set);
    }

    /**
     * element : tabVisibilities of type {urn:metadata.tooling.soap.sforce.com}ProfileTabVisibility
     * java type: com.sforce.soap.tooling.metadata.ProfileTabVisibility[]
     */
    private boolean tabVisibilities__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileTabVisibility[] tabVisibilities = new com.sforce.soap.tooling.metadata.ProfileTabVisibility[0];

    public com.sforce.soap.tooling.metadata.ProfileTabVisibility[] getTabVisibilities() {
      return tabVisibilities;
    }

    public void setTabVisibilities(com.sforce.soap.tooling.metadata.ProfileTabVisibility[] tabVisibilities) {
      this.tabVisibilities = tabVisibilities;
      tabVisibilities__is_set = true;
    }

    protected void setTabVisibilities(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("tabVisibilities", "urn:metadata.tooling.soap.sforce.com","tabVisibilities","urn:metadata.tooling.soap.sforce.com","ProfileTabVisibility",0,-1,true))) {
        setTabVisibilities((com.sforce.soap.tooling.metadata.ProfileTabVisibility[])__typeMapper.readObject(__in, _lookupTypeInfo("tabVisibilities", "urn:metadata.tooling.soap.sforce.com","tabVisibilities","urn:metadata.tooling.soap.sforce.com","ProfileTabVisibility",0,-1,true), com.sforce.soap.tooling.metadata.ProfileTabVisibility[].class));
      }
    }

    private void writeFieldTabVisibilities(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("tabVisibilities", "urn:metadata.tooling.soap.sforce.com","tabVisibilities","urn:metadata.tooling.soap.sforce.com","ProfileTabVisibility",0,-1,true), tabVisibilities, tabVisibilities__is_set);
    }

    /**
     * element : userLicense of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean userLicense__is_set = false;

    private java.lang.String userLicense;

    public java.lang.String getUserLicense() {
      return userLicense;
    }

    public void setUserLicense(java.lang.String userLicense) {
      this.userLicense = userLicense;
      userLicense__is_set = true;
    }

    protected void setUserLicense(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("userLicense", "urn:metadata.tooling.soap.sforce.com","userLicense","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setUserLicense(__typeMapper.readString(__in, _lookupTypeInfo("userLicense", "urn:metadata.tooling.soap.sforce.com","userLicense","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldUserLicense(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("userLicense", "urn:metadata.tooling.soap.sforce.com","userLicense","http://www.w3.org/2001/XMLSchema","string",0,1,true), userLicense, userLicense__is_set);
    }

    /**
     * element : userPermissions of type {urn:metadata.tooling.soap.sforce.com}ProfileUserPermission
     * java type: com.sforce.soap.tooling.metadata.ProfileUserPermission[]
     */
    private boolean userPermissions__is_set = false;

    private com.sforce.soap.tooling.metadata.ProfileUserPermission[] userPermissions = new com.sforce.soap.tooling.metadata.ProfileUserPermission[0];

    public com.sforce.soap.tooling.metadata.ProfileUserPermission[] getUserPermissions() {
      return userPermissions;
    }

    public void setUserPermissions(com.sforce.soap.tooling.metadata.ProfileUserPermission[] userPermissions) {
      this.userPermissions = userPermissions;
      userPermissions__is_set = true;
    }

    protected void setUserPermissions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("userPermissions", "urn:metadata.tooling.soap.sforce.com","userPermissions","urn:metadata.tooling.soap.sforce.com","ProfileUserPermission",0,-1,true))) {
        setUserPermissions((com.sforce.soap.tooling.metadata.ProfileUserPermission[])__typeMapper.readObject(__in, _lookupTypeInfo("userPermissions", "urn:metadata.tooling.soap.sforce.com","userPermissions","urn:metadata.tooling.soap.sforce.com","ProfileUserPermission",0,-1,true), com.sforce.soap.tooling.metadata.ProfileUserPermission[].class));
      }
    }

    private void writeFieldUserPermissions(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("userPermissions", "urn:metadata.tooling.soap.sforce.com","userPermissions","urn:metadata.tooling.soap.sforce.com","ProfileUserPermission",0,-1,true), userPermissions, userPermissions__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:metadata.tooling.soap.sforce.com", "Profile");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[Profile ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldApplicationVisibilities(__out, __typeMapper);
      writeFieldClassAccesses(__out, __typeMapper);
      writeFieldCustom(__out, __typeMapper);
      writeFieldCustomPermissions(__out, __typeMapper);
      writeFieldDescription(__out, __typeMapper);
      writeFieldExternalDataSourceAccesses(__out, __typeMapper);
      writeFieldFieldPermissions(__out, __typeMapper);
      writeFieldLoginHours(__out, __typeMapper);
      writeFieldLoginIpRanges(__out, __typeMapper);
      writeFieldObjectPermissions(__out, __typeMapper);
      writeFieldPageAccesses(__out, __typeMapper);
      writeFieldProfileActionOverrides(__out, __typeMapper);
      writeFieldRecordTypeVisibilities(__out, __typeMapper);
      writeFieldTabVisibilities(__out, __typeMapper);
      writeFieldUserLicense(__out, __typeMapper);
      writeFieldUserPermissions(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setApplicationVisibilities(__in, __typeMapper);
      setClassAccesses(__in, __typeMapper);
      setCustom(__in, __typeMapper);
      setCustomPermissions(__in, __typeMapper);
      setDescription(__in, __typeMapper);
      setExternalDataSourceAccesses(__in, __typeMapper);
      setFieldPermissions(__in, __typeMapper);
      setLoginHours(__in, __typeMapper);
      setLoginIpRanges(__in, __typeMapper);
      setObjectPermissions(__in, __typeMapper);
      setPageAccesses(__in, __typeMapper);
      setProfileActionOverrides(__in, __typeMapper);
      setRecordTypeVisibilities(__in, __typeMapper);
      setTabVisibilities(__in, __typeMapper);
      setUserLicense(__in, __typeMapper);
      setUserPermissions(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "applicationVisibilities", applicationVisibilities);
      toStringHelper(sb, "classAccesses", classAccesses);
      toStringHelper(sb, "custom", custom);
      toStringHelper(sb, "customPermissions", customPermissions);
      toStringHelper(sb, "description", description);
      toStringHelper(sb, "externalDataSourceAccesses", externalDataSourceAccesses);
      toStringHelper(sb, "fieldPermissions", fieldPermissions);
      toStringHelper(sb, "loginHours", loginHours);
      toStringHelper(sb, "loginIpRanges", loginIpRanges);
      toStringHelper(sb, "objectPermissions", objectPermissions);
      toStringHelper(sb, "pageAccesses", pageAccesses);
      toStringHelper(sb, "profileActionOverrides", profileActionOverrides);
      toStringHelper(sb, "recordTypeVisibilities", recordTypeVisibilities);
      toStringHelper(sb, "tabVisibilities", tabVisibilities);
      toStringHelper(sb, "userLicense", userLicense);
      toStringHelper(sb, "userPermissions", userPermissions);
    }


}
