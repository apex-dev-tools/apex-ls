package com.sforce.soap.tooling.sobject;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class MenuItem extends com.sforce.soap.tooling.sobject.SObject {

    /**
     * Constructor
     */
    public MenuItem() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : Active of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private boolean Active__is_set = false;

    private java.lang.Boolean Active;

    public java.lang.Boolean getActive() {
      return Active;
    }

    public void setActive(java.lang.Boolean Active) {
      this.Active = Active;
      Active__is_set = true;
    }

    protected void setActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Active", "urn:sobject.tooling.soap.sforce.com","Active","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setActive((java.lang.Boolean)__typeMapper.readObject(__in, _lookupTypeInfo("Active", "urn:sobject.tooling.soap.sforce.com","Active","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), java.lang.Boolean.class));
      }
    }

    private void writeFieldActive(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Active", "urn:sobject.tooling.soap.sforce.com","Active","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), Active, Active__is_set);
    }

    /**
     * element : AppId of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean AppId__is_set = false;

    private java.lang.String AppId;

    public java.lang.String getAppId() {
      return AppId;
    }

    public void setAppId(java.lang.String AppId) {
      this.AppId = AppId;
      AppId__is_set = true;
    }

    protected void setAppId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("AppId", "urn:sobject.tooling.soap.sforce.com","AppId","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setAppId(__typeMapper.readString(__in, _lookupTypeInfo("AppId", "urn:sobject.tooling.soap.sforce.com","AppId","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldAppId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("AppId", "urn:sobject.tooling.soap.sforce.com","AppId","http://www.w3.org/2001/XMLSchema","string",0,1,true), AppId, AppId__is_set);
    }

    /**
     * element : Color of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean Color__is_set = false;

    private java.lang.String Color;

    public java.lang.String getColor() {
      return Color;
    }

    public void setColor(java.lang.String Color) {
      this.Color = Color;
      Color__is_set = true;
    }

    protected void setColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Color", "urn:sobject.tooling.soap.sforce.com","Color","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setColor(__typeMapper.readString(__in, _lookupTypeInfo("Color", "urn:sobject.tooling.soap.sforce.com","Color","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldColor(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Color", "urn:sobject.tooling.soap.sforce.com","Color","http://www.w3.org/2001/XMLSchema","string",0,1,true), Color, Color__is_set);
    }

    /**
     * element : IconUrl of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean IconUrl__is_set = false;

    private java.lang.String IconUrl;

    public java.lang.String getIconUrl() {
      return IconUrl;
    }

    public void setIconUrl(java.lang.String IconUrl) {
      this.IconUrl = IconUrl;
      IconUrl__is_set = true;
    }

    protected void setIconUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("IconUrl", "urn:sobject.tooling.soap.sforce.com","IconUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setIconUrl(__typeMapper.readString(__in, _lookupTypeInfo("IconUrl", "urn:sobject.tooling.soap.sforce.com","IconUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldIconUrl(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("IconUrl", "urn:sobject.tooling.soap.sforce.com","IconUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true), IconUrl, IconUrl__is_set);
    }

    /**
     * element : Label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean Label__is_set = false;

    private java.lang.String Label;

    public java.lang.String getLabel() {
      return Label;
    }

    public void setLabel(java.lang.String Label) {
      this.Label = Label;
      Label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Label", "urn:sobject.tooling.soap.sforce.com","Label","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setLabel(__typeMapper.readString(__in, _lookupTypeInfo("Label", "urn:sobject.tooling.soap.sforce.com","Label","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Label", "urn:sobject.tooling.soap.sforce.com","Label","http://www.w3.org/2001/XMLSchema","string",0,1,true), Label, Label__is_set);
    }

    /**
     * element : MenuType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean MenuType__is_set = false;

    private java.lang.String MenuType;

    public java.lang.String getMenuType() {
      return MenuType;
    }

    public void setMenuType(java.lang.String MenuType) {
      this.MenuType = MenuType;
      MenuType__is_set = true;
    }

    protected void setMenuType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("MenuType", "urn:sobject.tooling.soap.sforce.com","MenuType","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setMenuType(__typeMapper.readString(__in, _lookupTypeInfo("MenuType", "urn:sobject.tooling.soap.sforce.com","MenuType","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMenuType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("MenuType", "urn:sobject.tooling.soap.sforce.com","MenuType","http://www.w3.org/2001/XMLSchema","string",0,1,true), MenuType, MenuType__is_set);
    }

    /**
     * element : SortOrder of type {http://www.w3.org/2001/XMLSchema}int
     * java type: java.lang.Integer
     */
    private boolean SortOrder__is_set = false;

    private java.lang.Integer SortOrder;

    public java.lang.Integer getSortOrder() {
      return SortOrder;
    }

    public void setSortOrder(java.lang.Integer SortOrder) {
      this.SortOrder = SortOrder;
      SortOrder__is_set = true;
    }

    protected void setSortOrder(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("SortOrder", "urn:sobject.tooling.soap.sforce.com","SortOrder","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setSortOrder((java.lang.Integer)__typeMapper.readObject(__in, _lookupTypeInfo("SortOrder", "urn:sobject.tooling.soap.sforce.com","SortOrder","http://www.w3.org/2001/XMLSchema","int",0,1,true), java.lang.Integer.class));
      }
    }

    private void writeFieldSortOrder(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("SortOrder", "urn:sobject.tooling.soap.sforce.com","SortOrder","http://www.w3.org/2001/XMLSchema","int",0,1,true), SortOrder, SortOrder__is_set);
    }

    /**
     * element : Theme of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean Theme__is_set = false;

    private java.lang.String Theme;

    public java.lang.String getTheme() {
      return Theme;
    }

    public void setTheme(java.lang.String Theme) {
      this.Theme = Theme;
      Theme__is_set = true;
    }

    protected void setTheme(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Theme", "urn:sobject.tooling.soap.sforce.com","Theme","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setTheme(__typeMapper.readString(__in, _lookupTypeInfo("Theme", "urn:sobject.tooling.soap.sforce.com","Theme","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldTheme(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Theme", "urn:sobject.tooling.soap.sforce.com","Theme","http://www.w3.org/2001/XMLSchema","string",0,1,true), Theme, Theme__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:sobject.tooling.soap.sforce.com", "MenuItem");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[MenuItem ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldActive(__out, __typeMapper);
      writeFieldAppId(__out, __typeMapper);
      writeFieldColor(__out, __typeMapper);
      writeFieldIconUrl(__out, __typeMapper);
      writeFieldLabel(__out, __typeMapper);
      writeFieldMenuType(__out, __typeMapper);
      writeFieldSortOrder(__out, __typeMapper);
      writeFieldTheme(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setActive(__in, __typeMapper);
      setAppId(__in, __typeMapper);
      setColor(__in, __typeMapper);
      setIconUrl(__in, __typeMapper);
      setLabel(__in, __typeMapper);
      setMenuType(__in, __typeMapper);
      setSortOrder(__in, __typeMapper);
      setTheme(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "Active", Active);
      toStringHelper(sb, "AppId", AppId);
      toStringHelper(sb, "Color", Color);
      toStringHelper(sb, "IconUrl", IconUrl);
      toStringHelper(sb, "Label", Label);
      toStringHelper(sb, "MenuType", MenuType);
      toStringHelper(sb, "SortOrder", SortOrder);
      toStringHelper(sb, "Theme", Theme);
    }


}
