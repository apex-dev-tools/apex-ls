package com.sforce.soap.tooling.sobject;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class InstalledSubscriberPackage extends com.sforce.soap.tooling.sobject.SObject {

    /**
     * Constructor
     */
    public InstalledSubscriberPackage() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : MinPackageVersionId of type {urn:tooling.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean MinPackageVersionId__is_set = false;

    private java.lang.String MinPackageVersionId;

    public java.lang.String getMinPackageVersionId() {
      return MinPackageVersionId;
    }

    public void setMinPackageVersionId(java.lang.String MinPackageVersionId) {
      this.MinPackageVersionId = MinPackageVersionId;
      MinPackageVersionId__is_set = true;
    }

    protected void setMinPackageVersionId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("MinPackageVersionId", "urn:sobject.tooling.soap.sforce.com","MinPackageVersionId","urn:tooling.soap.sforce.com","ID",0,1,true))) {
        setMinPackageVersionId(__typeMapper.readString(__in, _lookupTypeInfo("MinPackageVersionId", "urn:sobject.tooling.soap.sforce.com","MinPackageVersionId","urn:tooling.soap.sforce.com","ID",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMinPackageVersionId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("MinPackageVersionId", "urn:sobject.tooling.soap.sforce.com","MinPackageVersionId","urn:tooling.soap.sforce.com","ID",0,1,true), MinPackageVersionId, MinPackageVersionId__is_set);
    }

    /**
     * element : SubscriberPackage of type {urn:sobject.tooling.soap.sforce.com}SubscriberPackage
     * java type: com.sforce.soap.tooling.sobject.SubscriberPackage
     */
    private boolean SubscriberPackage__is_set = false;

    private com.sforce.soap.tooling.sobject.SubscriberPackage SubscriberPackage;

    public com.sforce.soap.tooling.sobject.SubscriberPackage getSubscriberPackage() {
      return SubscriberPackage;
    }

    public void setSubscriberPackage(com.sforce.soap.tooling.sobject.SubscriberPackage SubscriberPackage) {
      this.SubscriberPackage = SubscriberPackage;
      SubscriberPackage__is_set = true;
    }

    protected void setSubscriberPackage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("SubscriberPackage", "urn:sobject.tooling.soap.sforce.com","SubscriberPackage","urn:sobject.tooling.soap.sforce.com","SubscriberPackage",0,1,true))) {
        setSubscriberPackage((com.sforce.soap.tooling.sobject.SubscriberPackage)__typeMapper.readObject(__in, _lookupTypeInfo("SubscriberPackage", "urn:sobject.tooling.soap.sforce.com","SubscriberPackage","urn:sobject.tooling.soap.sforce.com","SubscriberPackage",0,1,true), com.sforce.soap.tooling.sobject.SubscriberPackage.class));
      }
    }

    private void writeFieldSubscriberPackage(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("SubscriberPackage", "urn:sobject.tooling.soap.sforce.com","SubscriberPackage","urn:sobject.tooling.soap.sforce.com","SubscriberPackage",0,1,true), SubscriberPackage, SubscriberPackage__is_set);
    }

    /**
     * element : SubscriberPackageId of type {urn:tooling.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean SubscriberPackageId__is_set = false;

    private java.lang.String SubscriberPackageId;

    public java.lang.String getSubscriberPackageId() {
      return SubscriberPackageId;
    }

    public void setSubscriberPackageId(java.lang.String SubscriberPackageId) {
      this.SubscriberPackageId = SubscriberPackageId;
      SubscriberPackageId__is_set = true;
    }

    protected void setSubscriberPackageId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("SubscriberPackageId", "urn:sobject.tooling.soap.sforce.com","SubscriberPackageId","urn:tooling.soap.sforce.com","ID",0,1,true))) {
        setSubscriberPackageId(__typeMapper.readString(__in, _lookupTypeInfo("SubscriberPackageId", "urn:sobject.tooling.soap.sforce.com","SubscriberPackageId","urn:tooling.soap.sforce.com","ID",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSubscriberPackageId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("SubscriberPackageId", "urn:sobject.tooling.soap.sforce.com","SubscriberPackageId","urn:tooling.soap.sforce.com","ID",0,1,true), SubscriberPackageId, SubscriberPackageId__is_set);
    }

    /**
     * element : SubscriberPackageVersion of type {urn:sobject.tooling.soap.sforce.com}SubscriberPackageVersion
     * java type: com.sforce.soap.tooling.sobject.SubscriberPackageVersion
     */
    private boolean SubscriberPackageVersion__is_set = false;

    private com.sforce.soap.tooling.sobject.SubscriberPackageVersion SubscriberPackageVersion;

    public com.sforce.soap.tooling.sobject.SubscriberPackageVersion getSubscriberPackageVersion() {
      return SubscriberPackageVersion;
    }

    public void setSubscriberPackageVersion(com.sforce.soap.tooling.sobject.SubscriberPackageVersion SubscriberPackageVersion) {
      this.SubscriberPackageVersion = SubscriberPackageVersion;
      SubscriberPackageVersion__is_set = true;
    }

    protected void setSubscriberPackageVersion(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("SubscriberPackageVersion", "urn:sobject.tooling.soap.sforce.com","SubscriberPackageVersion","urn:sobject.tooling.soap.sforce.com","SubscriberPackageVersion",0,1,true))) {
        setSubscriberPackageVersion((com.sforce.soap.tooling.sobject.SubscriberPackageVersion)__typeMapper.readObject(__in, _lookupTypeInfo("SubscriberPackageVersion", "urn:sobject.tooling.soap.sforce.com","SubscriberPackageVersion","urn:sobject.tooling.soap.sforce.com","SubscriberPackageVersion",0,1,true), com.sforce.soap.tooling.sobject.SubscriberPackageVersion.class));
      }
    }

    private void writeFieldSubscriberPackageVersion(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("SubscriberPackageVersion", "urn:sobject.tooling.soap.sforce.com","SubscriberPackageVersion","urn:sobject.tooling.soap.sforce.com","SubscriberPackageVersion",0,1,true), SubscriberPackageVersion, SubscriberPackageVersion__is_set);
    }

    /**
     * element : SubscriberPackageVersionId of type {urn:tooling.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean SubscriberPackageVersionId__is_set = false;

    private java.lang.String SubscriberPackageVersionId;

    public java.lang.String getSubscriberPackageVersionId() {
      return SubscriberPackageVersionId;
    }

    public void setSubscriberPackageVersionId(java.lang.String SubscriberPackageVersionId) {
      this.SubscriberPackageVersionId = SubscriberPackageVersionId;
      SubscriberPackageVersionId__is_set = true;
    }

    protected void setSubscriberPackageVersionId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("SubscriberPackageVersionId", "urn:sobject.tooling.soap.sforce.com","SubscriberPackageVersionId","urn:tooling.soap.sforce.com","ID",0,1,true))) {
        setSubscriberPackageVersionId(__typeMapper.readString(__in, _lookupTypeInfo("SubscriberPackageVersionId", "urn:sobject.tooling.soap.sforce.com","SubscriberPackageVersionId","urn:tooling.soap.sforce.com","ID",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSubscriberPackageVersionId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("SubscriberPackageVersionId", "urn:sobject.tooling.soap.sforce.com","SubscriberPackageVersionId","urn:tooling.soap.sforce.com","ID",0,1,true), SubscriberPackageVersionId, SubscriberPackageVersionId__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:sobject.tooling.soap.sforce.com", "InstalledSubscriberPackage");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[InstalledSubscriberPackage ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldMinPackageVersionId(__out, __typeMapper);
      writeFieldSubscriberPackage(__out, __typeMapper);
      writeFieldSubscriberPackageId(__out, __typeMapper);
      writeFieldSubscriberPackageVersion(__out, __typeMapper);
      writeFieldSubscriberPackageVersionId(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setMinPackageVersionId(__in, __typeMapper);
      setSubscriberPackage(__in, __typeMapper);
      setSubscriberPackageId(__in, __typeMapper);
      setSubscriberPackageVersion(__in, __typeMapper);
      setSubscriberPackageVersionId(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "MinPackageVersionId", MinPackageVersionId);
      toStringHelper(sb, "SubscriberPackage", SubscriberPackage);
      toStringHelper(sb, "SubscriberPackageId", SubscriberPackageId);
      toStringHelper(sb, "SubscriberPackageVersion", SubscriberPackageVersion);
      toStringHelper(sb, "SubscriberPackageVersionId", SubscriberPackageVersionId);
    }


}
