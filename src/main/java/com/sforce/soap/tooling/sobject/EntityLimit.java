package com.sforce.soap.tooling.sobject;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class EntityLimit extends com.sforce.soap.tooling.sobject.SObject {

    /**
     * Constructor
     */
    public EntityLimit() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : DurableId of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean DurableId__is_set = false;

    private java.lang.String DurableId;

    public java.lang.String getDurableId() {
      return DurableId;
    }

    public void setDurableId(java.lang.String DurableId) {
      this.DurableId = DurableId;
      DurableId__is_set = true;
    }

    protected void setDurableId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("DurableId", "urn:sobject.tooling.soap.sforce.com","DurableId","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDurableId(__typeMapper.readString(__in, _lookupTypeInfo("DurableId", "urn:sobject.tooling.soap.sforce.com","DurableId","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDurableId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("DurableId", "urn:sobject.tooling.soap.sforce.com","DurableId","http://www.w3.org/2001/XMLSchema","string",0,1,true), DurableId, DurableId__is_set);
    }

    /**
     * element : EntityDefinition of type {urn:sobject.tooling.soap.sforce.com}EntityDefinition
     * java type: com.sforce.soap.tooling.sobject.EntityDefinition
     */
    private boolean EntityDefinition__is_set = false;

    private com.sforce.soap.tooling.sobject.EntityDefinition EntityDefinition;

    public com.sforce.soap.tooling.sobject.EntityDefinition getEntityDefinition() {
      return EntityDefinition;
    }

    public void setEntityDefinition(com.sforce.soap.tooling.sobject.EntityDefinition EntityDefinition) {
      this.EntityDefinition = EntityDefinition;
      EntityDefinition__is_set = true;
    }

    protected void setEntityDefinition(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("EntityDefinition", "urn:sobject.tooling.soap.sforce.com","EntityDefinition","urn:sobject.tooling.soap.sforce.com","EntityDefinition",0,1,true))) {
        setEntityDefinition((com.sforce.soap.tooling.sobject.EntityDefinition)__typeMapper.readObject(__in, _lookupTypeInfo("EntityDefinition", "urn:sobject.tooling.soap.sforce.com","EntityDefinition","urn:sobject.tooling.soap.sforce.com","EntityDefinition",0,1,true), com.sforce.soap.tooling.sobject.EntityDefinition.class));
      }
    }

    private void writeFieldEntityDefinition(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("EntityDefinition", "urn:sobject.tooling.soap.sforce.com","EntityDefinition","urn:sobject.tooling.soap.sforce.com","EntityDefinition",0,1,true), EntityDefinition, EntityDefinition__is_set);
    }

    /**
     * element : EntityDefinitionId of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean EntityDefinitionId__is_set = false;

    private java.lang.String EntityDefinitionId;

    public java.lang.String getEntityDefinitionId() {
      return EntityDefinitionId;
    }

    public void setEntityDefinitionId(java.lang.String EntityDefinitionId) {
      this.EntityDefinitionId = EntityDefinitionId;
      EntityDefinitionId__is_set = true;
    }

    protected void setEntityDefinitionId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("EntityDefinitionId", "urn:sobject.tooling.soap.sforce.com","EntityDefinitionId","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setEntityDefinitionId(__typeMapper.readString(__in, _lookupTypeInfo("EntityDefinitionId", "urn:sobject.tooling.soap.sforce.com","EntityDefinitionId","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldEntityDefinitionId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("EntityDefinitionId", "urn:sobject.tooling.soap.sforce.com","EntityDefinitionId","http://www.w3.org/2001/XMLSchema","string",0,1,true), EntityDefinitionId, EntityDefinitionId__is_set);
    }

    /**
     * element : Label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean Label__is_set = false;

    private java.lang.String Label;

    public java.lang.String getLabel() {
      return Label;
    }

    public void setLabel(java.lang.String Label) {
      this.Label = Label;
      Label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Label", "urn:sobject.tooling.soap.sforce.com","Label","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setLabel(__typeMapper.readString(__in, _lookupTypeInfo("Label", "urn:sobject.tooling.soap.sforce.com","Label","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Label", "urn:sobject.tooling.soap.sforce.com","Label","http://www.w3.org/2001/XMLSchema","string",0,1,true), Label, Label__is_set);
    }

    /**
     * element : Max of type {http://www.w3.org/2001/XMLSchema}int
     * java type: java.lang.Integer
     */
    private boolean Max__is_set = false;

    private java.lang.Integer Max;

    public java.lang.Integer getMax() {
      return Max;
    }

    public void setMax(java.lang.Integer Max) {
      this.Max = Max;
      Max__is_set = true;
    }

    protected void setMax(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Max", "urn:sobject.tooling.soap.sforce.com","Max","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setMax((java.lang.Integer)__typeMapper.readObject(__in, _lookupTypeInfo("Max", "urn:sobject.tooling.soap.sforce.com","Max","http://www.w3.org/2001/XMLSchema","int",0,1,true), java.lang.Integer.class));
      }
    }

    private void writeFieldMax(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Max", "urn:sobject.tooling.soap.sforce.com","Max","http://www.w3.org/2001/XMLSchema","int",0,1,true), Max, Max__is_set);
    }

    /**
     * element : Remaining of type {http://www.w3.org/2001/XMLSchema}int
     * java type: java.lang.Integer
     */
    private boolean Remaining__is_set = false;

    private java.lang.Integer Remaining;

    public java.lang.Integer getRemaining() {
      return Remaining;
    }

    public void setRemaining(java.lang.Integer Remaining) {
      this.Remaining = Remaining;
      Remaining__is_set = true;
    }

    protected void setRemaining(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Remaining", "urn:sobject.tooling.soap.sforce.com","Remaining","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setRemaining((java.lang.Integer)__typeMapper.readObject(__in, _lookupTypeInfo("Remaining", "urn:sobject.tooling.soap.sforce.com","Remaining","http://www.w3.org/2001/XMLSchema","int",0,1,true), java.lang.Integer.class));
      }
    }

    private void writeFieldRemaining(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Remaining", "urn:sobject.tooling.soap.sforce.com","Remaining","http://www.w3.org/2001/XMLSchema","int",0,1,true), Remaining, Remaining__is_set);
    }

    /**
     * element : Type of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean Type__is_set = false;

    private java.lang.String Type;

    public java.lang.String getType() {
      return Type;
    }

    public void setType(java.lang.String Type) {
      this.Type = Type;
      Type__is_set = true;
    }

    protected void setType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Type", "urn:sobject.tooling.soap.sforce.com","Type","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setType(__typeMapper.readString(__in, _lookupTypeInfo("Type", "urn:sobject.tooling.soap.sforce.com","Type","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Type", "urn:sobject.tooling.soap.sforce.com","Type","http://www.w3.org/2001/XMLSchema","string",0,1,true), Type, Type__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:sobject.tooling.soap.sforce.com", "EntityLimit");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EntityLimit ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldDurableId(__out, __typeMapper);
      writeFieldEntityDefinition(__out, __typeMapper);
      writeFieldEntityDefinitionId(__out, __typeMapper);
      writeFieldLabel(__out, __typeMapper);
      writeFieldMax(__out, __typeMapper);
      writeFieldRemaining(__out, __typeMapper);
      writeFieldType(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setDurableId(__in, __typeMapper);
      setEntityDefinition(__in, __typeMapper);
      setEntityDefinitionId(__in, __typeMapper);
      setLabel(__in, __typeMapper);
      setMax(__in, __typeMapper);
      setRemaining(__in, __typeMapper);
      setType(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "DurableId", DurableId);
      toStringHelper(sb, "EntityDefinition", EntityDefinition);
      toStringHelper(sb, "EntityDefinitionId", EntityDefinitionId);
      toStringHelper(sb, "Label", Label);
      toStringHelper(sb, "Max", Max);
      toStringHelper(sb, "Remaining", Remaining);
      toStringHelper(sb, "Type", Type);
    }


}
