package com.sforce.soap.tooling.sobject;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class MetadataPackageVersion extends com.sforce.soap.tooling.sobject.SObject {

    /**
     * Constructor
     */
    public MetadataPackageVersion() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : BuildNumber of type {http://www.w3.org/2001/XMLSchema}int
     * java type: java.lang.Integer
     */
    private boolean BuildNumber__is_set = false;

    private java.lang.Integer BuildNumber;

    public java.lang.Integer getBuildNumber() {
      return BuildNumber;
    }

    public void setBuildNumber(java.lang.Integer BuildNumber) {
      this.BuildNumber = BuildNumber;
      BuildNumber__is_set = true;
    }

    protected void setBuildNumber(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("BuildNumber", "urn:sobject.tooling.soap.sforce.com","BuildNumber","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setBuildNumber((java.lang.Integer)__typeMapper.readObject(__in, _lookupTypeInfo("BuildNumber", "urn:sobject.tooling.soap.sforce.com","BuildNumber","http://www.w3.org/2001/XMLSchema","int",0,1,true), java.lang.Integer.class));
      }
    }

    private void writeFieldBuildNumber(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("BuildNumber", "urn:sobject.tooling.soap.sforce.com","BuildNumber","http://www.w3.org/2001/XMLSchema","int",0,1,true), BuildNumber, BuildNumber__is_set);
    }

    /**
     * element : MajorVersion of type {http://www.w3.org/2001/XMLSchema}int
     * java type: java.lang.Integer
     */
    private boolean MajorVersion__is_set = false;

    private java.lang.Integer MajorVersion;

    public java.lang.Integer getMajorVersion() {
      return MajorVersion;
    }

    public void setMajorVersion(java.lang.Integer MajorVersion) {
      this.MajorVersion = MajorVersion;
      MajorVersion__is_set = true;
    }

    protected void setMajorVersion(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("MajorVersion", "urn:sobject.tooling.soap.sforce.com","MajorVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setMajorVersion((java.lang.Integer)__typeMapper.readObject(__in, _lookupTypeInfo("MajorVersion", "urn:sobject.tooling.soap.sforce.com","MajorVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true), java.lang.Integer.class));
      }
    }

    private void writeFieldMajorVersion(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("MajorVersion", "urn:sobject.tooling.soap.sforce.com","MajorVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true), MajorVersion, MajorVersion__is_set);
    }

    /**
     * element : MetadataPackageId of type {urn:tooling.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean MetadataPackageId__is_set = false;

    private java.lang.String MetadataPackageId;

    public java.lang.String getMetadataPackageId() {
      return MetadataPackageId;
    }

    public void setMetadataPackageId(java.lang.String MetadataPackageId) {
      this.MetadataPackageId = MetadataPackageId;
      MetadataPackageId__is_set = true;
    }

    protected void setMetadataPackageId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("MetadataPackageId", "urn:sobject.tooling.soap.sforce.com","MetadataPackageId","urn:tooling.soap.sforce.com","ID",0,1,true))) {
        setMetadataPackageId(__typeMapper.readString(__in, _lookupTypeInfo("MetadataPackageId", "urn:sobject.tooling.soap.sforce.com","MetadataPackageId","urn:tooling.soap.sforce.com","ID",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMetadataPackageId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("MetadataPackageId", "urn:sobject.tooling.soap.sforce.com","MetadataPackageId","urn:tooling.soap.sforce.com","ID",0,1,true), MetadataPackageId, MetadataPackageId__is_set);
    }

    /**
     * element : MinorVersion of type {http://www.w3.org/2001/XMLSchema}int
     * java type: java.lang.Integer
     */
    private boolean MinorVersion__is_set = false;

    private java.lang.Integer MinorVersion;

    public java.lang.Integer getMinorVersion() {
      return MinorVersion;
    }

    public void setMinorVersion(java.lang.Integer MinorVersion) {
      this.MinorVersion = MinorVersion;
      MinorVersion__is_set = true;
    }

    protected void setMinorVersion(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("MinorVersion", "urn:sobject.tooling.soap.sforce.com","MinorVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setMinorVersion((java.lang.Integer)__typeMapper.readObject(__in, _lookupTypeInfo("MinorVersion", "urn:sobject.tooling.soap.sforce.com","MinorVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true), java.lang.Integer.class));
      }
    }

    private void writeFieldMinorVersion(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("MinorVersion", "urn:sobject.tooling.soap.sforce.com","MinorVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true), MinorVersion, MinorVersion__is_set);
    }

    /**
     * element : Name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean Name__is_set = false;

    private java.lang.String Name;

    public java.lang.String getName() {
      return Name;
    }

    public void setName(java.lang.String Name) {
      this.Name = Name;
      Name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Name", "urn:sobject.tooling.soap.sforce.com","Name","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setName(__typeMapper.readString(__in, _lookupTypeInfo("Name", "urn:sobject.tooling.soap.sforce.com","Name","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Name", "urn:sobject.tooling.soap.sforce.com","Name","http://www.w3.org/2001/XMLSchema","string",0,1,true), Name, Name__is_set);
    }

    /**
     * element : PatchVersion of type {http://www.w3.org/2001/XMLSchema}int
     * java type: java.lang.Integer
     */
    private boolean PatchVersion__is_set = false;

    private java.lang.Integer PatchVersion;

    public java.lang.Integer getPatchVersion() {
      return PatchVersion;
    }

    public void setPatchVersion(java.lang.Integer PatchVersion) {
      this.PatchVersion = PatchVersion;
      PatchVersion__is_set = true;
    }

    protected void setPatchVersion(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("PatchVersion", "urn:sobject.tooling.soap.sforce.com","PatchVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true))) {
        setPatchVersion((java.lang.Integer)__typeMapper.readObject(__in, _lookupTypeInfo("PatchVersion", "urn:sobject.tooling.soap.sforce.com","PatchVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true), java.lang.Integer.class));
      }
    }

    private void writeFieldPatchVersion(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("PatchVersion", "urn:sobject.tooling.soap.sforce.com","PatchVersion","http://www.w3.org/2001/XMLSchema","int",0,1,true), PatchVersion, PatchVersion__is_set);
    }

    /**
     * element : ReleaseState of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean ReleaseState__is_set = false;

    private java.lang.String ReleaseState;

    public java.lang.String getReleaseState() {
      return ReleaseState;
    }

    public void setReleaseState(java.lang.String ReleaseState) {
      this.ReleaseState = ReleaseState;
      ReleaseState__is_set = true;
    }

    protected void setReleaseState(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("ReleaseState", "urn:sobject.tooling.soap.sforce.com","ReleaseState","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setReleaseState(__typeMapper.readString(__in, _lookupTypeInfo("ReleaseState", "urn:sobject.tooling.soap.sforce.com","ReleaseState","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldReleaseState(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("ReleaseState", "urn:sobject.tooling.soap.sforce.com","ReleaseState","http://www.w3.org/2001/XMLSchema","string",0,1,true), ReleaseState, ReleaseState__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:sobject.tooling.soap.sforce.com", "MetadataPackageVersion");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[MetadataPackageVersion ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldBuildNumber(__out, __typeMapper);
      writeFieldMajorVersion(__out, __typeMapper);
      writeFieldMetadataPackageId(__out, __typeMapper);
      writeFieldMinorVersion(__out, __typeMapper);
      writeFieldName(__out, __typeMapper);
      writeFieldPatchVersion(__out, __typeMapper);
      writeFieldReleaseState(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setBuildNumber(__in, __typeMapper);
      setMajorVersion(__in, __typeMapper);
      setMetadataPackageId(__in, __typeMapper);
      setMinorVersion(__in, __typeMapper);
      setName(__in, __typeMapper);
      setPatchVersion(__in, __typeMapper);
      setReleaseState(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "BuildNumber", BuildNumber);
      toStringHelper(sb, "MajorVersion", MajorVersion);
      toStringHelper(sb, "MetadataPackageId", MetadataPackageId);
      toStringHelper(sb, "MinorVersion", MinorVersion);
      toStringHelper(sb, "Name", Name);
      toStringHelper(sb, "PatchVersion", PatchVersion);
      toStringHelper(sb, "ReleaseState", ReleaseState);
    }


}
