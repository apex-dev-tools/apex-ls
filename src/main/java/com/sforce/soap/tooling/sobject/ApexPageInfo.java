package com.sforce.soap.tooling.sobject;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class ApexPageInfo extends com.sforce.soap.tooling.sobject.SObject {

    /**
     * Constructor
     */
    public ApexPageInfo() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : ApexPageId of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean ApexPageId__is_set = false;

    private java.lang.String ApexPageId;

    public java.lang.String getApexPageId() {
      return ApexPageId;
    }

    public void setApexPageId(java.lang.String ApexPageId) {
      this.ApexPageId = ApexPageId;
      ApexPageId__is_set = true;
    }

    protected void setApexPageId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("ApexPageId", "urn:sobject.tooling.soap.sforce.com","ApexPageId","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setApexPageId(__typeMapper.readString(__in, _lookupTypeInfo("ApexPageId", "urn:sobject.tooling.soap.sforce.com","ApexPageId","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldApexPageId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("ApexPageId", "urn:sobject.tooling.soap.sforce.com","ApexPageId","http://www.w3.org/2001/XMLSchema","string",0,1,true), ApexPageId, ApexPageId__is_set);
    }

    /**
     * element : ApiVersion of type {http://www.w3.org/2001/XMLSchema}double
     * java type: java.lang.Double
     */
    private boolean ApiVersion__is_set = false;

    private java.lang.Double ApiVersion;

    public java.lang.Double getApiVersion() {
      return ApiVersion;
    }

    public void setApiVersion(java.lang.Double ApiVersion) {
      this.ApiVersion = ApiVersion;
      ApiVersion__is_set = true;
    }

    protected void setApiVersion(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("ApiVersion", "urn:sobject.tooling.soap.sforce.com","ApiVersion","http://www.w3.org/2001/XMLSchema","double",0,1,true))) {
        setApiVersion((java.lang.Double)__typeMapper.readObject(__in, _lookupTypeInfo("ApiVersion", "urn:sobject.tooling.soap.sforce.com","ApiVersion","http://www.w3.org/2001/XMLSchema","double",0,1,true), java.lang.Double.class));
      }
    }

    private void writeFieldApiVersion(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("ApiVersion", "urn:sobject.tooling.soap.sforce.com","ApiVersion","http://www.w3.org/2001/XMLSchema","double",0,1,true), ApiVersion, ApiVersion__is_set);
    }

    /**
     * element : Description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean Description__is_set = false;

    private java.lang.String Description;

    public java.lang.String getDescription() {
      return Description;
    }

    public void setDescription(java.lang.String Description) {
      this.Description = Description;
      Description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Description", "urn:sobject.tooling.soap.sforce.com","Description","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDescription(__typeMapper.readString(__in, _lookupTypeInfo("Description", "urn:sobject.tooling.soap.sforce.com","Description","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDescription(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Description", "urn:sobject.tooling.soap.sforce.com","Description","http://www.w3.org/2001/XMLSchema","string",0,1,true), Description, Description__is_set);
    }

    /**
     * element : DurableId of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean DurableId__is_set = false;

    private java.lang.String DurableId;

    public java.lang.String getDurableId() {
      return DurableId;
    }

    public void setDurableId(java.lang.String DurableId) {
      this.DurableId = DurableId;
      DurableId__is_set = true;
    }

    protected void setDurableId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("DurableId", "urn:sobject.tooling.soap.sforce.com","DurableId","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setDurableId(__typeMapper.readString(__in, _lookupTypeInfo("DurableId", "urn:sobject.tooling.soap.sforce.com","DurableId","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDurableId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("DurableId", "urn:sobject.tooling.soap.sforce.com","DurableId","http://www.w3.org/2001/XMLSchema","string",0,1,true), DurableId, DurableId__is_set);
    }

    /**
     * element : IsAvailableInTouch of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private boolean IsAvailableInTouch__is_set = false;

    private java.lang.Boolean IsAvailableInTouch;

    public java.lang.Boolean getIsAvailableInTouch() {
      return IsAvailableInTouch;
    }

    public void setIsAvailableInTouch(java.lang.Boolean IsAvailableInTouch) {
      this.IsAvailableInTouch = IsAvailableInTouch;
      IsAvailableInTouch__is_set = true;
    }

    protected void setIsAvailableInTouch(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("IsAvailableInTouch", "urn:sobject.tooling.soap.sforce.com","IsAvailableInTouch","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setIsAvailableInTouch((java.lang.Boolean)__typeMapper.readObject(__in, _lookupTypeInfo("IsAvailableInTouch", "urn:sobject.tooling.soap.sforce.com","IsAvailableInTouch","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), java.lang.Boolean.class));
      }
    }

    private void writeFieldIsAvailableInTouch(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("IsAvailableInTouch", "urn:sobject.tooling.soap.sforce.com","IsAvailableInTouch","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), IsAvailableInTouch, IsAvailableInTouch__is_set);
    }

    /**
     * element : IsShowHeader of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean IsShowHeader__is_set = false;

    private java.lang.String IsShowHeader;

    public java.lang.String getIsShowHeader() {
      return IsShowHeader;
    }

    public void setIsShowHeader(java.lang.String IsShowHeader) {
      this.IsShowHeader = IsShowHeader;
      IsShowHeader__is_set = true;
    }

    protected void setIsShowHeader(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("IsShowHeader", "urn:sobject.tooling.soap.sforce.com","IsShowHeader","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setIsShowHeader(__typeMapper.readString(__in, _lookupTypeInfo("IsShowHeader", "urn:sobject.tooling.soap.sforce.com","IsShowHeader","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldIsShowHeader(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("IsShowHeader", "urn:sobject.tooling.soap.sforce.com","IsShowHeader","http://www.w3.org/2001/XMLSchema","string",0,1,true), IsShowHeader, IsShowHeader__is_set);
    }

    /**
     * element : MasterLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean MasterLabel__is_set = false;

    private java.lang.String MasterLabel;

    public java.lang.String getMasterLabel() {
      return MasterLabel;
    }

    public void setMasterLabel(java.lang.String MasterLabel) {
      this.MasterLabel = MasterLabel;
      MasterLabel__is_set = true;
    }

    protected void setMasterLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("MasterLabel", "urn:sobject.tooling.soap.sforce.com","MasterLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setMasterLabel(__typeMapper.readString(__in, _lookupTypeInfo("MasterLabel", "urn:sobject.tooling.soap.sforce.com","MasterLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMasterLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("MasterLabel", "urn:sobject.tooling.soap.sforce.com","MasterLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true), MasterLabel, MasterLabel__is_set);
    }

    /**
     * element : Name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean Name__is_set = false;

    private java.lang.String Name;

    public java.lang.String getName() {
      return Name;
    }

    public void setName(java.lang.String Name) {
      this.Name = Name;
      Name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("Name", "urn:sobject.tooling.soap.sforce.com","Name","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setName(__typeMapper.readString(__in, _lookupTypeInfo("Name", "urn:sobject.tooling.soap.sforce.com","Name","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("Name", "urn:sobject.tooling.soap.sforce.com","Name","http://www.w3.org/2001/XMLSchema","string",0,1,true), Name, Name__is_set);
    }

    /**
     * element : NameSpacePrefix of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean NameSpacePrefix__is_set = false;

    private java.lang.String NameSpacePrefix;

    public java.lang.String getNameSpacePrefix() {
      return NameSpacePrefix;
    }

    public void setNameSpacePrefix(java.lang.String NameSpacePrefix) {
      this.NameSpacePrefix = NameSpacePrefix;
      NameSpacePrefix__is_set = true;
    }

    protected void setNameSpacePrefix(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("NameSpacePrefix", "urn:sobject.tooling.soap.sforce.com","NameSpacePrefix","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setNameSpacePrefix(__typeMapper.readString(__in, _lookupTypeInfo("NameSpacePrefix", "urn:sobject.tooling.soap.sforce.com","NameSpacePrefix","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldNameSpacePrefix(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("NameSpacePrefix", "urn:sobject.tooling.soap.sforce.com","NameSpacePrefix","http://www.w3.org/2001/XMLSchema","string",0,1,true), NameSpacePrefix, NameSpacePrefix__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "urn:sobject.tooling.soap.sforce.com", "ApexPageInfo");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ApexPageInfo ");
      sb.append(super.toString());
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldApexPageId(__out, __typeMapper);
      writeFieldApiVersion(__out, __typeMapper);
      writeFieldDescription(__out, __typeMapper);
      writeFieldDurableId(__out, __typeMapper);
      writeFieldIsAvailableInTouch(__out, __typeMapper);
      writeFieldIsShowHeader(__out, __typeMapper);
      writeFieldMasterLabel(__out, __typeMapper);
      writeFieldName(__out, __typeMapper);
      writeFieldNameSpacePrefix(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setApexPageId(__in, __typeMapper);
      setApiVersion(__in, __typeMapper);
      setDescription(__in, __typeMapper);
      setDurableId(__in, __typeMapper);
      setIsAvailableInTouch(__in, __typeMapper);
      setIsShowHeader(__in, __typeMapper);
      setMasterLabel(__in, __typeMapper);
      setName(__in, __typeMapper);
      setNameSpacePrefix(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "ApexPageId", ApexPageId);
      toStringHelper(sb, "ApiVersion", ApiVersion);
      toStringHelper(sb, "Description", Description);
      toStringHelper(sb, "DurableId", DurableId);
      toStringHelper(sb, "IsAvailableInTouch", IsAvailableInTouch);
      toStringHelper(sb, "IsShowHeader", IsShowHeader);
      toStringHelper(sb, "MasterLabel", MasterLabel);
      toStringHelper(sb, "Name", Name);
      toStringHelper(sb, "NameSpacePrefix", NameSpacePrefix);
    }


}
