package com.sforce.soap.tooling;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class CodeCoverageResult implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public CodeCoverageResult() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : id of type {urn:tooling.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean id__is_set = false;

    private java.lang.String id;

    public java.lang.String getId() {
      return id;
    }

    public void setId(java.lang.String id) {
      this.id = id;
      id__is_set = true;
    }

    protected void setId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("id", "urn:tooling.soap.sforce.com","id","urn:tooling.soap.sforce.com","ID",1,1,true))) {
        setId(__typeMapper.readString(__in, _lookupTypeInfo("id", "urn:tooling.soap.sforce.com","id","urn:tooling.soap.sforce.com","ID",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("id", "urn:tooling.soap.sforce.com","id","urn:tooling.soap.sforce.com","ID",1,1,true), id, id__is_set);
    }

    /**
     * element : locationsNotCovered of type {urn:tooling.soap.sforce.com}CodeLocation
     * java type: com.sforce.soap.tooling.CodeLocation[]
     */
    private boolean locationsNotCovered__is_set = false;

    private com.sforce.soap.tooling.CodeLocation[] locationsNotCovered = new com.sforce.soap.tooling.CodeLocation[0];

    public com.sforce.soap.tooling.CodeLocation[] getLocationsNotCovered() {
      return locationsNotCovered;
    }

    public void setLocationsNotCovered(com.sforce.soap.tooling.CodeLocation[] locationsNotCovered) {
      this.locationsNotCovered = locationsNotCovered;
      locationsNotCovered__is_set = true;
    }

    protected void setLocationsNotCovered(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("locationsNotCovered", "urn:tooling.soap.sforce.com","locationsNotCovered","urn:tooling.soap.sforce.com","CodeLocation",0,-1,true))) {
        setLocationsNotCovered((com.sforce.soap.tooling.CodeLocation[])__typeMapper.readObject(__in, _lookupTypeInfo("locationsNotCovered", "urn:tooling.soap.sforce.com","locationsNotCovered","urn:tooling.soap.sforce.com","CodeLocation",0,-1,true), com.sforce.soap.tooling.CodeLocation[].class));
      }
    }

    private void writeFieldLocationsNotCovered(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("locationsNotCovered", "urn:tooling.soap.sforce.com","locationsNotCovered","urn:tooling.soap.sforce.com","CodeLocation",0,-1,true), locationsNotCovered, locationsNotCovered__is_set);
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean name__is_set = false;

    private java.lang.String name;

    public java.lang.String getName() {
      return name;
    }

    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setName(__typeMapper.readString(__in, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), name, name__is_set);
    }

    /**
     * element : namespace of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean namespace__is_set = false;

    private java.lang.String namespace;

    public java.lang.String getNamespace() {
      return namespace;
    }

    public void setNamespace(java.lang.String namespace) {
      this.namespace = namespace;
      namespace__is_set = true;
    }

    protected void setNamespace(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("namespace", "urn:tooling.soap.sforce.com","namespace","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setNamespace(__typeMapper.readString(__in, _lookupTypeInfo("namespace", "urn:tooling.soap.sforce.com","namespace","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldNamespace(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("namespace", "urn:tooling.soap.sforce.com","namespace","http://www.w3.org/2001/XMLSchema","string",1,1,true), namespace, namespace__is_set);
    }

    /**
     * element : numLocations of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean numLocations__is_set = false;

    private int numLocations;

    public int getNumLocations() {
      return numLocations;
    }

    public void setNumLocations(int numLocations) {
      this.numLocations = numLocations;
      numLocations__is_set = true;
    }

    protected void setNumLocations(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("numLocations", "urn:tooling.soap.sforce.com","numLocations","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setNumLocations((int)__typeMapper.readInt(__in, _lookupTypeInfo("numLocations", "urn:tooling.soap.sforce.com","numLocations","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldNumLocations(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("numLocations", "urn:tooling.soap.sforce.com","numLocations","http://www.w3.org/2001/XMLSchema","int",1,1,true), numLocations, numLocations__is_set);
    }

    /**
     * element : numLocationsNotCovered of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean numLocationsNotCovered__is_set = false;

    private int numLocationsNotCovered;

    public int getNumLocationsNotCovered() {
      return numLocationsNotCovered;
    }

    public void setNumLocationsNotCovered(int numLocationsNotCovered) {
      this.numLocationsNotCovered = numLocationsNotCovered;
      numLocationsNotCovered__is_set = true;
    }

    protected void setNumLocationsNotCovered(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("numLocationsNotCovered", "urn:tooling.soap.sforce.com","numLocationsNotCovered","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setNumLocationsNotCovered((int)__typeMapper.readInt(__in, _lookupTypeInfo("numLocationsNotCovered", "urn:tooling.soap.sforce.com","numLocationsNotCovered","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldNumLocationsNotCovered(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("numLocationsNotCovered", "urn:tooling.soap.sforce.com","numLocationsNotCovered","http://www.w3.org/2001/XMLSchema","int",1,1,true), numLocationsNotCovered, numLocationsNotCovered__is_set);
    }

    /**
     * element : type of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean type__is_set = false;

    private java.lang.String type;

    public java.lang.String getType() {
      return type;
    }

    public void setType(java.lang.String type) {
      this.type = type;
      type__is_set = true;
    }

    protected void setType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("type", "urn:tooling.soap.sforce.com","type","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setType(__typeMapper.readString(__in, _lookupTypeInfo("type", "urn:tooling.soap.sforce.com","type","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("type", "urn:tooling.soap.sforce.com","type","http://www.w3.org/2001/XMLSchema","string",1,1,true), type, type__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[CodeCoverageResult ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldId(__out, __typeMapper);
      writeFieldLocationsNotCovered(__out, __typeMapper);
      writeFieldName(__out, __typeMapper);
      writeFieldNamespace(__out, __typeMapper);
      writeFieldNumLocations(__out, __typeMapper);
      writeFieldNumLocationsNotCovered(__out, __typeMapper);
      writeFieldType(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setId(__in, __typeMapper);
      setLocationsNotCovered(__in, __typeMapper);
      setName(__in, __typeMapper);
      setNamespace(__in, __typeMapper);
      setNumLocations(__in, __typeMapper);
      setNumLocationsNotCovered(__in, __typeMapper);
      setType(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "id", id);
      toStringHelper(sb, "locationsNotCovered", locationsNotCovered);
      toStringHelper(sb, "name", name);
      toStringHelper(sb, "namespace", namespace);
      toStringHelper(sb, "numLocations", numLocations);
      toStringHelper(sb, "numLocationsNotCovered", numLocationsNotCovered);
      toStringHelper(sb, "type", type);
    }


}
