package com.sforce.soap.tooling;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class RunTestsResult implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public RunTestsResult() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : apexLogId of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean apexLogId__is_set = false;

    private java.lang.String apexLogId;

    public java.lang.String getApexLogId() {
      return apexLogId;
    }

    public void setApexLogId(java.lang.String apexLogId) {
      this.apexLogId = apexLogId;
      apexLogId__is_set = true;
    }

    protected void setApexLogId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("apexLogId", "urn:tooling.soap.sforce.com","apexLogId","http://www.w3.org/2001/XMLSchema","string",0,1,true))) {
        setApexLogId(__typeMapper.readString(__in, _lookupTypeInfo("apexLogId", "urn:tooling.soap.sforce.com","apexLogId","http://www.w3.org/2001/XMLSchema","string",0,1,true), java.lang.String.class));
      }
    }

    private void writeFieldApexLogId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("apexLogId", "urn:tooling.soap.sforce.com","apexLogId","http://www.w3.org/2001/XMLSchema","string",0,1,true), apexLogId, apexLogId__is_set);
    }

    /**
     * element : codeCoverage of type {urn:tooling.soap.sforce.com}CodeCoverageResult
     * java type: com.sforce.soap.tooling.CodeCoverageResult[]
     */
    private boolean codeCoverage__is_set = false;

    private com.sforce.soap.tooling.CodeCoverageResult[] codeCoverage = new com.sforce.soap.tooling.CodeCoverageResult[0];

    public com.sforce.soap.tooling.CodeCoverageResult[] getCodeCoverage() {
      return codeCoverage;
    }

    public void setCodeCoverage(com.sforce.soap.tooling.CodeCoverageResult[] codeCoverage) {
      this.codeCoverage = codeCoverage;
      codeCoverage__is_set = true;
    }

    protected void setCodeCoverage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("codeCoverage", "urn:tooling.soap.sforce.com","codeCoverage","urn:tooling.soap.sforce.com","CodeCoverageResult",0,-1,true))) {
        setCodeCoverage((com.sforce.soap.tooling.CodeCoverageResult[])__typeMapper.readObject(__in, _lookupTypeInfo("codeCoverage", "urn:tooling.soap.sforce.com","codeCoverage","urn:tooling.soap.sforce.com","CodeCoverageResult",0,-1,true), com.sforce.soap.tooling.CodeCoverageResult[].class));
      }
    }

    private void writeFieldCodeCoverage(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("codeCoverage", "urn:tooling.soap.sforce.com","codeCoverage","urn:tooling.soap.sforce.com","CodeCoverageResult",0,-1,true), codeCoverage, codeCoverage__is_set);
    }

    /**
     * element : codeCoverageWarnings of type {urn:tooling.soap.sforce.com}CodeCoverageWarning
     * java type: com.sforce.soap.tooling.CodeCoverageWarning[]
     */
    private boolean codeCoverageWarnings__is_set = false;

    private com.sforce.soap.tooling.CodeCoverageWarning[] codeCoverageWarnings = new com.sforce.soap.tooling.CodeCoverageWarning[0];

    public com.sforce.soap.tooling.CodeCoverageWarning[] getCodeCoverageWarnings() {
      return codeCoverageWarnings;
    }

    public void setCodeCoverageWarnings(com.sforce.soap.tooling.CodeCoverageWarning[] codeCoverageWarnings) {
      this.codeCoverageWarnings = codeCoverageWarnings;
      codeCoverageWarnings__is_set = true;
    }

    protected void setCodeCoverageWarnings(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("codeCoverageWarnings", "urn:tooling.soap.sforce.com","codeCoverageWarnings","urn:tooling.soap.sforce.com","CodeCoverageWarning",0,-1,true))) {
        setCodeCoverageWarnings((com.sforce.soap.tooling.CodeCoverageWarning[])__typeMapper.readObject(__in, _lookupTypeInfo("codeCoverageWarnings", "urn:tooling.soap.sforce.com","codeCoverageWarnings","urn:tooling.soap.sforce.com","CodeCoverageWarning",0,-1,true), com.sforce.soap.tooling.CodeCoverageWarning[].class));
      }
    }

    private void writeFieldCodeCoverageWarnings(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("codeCoverageWarnings", "urn:tooling.soap.sforce.com","codeCoverageWarnings","urn:tooling.soap.sforce.com","CodeCoverageWarning",0,-1,true), codeCoverageWarnings, codeCoverageWarnings__is_set);
    }

    /**
     * element : failures of type {urn:tooling.soap.sforce.com}RunTestFailure
     * java type: com.sforce.soap.tooling.RunTestFailure[]
     */
    private boolean failures__is_set = false;

    private com.sforce.soap.tooling.RunTestFailure[] failures = new com.sforce.soap.tooling.RunTestFailure[0];

    public com.sforce.soap.tooling.RunTestFailure[] getFailures() {
      return failures;
    }

    public void setFailures(com.sforce.soap.tooling.RunTestFailure[] failures) {
      this.failures = failures;
      failures__is_set = true;
    }

    protected void setFailures(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("failures", "urn:tooling.soap.sforce.com","failures","urn:tooling.soap.sforce.com","RunTestFailure",0,-1,true))) {
        setFailures((com.sforce.soap.tooling.RunTestFailure[])__typeMapper.readObject(__in, _lookupTypeInfo("failures", "urn:tooling.soap.sforce.com","failures","urn:tooling.soap.sforce.com","RunTestFailure",0,-1,true), com.sforce.soap.tooling.RunTestFailure[].class));
      }
    }

    private void writeFieldFailures(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("failures", "urn:tooling.soap.sforce.com","failures","urn:tooling.soap.sforce.com","RunTestFailure",0,-1,true), failures, failures__is_set);
    }

    /**
     * element : flowCoverage of type {urn:tooling.soap.sforce.com}FlowCoverageResult
     * java type: com.sforce.soap.tooling.FlowCoverageResult[]
     */
    private boolean flowCoverage__is_set = false;

    private com.sforce.soap.tooling.FlowCoverageResult[] flowCoverage = new com.sforce.soap.tooling.FlowCoverageResult[0];

    public com.sforce.soap.tooling.FlowCoverageResult[] getFlowCoverage() {
      return flowCoverage;
    }

    public void setFlowCoverage(com.sforce.soap.tooling.FlowCoverageResult[] flowCoverage) {
      this.flowCoverage = flowCoverage;
      flowCoverage__is_set = true;
    }

    protected void setFlowCoverage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("flowCoverage", "urn:tooling.soap.sforce.com","flowCoverage","urn:tooling.soap.sforce.com","FlowCoverageResult",0,-1,true))) {
        setFlowCoverage((com.sforce.soap.tooling.FlowCoverageResult[])__typeMapper.readObject(__in, _lookupTypeInfo("flowCoverage", "urn:tooling.soap.sforce.com","flowCoverage","urn:tooling.soap.sforce.com","FlowCoverageResult",0,-1,true), com.sforce.soap.tooling.FlowCoverageResult[].class));
      }
    }

    private void writeFieldFlowCoverage(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("flowCoverage", "urn:tooling.soap.sforce.com","flowCoverage","urn:tooling.soap.sforce.com","FlowCoverageResult",0,-1,true), flowCoverage, flowCoverage__is_set);
    }

    /**
     * element : flowCoverageWarnings of type {urn:tooling.soap.sforce.com}FlowCoverageWarning
     * java type: com.sforce.soap.tooling.FlowCoverageWarning[]
     */
    private boolean flowCoverageWarnings__is_set = false;

    private com.sforce.soap.tooling.FlowCoverageWarning[] flowCoverageWarnings = new com.sforce.soap.tooling.FlowCoverageWarning[0];

    public com.sforce.soap.tooling.FlowCoverageWarning[] getFlowCoverageWarnings() {
      return flowCoverageWarnings;
    }

    public void setFlowCoverageWarnings(com.sforce.soap.tooling.FlowCoverageWarning[] flowCoverageWarnings) {
      this.flowCoverageWarnings = flowCoverageWarnings;
      flowCoverageWarnings__is_set = true;
    }

    protected void setFlowCoverageWarnings(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("flowCoverageWarnings", "urn:tooling.soap.sforce.com","flowCoverageWarnings","urn:tooling.soap.sforce.com","FlowCoverageWarning",0,-1,true))) {
        setFlowCoverageWarnings((com.sforce.soap.tooling.FlowCoverageWarning[])__typeMapper.readObject(__in, _lookupTypeInfo("flowCoverageWarnings", "urn:tooling.soap.sforce.com","flowCoverageWarnings","urn:tooling.soap.sforce.com","FlowCoverageWarning",0,-1,true), com.sforce.soap.tooling.FlowCoverageWarning[].class));
      }
    }

    private void writeFieldFlowCoverageWarnings(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("flowCoverageWarnings", "urn:tooling.soap.sforce.com","flowCoverageWarnings","urn:tooling.soap.sforce.com","FlowCoverageWarning",0,-1,true), flowCoverageWarnings, flowCoverageWarnings__is_set);
    }

    /**
     * element : numFailures of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean numFailures__is_set = false;

    private int numFailures;

    public int getNumFailures() {
      return numFailures;
    }

    public void setNumFailures(int numFailures) {
      this.numFailures = numFailures;
      numFailures__is_set = true;
    }

    protected void setNumFailures(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("numFailures", "urn:tooling.soap.sforce.com","numFailures","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setNumFailures((int)__typeMapper.readInt(__in, _lookupTypeInfo("numFailures", "urn:tooling.soap.sforce.com","numFailures","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldNumFailures(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("numFailures", "urn:tooling.soap.sforce.com","numFailures","http://www.w3.org/2001/XMLSchema","int",1,1,true), numFailures, numFailures__is_set);
    }

    /**
     * element : numTestsRun of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean numTestsRun__is_set = false;

    private int numTestsRun;

    public int getNumTestsRun() {
      return numTestsRun;
    }

    public void setNumTestsRun(int numTestsRun) {
      this.numTestsRun = numTestsRun;
      numTestsRun__is_set = true;
    }

    protected void setNumTestsRun(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("numTestsRun", "urn:tooling.soap.sforce.com","numTestsRun","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setNumTestsRun((int)__typeMapper.readInt(__in, _lookupTypeInfo("numTestsRun", "urn:tooling.soap.sforce.com","numTestsRun","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldNumTestsRun(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("numTestsRun", "urn:tooling.soap.sforce.com","numTestsRun","http://www.w3.org/2001/XMLSchema","int",1,1,true), numTestsRun, numTestsRun__is_set);
    }

    /**
     * element : successes of type {urn:tooling.soap.sforce.com}RunTestSuccess
     * java type: com.sforce.soap.tooling.RunTestSuccess[]
     */
    private boolean successes__is_set = false;

    private com.sforce.soap.tooling.RunTestSuccess[] successes = new com.sforce.soap.tooling.RunTestSuccess[0];

    public com.sforce.soap.tooling.RunTestSuccess[] getSuccesses() {
      return successes;
    }

    public void setSuccesses(com.sforce.soap.tooling.RunTestSuccess[] successes) {
      this.successes = successes;
      successes__is_set = true;
    }

    protected void setSuccesses(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("successes", "urn:tooling.soap.sforce.com","successes","urn:tooling.soap.sforce.com","RunTestSuccess",0,-1,true))) {
        setSuccesses((com.sforce.soap.tooling.RunTestSuccess[])__typeMapper.readObject(__in, _lookupTypeInfo("successes", "urn:tooling.soap.sforce.com","successes","urn:tooling.soap.sforce.com","RunTestSuccess",0,-1,true), com.sforce.soap.tooling.RunTestSuccess[].class));
      }
    }

    private void writeFieldSuccesses(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("successes", "urn:tooling.soap.sforce.com","successes","urn:tooling.soap.sforce.com","RunTestSuccess",0,-1,true), successes, successes__is_set);
    }

    /**
     * element : totalTime of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private boolean totalTime__is_set = false;

    private double totalTime;

    public double getTotalTime() {
      return totalTime;
    }

    public void setTotalTime(double totalTime) {
      this.totalTime = totalTime;
      totalTime__is_set = true;
    }

    protected void setTotalTime(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("totalTime", "urn:tooling.soap.sforce.com","totalTime","http://www.w3.org/2001/XMLSchema","double",1,1,true))) {
        setTotalTime((double)__typeMapper.readDouble(__in, _lookupTypeInfo("totalTime", "urn:tooling.soap.sforce.com","totalTime","http://www.w3.org/2001/XMLSchema","double",1,1,true), double.class));
      }
    }

    private void writeFieldTotalTime(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("totalTime", "urn:tooling.soap.sforce.com","totalTime","http://www.w3.org/2001/XMLSchema","double",1,1,true), totalTime, totalTime__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[RunTestsResult ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldApexLogId(__out, __typeMapper);
      writeFieldCodeCoverage(__out, __typeMapper);
      writeFieldCodeCoverageWarnings(__out, __typeMapper);
      writeFieldFailures(__out, __typeMapper);
      writeFieldFlowCoverage(__out, __typeMapper);
      writeFieldFlowCoverageWarnings(__out, __typeMapper);
      writeFieldNumFailures(__out, __typeMapper);
      writeFieldNumTestsRun(__out, __typeMapper);
      writeFieldSuccesses(__out, __typeMapper);
      writeFieldTotalTime(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setApexLogId(__in, __typeMapper);
      setCodeCoverage(__in, __typeMapper);
      setCodeCoverageWarnings(__in, __typeMapper);
      setFailures(__in, __typeMapper);
      setFlowCoverage(__in, __typeMapper);
      setFlowCoverageWarnings(__in, __typeMapper);
      setNumFailures(__in, __typeMapper);
      setNumTestsRun(__in, __typeMapper);
      setSuccesses(__in, __typeMapper);
      setTotalTime(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "apexLogId", apexLogId);
      toStringHelper(sb, "codeCoverage", codeCoverage);
      toStringHelper(sb, "codeCoverageWarnings", codeCoverageWarnings);
      toStringHelper(sb, "failures", failures);
      toStringHelper(sb, "flowCoverage", flowCoverage);
      toStringHelper(sb, "flowCoverageWarnings", flowCoverageWarnings);
      toStringHelper(sb, "numFailures", numFailures);
      toStringHelper(sb, "numTestsRun", numTestsRun);
      toStringHelper(sb, "successes", successes);
      toStringHelper(sb, "totalTime", totalTime);
    }


}
