package com.sforce.soap.tooling;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class DescribeLayoutSection implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public DescribeLayoutSection() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : collapsed of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean collapsed__is_set = false;

    private boolean collapsed;

    public boolean getCollapsed() {
      return collapsed;
    }

    public boolean isCollapsed() {
      return collapsed;
    }

    public void setCollapsed(boolean collapsed) {
      this.collapsed = collapsed;
      collapsed__is_set = true;
    }

    protected void setCollapsed(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("collapsed", "urn:tooling.soap.sforce.com","collapsed","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setCollapsed(__typeMapper.readBoolean(__in, _lookupTypeInfo("collapsed", "urn:tooling.soap.sforce.com","collapsed","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldCollapsed(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("collapsed", "urn:tooling.soap.sforce.com","collapsed","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), collapsed, collapsed__is_set);
    }

    /**
     * element : columns of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean columns__is_set = false;

    private int columns;

    public int getColumns() {
      return columns;
    }

    public void setColumns(int columns) {
      this.columns = columns;
      columns__is_set = true;
    }

    protected void setColumns(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("columns", "urn:tooling.soap.sforce.com","columns","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setColumns((int)__typeMapper.readInt(__in, _lookupTypeInfo("columns", "urn:tooling.soap.sforce.com","columns","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldColumns(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("columns", "urn:tooling.soap.sforce.com","columns","http://www.w3.org/2001/XMLSchema","int",1,1,true), columns, columns__is_set);
    }

    /**
     * element : heading of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean heading__is_set = false;

    private java.lang.String heading;

    public java.lang.String getHeading() {
      return heading;
    }

    public void setHeading(java.lang.String heading) {
      this.heading = heading;
      heading__is_set = true;
    }

    protected void setHeading(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("heading", "urn:tooling.soap.sforce.com","heading","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setHeading(__typeMapper.readString(__in, _lookupTypeInfo("heading", "urn:tooling.soap.sforce.com","heading","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldHeading(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("heading", "urn:tooling.soap.sforce.com","heading","http://www.w3.org/2001/XMLSchema","string",1,1,true), heading, heading__is_set);
    }

    /**
     * element : layoutRows of type {urn:tooling.soap.sforce.com}DescribeLayoutRow
     * java type: com.sforce.soap.tooling.DescribeLayoutRow[]
     */
    private boolean layoutRows__is_set = false;

    private com.sforce.soap.tooling.DescribeLayoutRow[] layoutRows = new com.sforce.soap.tooling.DescribeLayoutRow[0];

    public com.sforce.soap.tooling.DescribeLayoutRow[] getLayoutRows() {
      return layoutRows;
    }

    public void setLayoutRows(com.sforce.soap.tooling.DescribeLayoutRow[] layoutRows) {
      this.layoutRows = layoutRows;
      layoutRows__is_set = true;
    }

    protected void setLayoutRows(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("layoutRows", "urn:tooling.soap.sforce.com","layoutRows","urn:tooling.soap.sforce.com","DescribeLayoutRow",0,-1,true))) {
        setLayoutRows((com.sforce.soap.tooling.DescribeLayoutRow[])__typeMapper.readObject(__in, _lookupTypeInfo("layoutRows", "urn:tooling.soap.sforce.com","layoutRows","urn:tooling.soap.sforce.com","DescribeLayoutRow",0,-1,true), com.sforce.soap.tooling.DescribeLayoutRow[].class));
      }
    }

    private void writeFieldLayoutRows(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("layoutRows", "urn:tooling.soap.sforce.com","layoutRows","urn:tooling.soap.sforce.com","DescribeLayoutRow",0,-1,true), layoutRows, layoutRows__is_set);
    }

    /**
     * element : layoutSectionId of type {urn:tooling.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean layoutSectionId__is_set = false;

    private java.lang.String layoutSectionId;

    public java.lang.String getLayoutSectionId() {
      return layoutSectionId;
    }

    public void setLayoutSectionId(java.lang.String layoutSectionId) {
      this.layoutSectionId = layoutSectionId;
      layoutSectionId__is_set = true;
    }

    protected void setLayoutSectionId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("layoutSectionId", "urn:tooling.soap.sforce.com","layoutSectionId","urn:tooling.soap.sforce.com","ID",1,1,true))) {
        setLayoutSectionId(__typeMapper.readString(__in, _lookupTypeInfo("layoutSectionId", "urn:tooling.soap.sforce.com","layoutSectionId","urn:tooling.soap.sforce.com","ID",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLayoutSectionId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("layoutSectionId", "urn:tooling.soap.sforce.com","layoutSectionId","urn:tooling.soap.sforce.com","ID",1,1,true), layoutSectionId, layoutSectionId__is_set);
    }

    /**
     * element : parentLayoutId of type {urn:tooling.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean parentLayoutId__is_set = false;

    private java.lang.String parentLayoutId;

    public java.lang.String getParentLayoutId() {
      return parentLayoutId;
    }

    public void setParentLayoutId(java.lang.String parentLayoutId) {
      this.parentLayoutId = parentLayoutId;
      parentLayoutId__is_set = true;
    }

    protected void setParentLayoutId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("parentLayoutId", "urn:tooling.soap.sforce.com","parentLayoutId","urn:tooling.soap.sforce.com","ID",1,1,true))) {
        setParentLayoutId(__typeMapper.readString(__in, _lookupTypeInfo("parentLayoutId", "urn:tooling.soap.sforce.com","parentLayoutId","urn:tooling.soap.sforce.com","ID",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldParentLayoutId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("parentLayoutId", "urn:tooling.soap.sforce.com","parentLayoutId","urn:tooling.soap.sforce.com","ID",1,1,true), parentLayoutId, parentLayoutId__is_set);
    }

    /**
     * element : rows of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean rows__is_set = false;

    private int rows;

    public int getRows() {
      return rows;
    }

    public void setRows(int rows) {
      this.rows = rows;
      rows__is_set = true;
    }

    protected void setRows(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("rows", "urn:tooling.soap.sforce.com","rows","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setRows((int)__typeMapper.readInt(__in, _lookupTypeInfo("rows", "urn:tooling.soap.sforce.com","rows","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldRows(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("rows", "urn:tooling.soap.sforce.com","rows","http://www.w3.org/2001/XMLSchema","int",1,1,true), rows, rows__is_set);
    }

    /**
     * element : tabOrder of type {urn:tooling.soap.sforce.com}TabOrderType
     * java type: com.sforce.soap.tooling.TabOrderType
     */
    private boolean tabOrder__is_set = false;

    private com.sforce.soap.tooling.TabOrderType tabOrder;

    public com.sforce.soap.tooling.TabOrderType getTabOrder() {
      return tabOrder;
    }

    public void setTabOrder(com.sforce.soap.tooling.TabOrderType tabOrder) {
      this.tabOrder = tabOrder;
      tabOrder__is_set = true;
    }

    protected void setTabOrder(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("tabOrder", "urn:tooling.soap.sforce.com","tabOrder","urn:tooling.soap.sforce.com","TabOrderType",1,1,true))) {
        setTabOrder((com.sforce.soap.tooling.TabOrderType)__typeMapper.readObject(__in, _lookupTypeInfo("tabOrder", "urn:tooling.soap.sforce.com","tabOrder","urn:tooling.soap.sforce.com","TabOrderType",1,1,true), com.sforce.soap.tooling.TabOrderType.class));
      }
    }

    private void writeFieldTabOrder(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("tabOrder", "urn:tooling.soap.sforce.com","tabOrder","urn:tooling.soap.sforce.com","TabOrderType",1,1,true), tabOrder, tabOrder__is_set);
    }

    /**
     * element : useCollapsibleSection of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean useCollapsibleSection__is_set = false;

    private boolean useCollapsibleSection;

    public boolean getUseCollapsibleSection() {
      return useCollapsibleSection;
    }

    public boolean isUseCollapsibleSection() {
      return useCollapsibleSection;
    }

    public void setUseCollapsibleSection(boolean useCollapsibleSection) {
      this.useCollapsibleSection = useCollapsibleSection;
      useCollapsibleSection__is_set = true;
    }

    protected void setUseCollapsibleSection(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("useCollapsibleSection", "urn:tooling.soap.sforce.com","useCollapsibleSection","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setUseCollapsibleSection(__typeMapper.readBoolean(__in, _lookupTypeInfo("useCollapsibleSection", "urn:tooling.soap.sforce.com","useCollapsibleSection","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldUseCollapsibleSection(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("useCollapsibleSection", "urn:tooling.soap.sforce.com","useCollapsibleSection","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), useCollapsibleSection, useCollapsibleSection__is_set);
    }

    /**
     * element : useHeading of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean useHeading__is_set = false;

    private boolean useHeading;

    public boolean getUseHeading() {
      return useHeading;
    }

    public boolean isUseHeading() {
      return useHeading;
    }

    public void setUseHeading(boolean useHeading) {
      this.useHeading = useHeading;
      useHeading__is_set = true;
    }

    protected void setUseHeading(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("useHeading", "urn:tooling.soap.sforce.com","useHeading","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setUseHeading(__typeMapper.readBoolean(__in, _lookupTypeInfo("useHeading", "urn:tooling.soap.sforce.com","useHeading","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldUseHeading(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("useHeading", "urn:tooling.soap.sforce.com","useHeading","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), useHeading, useHeading__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeLayoutSection ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldCollapsed(__out, __typeMapper);
      writeFieldColumns(__out, __typeMapper);
      writeFieldHeading(__out, __typeMapper);
      writeFieldLayoutRows(__out, __typeMapper);
      writeFieldLayoutSectionId(__out, __typeMapper);
      writeFieldParentLayoutId(__out, __typeMapper);
      writeFieldRows(__out, __typeMapper);
      writeFieldTabOrder(__out, __typeMapper);
      writeFieldUseCollapsibleSection(__out, __typeMapper);
      writeFieldUseHeading(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setCollapsed(__in, __typeMapper);
      setColumns(__in, __typeMapper);
      setHeading(__in, __typeMapper);
      setLayoutRows(__in, __typeMapper);
      setLayoutSectionId(__in, __typeMapper);
      setParentLayoutId(__in, __typeMapper);
      setRows(__in, __typeMapper);
      setTabOrder(__in, __typeMapper);
      setUseCollapsibleSection(__in, __typeMapper);
      setUseHeading(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "collapsed", collapsed);
      toStringHelper(sb, "columns", columns);
      toStringHelper(sb, "heading", heading);
      toStringHelper(sb, "layoutRows", layoutRows);
      toStringHelper(sb, "layoutSectionId", layoutSectionId);
      toStringHelper(sb, "parentLayoutId", parentLayoutId);
      toStringHelper(sb, "rows", rows);
      toStringHelper(sb, "tabOrder", tabOrder);
      toStringHelper(sb, "useCollapsibleSection", useCollapsibleSection);
      toStringHelper(sb, "useHeading", useHeading);
    }


}
