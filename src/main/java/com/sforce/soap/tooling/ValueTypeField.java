package com.sforce.soap.tooling;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class ValueTypeField implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ValueTypeField() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : fields of type {urn:tooling.soap.sforce.com}ValueTypeField
     * java type: com.sforce.soap.tooling.ValueTypeField[]
     */
    private boolean fields__is_set = false;

    private com.sforce.soap.tooling.ValueTypeField[] fields = new com.sforce.soap.tooling.ValueTypeField[0];

    public com.sforce.soap.tooling.ValueTypeField[] getFields() {
      return fields;
    }

    public void setFields(com.sforce.soap.tooling.ValueTypeField[] fields) {
      this.fields = fields;
      fields__is_set = true;
    }

    protected void setFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("fields", "urn:tooling.soap.sforce.com","fields","urn:tooling.soap.sforce.com","ValueTypeField",0,-1,true))) {
        setFields((com.sforce.soap.tooling.ValueTypeField[])__typeMapper.readObject(__in, _lookupTypeInfo("fields", "urn:tooling.soap.sforce.com","fields","urn:tooling.soap.sforce.com","ValueTypeField",0,-1,true), com.sforce.soap.tooling.ValueTypeField[].class));
      }
    }

    private void writeFieldFields(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("fields", "urn:tooling.soap.sforce.com","fields","urn:tooling.soap.sforce.com","ValueTypeField",0,-1,true), fields, fields__is_set);
    }

    /**
     * element : foreignKeyDomain of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private boolean foreignKeyDomain__is_set = false;

    private java.lang.String[] foreignKeyDomain = new java.lang.String[0];

    public java.lang.String[] getForeignKeyDomain() {
      return foreignKeyDomain;
    }

    public void setForeignKeyDomain(java.lang.String[] foreignKeyDomain) {
      this.foreignKeyDomain = foreignKeyDomain;
      foreignKeyDomain__is_set = true;
    }

    protected void setForeignKeyDomain(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("foreignKeyDomain", "urn:tooling.soap.sforce.com","foreignKeyDomain","http://www.w3.org/2001/XMLSchema","string",0,-1,true))) {
        setForeignKeyDomain((java.lang.String[])__typeMapper.readObject(__in, _lookupTypeInfo("foreignKeyDomain", "urn:tooling.soap.sforce.com","foreignKeyDomain","http://www.w3.org/2001/XMLSchema","string",0,-1,true), java.lang.String[].class));
      }
    }

    private void writeFieldForeignKeyDomain(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("foreignKeyDomain", "urn:tooling.soap.sforce.com","foreignKeyDomain","http://www.w3.org/2001/XMLSchema","string",0,-1,true), foreignKeyDomain, foreignKeyDomain__is_set);
    }

    /**
     * element : isForeignKey of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isForeignKey__is_set = false;

    private boolean isForeignKey;

    public boolean getIsForeignKey() {
      return isForeignKey;
    }

    public boolean isIsForeignKey() {
      return isForeignKey;
    }

    public void setIsForeignKey(boolean isForeignKey) {
      this.isForeignKey = isForeignKey;
      isForeignKey__is_set = true;
    }

    protected void setIsForeignKey(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("isForeignKey", "urn:tooling.soap.sforce.com","isForeignKey","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setIsForeignKey(__typeMapper.readBoolean(__in, _lookupTypeInfo("isForeignKey", "urn:tooling.soap.sforce.com","isForeignKey","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldIsForeignKey(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isForeignKey", "urn:tooling.soap.sforce.com","isForeignKey","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), isForeignKey, isForeignKey__is_set);
    }

    /**
     * element : isNameField of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isNameField__is_set = false;

    private boolean isNameField;

    public boolean getIsNameField() {
      return isNameField;
    }

    public boolean isIsNameField() {
      return isNameField;
    }

    public void setIsNameField(boolean isNameField) {
      this.isNameField = isNameField;
      isNameField__is_set = true;
    }

    protected void setIsNameField(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("isNameField", "urn:tooling.soap.sforce.com","isNameField","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setIsNameField(__typeMapper.readBoolean(__in, _lookupTypeInfo("isNameField", "urn:tooling.soap.sforce.com","isNameField","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldIsNameField(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isNameField", "urn:tooling.soap.sforce.com","isNameField","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), isNameField, isNameField__is_set);
    }

    /**
     * element : minOccurs of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean minOccurs__is_set = false;

    private int minOccurs;

    public int getMinOccurs() {
      return minOccurs;
    }

    public void setMinOccurs(int minOccurs) {
      this.minOccurs = minOccurs;
      minOccurs__is_set = true;
    }

    protected void setMinOccurs(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("minOccurs", "urn:tooling.soap.sforce.com","minOccurs","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setMinOccurs((int)__typeMapper.readInt(__in, _lookupTypeInfo("minOccurs", "urn:tooling.soap.sforce.com","minOccurs","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldMinOccurs(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("minOccurs", "urn:tooling.soap.sforce.com","minOccurs","http://www.w3.org/2001/XMLSchema","int",1,1,true), minOccurs, minOccurs__is_set);
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean name__is_set = false;

    private java.lang.String name;

    public java.lang.String getName() {
      return name;
    }

    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setName(__typeMapper.readString(__in, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), name, name__is_set);
    }

    /**
     * element : picklistValues of type {urn:tooling.soap.sforce.com}PicklistEntry
     * java type: com.sforce.soap.tooling.PicklistEntry[]
     */
    private boolean picklistValues__is_set = false;

    private com.sforce.soap.tooling.PicklistEntry[] picklistValues = new com.sforce.soap.tooling.PicklistEntry[0];

    public com.sforce.soap.tooling.PicklistEntry[] getPicklistValues() {
      return picklistValues;
    }

    public void setPicklistValues(com.sforce.soap.tooling.PicklistEntry[] picklistValues) {
      this.picklistValues = picklistValues;
      picklistValues__is_set = true;
    }

    protected void setPicklistValues(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("picklistValues", "urn:tooling.soap.sforce.com","picklistValues","urn:tooling.soap.sforce.com","PicklistEntry",0,-1,true))) {
        setPicklistValues((com.sforce.soap.tooling.PicklistEntry[])__typeMapper.readObject(__in, _lookupTypeInfo("picklistValues", "urn:tooling.soap.sforce.com","picklistValues","urn:tooling.soap.sforce.com","PicklistEntry",0,-1,true), com.sforce.soap.tooling.PicklistEntry[].class));
      }
    }

    private void writeFieldPicklistValues(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("picklistValues", "urn:tooling.soap.sforce.com","picklistValues","urn:tooling.soap.sforce.com","PicklistEntry",0,-1,true), picklistValues, picklistValues__is_set);
    }

    /**
     * element : soapType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean soapType__is_set = false;

    private java.lang.String soapType;

    public java.lang.String getSoapType() {
      return soapType;
    }

    public void setSoapType(java.lang.String soapType) {
      this.soapType = soapType;
      soapType__is_set = true;
    }

    protected void setSoapType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("soapType", "urn:tooling.soap.sforce.com","soapType","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setSoapType(__typeMapper.readString(__in, _lookupTypeInfo("soapType", "urn:tooling.soap.sforce.com","soapType","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldSoapType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("soapType", "urn:tooling.soap.sforce.com","soapType","http://www.w3.org/2001/XMLSchema","string",1,1,true), soapType, soapType__is_set);
    }

    /**
     * element : valueRequired of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean valueRequired__is_set = false;

    private boolean valueRequired;

    public boolean getValueRequired() {
      return valueRequired;
    }

    public boolean isValueRequired() {
      return valueRequired;
    }

    public void setValueRequired(boolean valueRequired) {
      this.valueRequired = valueRequired;
      valueRequired__is_set = true;
    }

    protected void setValueRequired(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("valueRequired", "urn:tooling.soap.sforce.com","valueRequired","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setValueRequired(__typeMapper.readBoolean(__in, _lookupTypeInfo("valueRequired", "urn:tooling.soap.sforce.com","valueRequired","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldValueRequired(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("valueRequired", "urn:tooling.soap.sforce.com","valueRequired","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), valueRequired, valueRequired__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ValueTypeField ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldFields(__out, __typeMapper);
      writeFieldForeignKeyDomain(__out, __typeMapper);
      writeFieldIsForeignKey(__out, __typeMapper);
      writeFieldIsNameField(__out, __typeMapper);
      writeFieldMinOccurs(__out, __typeMapper);
      writeFieldName(__out, __typeMapper);
      writeFieldPicklistValues(__out, __typeMapper);
      writeFieldSoapType(__out, __typeMapper);
      writeFieldValueRequired(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setFields(__in, __typeMapper);
      setForeignKeyDomain(__in, __typeMapper);
      setIsForeignKey(__in, __typeMapper);
      setIsNameField(__in, __typeMapper);
      setMinOccurs(__in, __typeMapper);
      setName(__in, __typeMapper);
      setPicklistValues(__in, __typeMapper);
      setSoapType(__in, __typeMapper);
      setValueRequired(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "fields", fields);
      toStringHelper(sb, "foreignKeyDomain", foreignKeyDomain);
      toStringHelper(sb, "isForeignKey", isForeignKey);
      toStringHelper(sb, "isNameField", isNameField);
      toStringHelper(sb, "minOccurs", minOccurs);
      toStringHelper(sb, "name", name);
      toStringHelper(sb, "picklistValues", picklistValues);
      toStringHelper(sb, "soapType", soapType);
      toStringHelper(sb, "valueRequired", valueRequired);
    }


}
