package com.sforce.soap.tooling;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class RunTestFailure implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public RunTestFailure() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : id of type {urn:tooling.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private boolean id__is_set = false;

    private java.lang.String id;

    public java.lang.String getId() {
      return id;
    }

    public void setId(java.lang.String id) {
      this.id = id;
      id__is_set = true;
    }

    protected void setId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("id", "urn:tooling.soap.sforce.com","id","urn:tooling.soap.sforce.com","ID",1,1,true))) {
        setId(__typeMapper.readString(__in, _lookupTypeInfo("id", "urn:tooling.soap.sforce.com","id","urn:tooling.soap.sforce.com","ID",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldId(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("id", "urn:tooling.soap.sforce.com","id","urn:tooling.soap.sforce.com","ID",1,1,true), id, id__is_set);
    }

    /**
     * element : message of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean message__is_set = false;

    private java.lang.String message;

    public java.lang.String getMessage() {
      return message;
    }

    public void setMessage(java.lang.String message) {
      this.message = message;
      message__is_set = true;
    }

    protected void setMessage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("message", "urn:tooling.soap.sforce.com","message","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setMessage(__typeMapper.readString(__in, _lookupTypeInfo("message", "urn:tooling.soap.sforce.com","message","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMessage(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("message", "urn:tooling.soap.sforce.com","message","http://www.w3.org/2001/XMLSchema","string",1,1,true), message, message__is_set);
    }

    /**
     * element : methodName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean methodName__is_set = false;

    private java.lang.String methodName;

    public java.lang.String getMethodName() {
      return methodName;
    }

    public void setMethodName(java.lang.String methodName) {
      this.methodName = methodName;
      methodName__is_set = true;
    }

    protected void setMethodName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("methodName", "urn:tooling.soap.sforce.com","methodName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setMethodName(__typeMapper.readString(__in, _lookupTypeInfo("methodName", "urn:tooling.soap.sforce.com","methodName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldMethodName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("methodName", "urn:tooling.soap.sforce.com","methodName","http://www.w3.org/2001/XMLSchema","string",1,1,true), methodName, methodName__is_set);
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean name__is_set = false;

    private java.lang.String name;

    public java.lang.String getName() {
      return name;
    }

    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setName(__typeMapper.readString(__in, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), name, name__is_set);
    }

    /**
     * element : namespace of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean namespace__is_set = false;

    private java.lang.String namespace;

    public java.lang.String getNamespace() {
      return namespace;
    }

    public void setNamespace(java.lang.String namespace) {
      this.namespace = namespace;
      namespace__is_set = true;
    }

    protected void setNamespace(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("namespace", "urn:tooling.soap.sforce.com","namespace","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setNamespace(__typeMapper.readString(__in, _lookupTypeInfo("namespace", "urn:tooling.soap.sforce.com","namespace","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldNamespace(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("namespace", "urn:tooling.soap.sforce.com","namespace","http://www.w3.org/2001/XMLSchema","string",1,1,true), namespace, namespace__is_set);
    }

    /**
     * element : seeAllData of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean seeAllData__is_set = false;

    private boolean seeAllData;

    public boolean getSeeAllData() {
      return seeAllData;
    }

    public boolean isSeeAllData() {
      return seeAllData;
    }

    public void setSeeAllData(boolean seeAllData) {
      this.seeAllData = seeAllData;
      seeAllData__is_set = true;
    }

    protected void setSeeAllData(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("seeAllData", "urn:tooling.soap.sforce.com","seeAllData","http://www.w3.org/2001/XMLSchema","boolean",0,1,true))) {
        setSeeAllData(__typeMapper.readBoolean(__in, _lookupTypeInfo("seeAllData", "urn:tooling.soap.sforce.com","seeAllData","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), boolean.class));
      }
    }

    private void writeFieldSeeAllData(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("seeAllData", "urn:tooling.soap.sforce.com","seeAllData","http://www.w3.org/2001/XMLSchema","boolean",0,1,true), seeAllData, seeAllData__is_set);
    }

    /**
     * element : stackTrace of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean stackTrace__is_set = false;

    private java.lang.String stackTrace;

    public java.lang.String getStackTrace() {
      return stackTrace;
    }

    public void setStackTrace(java.lang.String stackTrace) {
      this.stackTrace = stackTrace;
      stackTrace__is_set = true;
    }

    protected void setStackTrace(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("stackTrace", "urn:tooling.soap.sforce.com","stackTrace","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setStackTrace(__typeMapper.readString(__in, _lookupTypeInfo("stackTrace", "urn:tooling.soap.sforce.com","stackTrace","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldStackTrace(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("stackTrace", "urn:tooling.soap.sforce.com","stackTrace","http://www.w3.org/2001/XMLSchema","string",1,1,true), stackTrace, stackTrace__is_set);
    }

    /**
     * element : time of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private boolean time__is_set = false;

    private double time;

    public double getTime() {
      return time;
    }

    public void setTime(double time) {
      this.time = time;
      time__is_set = true;
    }

    protected void setTime(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("time", "urn:tooling.soap.sforce.com","time","http://www.w3.org/2001/XMLSchema","double",1,1,true))) {
        setTime((double)__typeMapper.readDouble(__in, _lookupTypeInfo("time", "urn:tooling.soap.sforce.com","time","http://www.w3.org/2001/XMLSchema","double",1,1,true), double.class));
      }
    }

    private void writeFieldTime(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("time", "urn:tooling.soap.sforce.com","time","http://www.w3.org/2001/XMLSchema","double",1,1,true), time, time__is_set);
    }

    /**
     * element : type of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean type__is_set = false;

    private java.lang.String type;

    public java.lang.String getType() {
      return type;
    }

    public void setType(java.lang.String type) {
      this.type = type;
      type__is_set = true;
    }

    protected void setType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("type", "urn:tooling.soap.sforce.com","type","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setType(__typeMapper.readString(__in, _lookupTypeInfo("type", "urn:tooling.soap.sforce.com","type","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("type", "urn:tooling.soap.sforce.com","type","http://www.w3.org/2001/XMLSchema","string",1,1,true), type, type__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[RunTestFailure ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldId(__out, __typeMapper);
      writeFieldMessage(__out, __typeMapper);
      writeFieldMethodName(__out, __typeMapper);
      writeFieldName(__out, __typeMapper);
      writeFieldNamespace(__out, __typeMapper);
      writeFieldSeeAllData(__out, __typeMapper);
      writeFieldStackTrace(__out, __typeMapper);
      writeFieldTime(__out, __typeMapper);
      writeFieldType(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setId(__in, __typeMapper);
      setMessage(__in, __typeMapper);
      setMethodName(__in, __typeMapper);
      setName(__in, __typeMapper);
      setNamespace(__in, __typeMapper);
      setSeeAllData(__in, __typeMapper);
      setStackTrace(__in, __typeMapper);
      setTime(__in, __typeMapper);
      setType(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "id", id);
      toStringHelper(sb, "message", message);
      toStringHelper(sb, "methodName", methodName);
      toStringHelper(sb, "name", name);
      toStringHelper(sb, "namespace", namespace);
      toStringHelper(sb, "seeAllData", seeAllData);
      toStringHelper(sb, "stackTrace", stackTrace);
      toStringHelper(sb, "time", time);
      toStringHelper(sb, "type", type);
    }


}
