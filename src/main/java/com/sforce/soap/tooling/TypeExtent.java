package com.sforce.soap.tooling;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class TypeExtent implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public TypeExtent() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : collectionType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean collectionType__is_set = false;

    private java.lang.String collectionType;

    public java.lang.String getCollectionType() {
      return collectionType;
    }

    public void setCollectionType(java.lang.String collectionType) {
      this.collectionType = collectionType;
      collectionType__is_set = true;
    }

    protected void setCollectionType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("collectionType", "urn:tooling.soap.sforce.com","collectionType","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setCollectionType(__typeMapper.readString(__in, _lookupTypeInfo("collectionType", "urn:tooling.soap.sforce.com","collectionType","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldCollectionType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("collectionType", "urn:tooling.soap.sforce.com","collectionType","http://www.w3.org/2001/XMLSchema","string",1,1,true), collectionType, collectionType__is_set);
    }

    /**
     * element : count of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean count__is_set = false;

    private int count;

    public int getCount() {
      return count;
    }

    public void setCount(int count) {
      this.count = count;
      count__is_set = true;
    }

    protected void setCount(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("count", "urn:tooling.soap.sforce.com","count","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setCount((int)__typeMapper.readInt(__in, _lookupTypeInfo("count", "urn:tooling.soap.sforce.com","count","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldCount(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("count", "urn:tooling.soap.sforce.com","count","http://www.w3.org/2001/XMLSchema","int",1,1,true), count, count__is_set);
    }

    /**
     * element : definition of type {urn:tooling.soap.sforce.com}AttributeDefinition
     * java type: com.sforce.soap.tooling.AttributeDefinition[]
     */
    private boolean definition__is_set = false;

    private com.sforce.soap.tooling.AttributeDefinition[] definition = new com.sforce.soap.tooling.AttributeDefinition[0];

    public com.sforce.soap.tooling.AttributeDefinition[] getDefinition() {
      return definition;
    }

    public void setDefinition(com.sforce.soap.tooling.AttributeDefinition[] definition) {
      this.definition = definition;
      definition__is_set = true;
    }

    protected void setDefinition(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("definition", "urn:tooling.soap.sforce.com","definition","urn:tooling.soap.sforce.com","AttributeDefinition",0,-1,true))) {
        setDefinition((com.sforce.soap.tooling.AttributeDefinition[])__typeMapper.readObject(__in, _lookupTypeInfo("definition", "urn:tooling.soap.sforce.com","definition","urn:tooling.soap.sforce.com","AttributeDefinition",0,-1,true), com.sforce.soap.tooling.AttributeDefinition[].class));
      }
    }

    private void writeFieldDefinition(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("definition", "urn:tooling.soap.sforce.com","definition","urn:tooling.soap.sforce.com","AttributeDefinition",0,-1,true), definition, definition__is_set);
    }

    /**
     * element : extent of type {urn:tooling.soap.sforce.com}HeapAddress
     * java type: com.sforce.soap.tooling.HeapAddress[]
     */
    private boolean extent__is_set = false;

    private com.sforce.soap.tooling.HeapAddress[] extent = new com.sforce.soap.tooling.HeapAddress[0];

    public com.sforce.soap.tooling.HeapAddress[] getExtent() {
      return extent;
    }

    public void setExtent(com.sforce.soap.tooling.HeapAddress[] extent) {
      this.extent = extent;
      extent__is_set = true;
    }

    protected void setExtent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("extent", "urn:tooling.soap.sforce.com","extent","urn:tooling.soap.sforce.com","HeapAddress",0,-1,true))) {
        setExtent((com.sforce.soap.tooling.HeapAddress[])__typeMapper.readObject(__in, _lookupTypeInfo("extent", "urn:tooling.soap.sforce.com","extent","urn:tooling.soap.sforce.com","HeapAddress",0,-1,true), com.sforce.soap.tooling.HeapAddress[].class));
      }
    }

    private void writeFieldExtent(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("extent", "urn:tooling.soap.sforce.com","extent","urn:tooling.soap.sforce.com","HeapAddress",0,-1,true), extent, extent__is_set);
    }

    /**
     * element : totalSize of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private boolean totalSize__is_set = false;

    private int totalSize;

    public int getTotalSize() {
      return totalSize;
    }

    public void setTotalSize(int totalSize) {
      this.totalSize = totalSize;
      totalSize__is_set = true;
    }

    protected void setTotalSize(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("totalSize", "urn:tooling.soap.sforce.com","totalSize","http://www.w3.org/2001/XMLSchema","int",1,1,true))) {
        setTotalSize((int)__typeMapper.readInt(__in, _lookupTypeInfo("totalSize", "urn:tooling.soap.sforce.com","totalSize","http://www.w3.org/2001/XMLSchema","int",1,1,true), int.class));
      }
    }

    private void writeFieldTotalSize(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("totalSize", "urn:tooling.soap.sforce.com","totalSize","http://www.w3.org/2001/XMLSchema","int",1,1,true), totalSize, totalSize__is_set);
    }

    /**
     * element : typeName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean typeName__is_set = false;

    private java.lang.String typeName;

    public java.lang.String getTypeName() {
      return typeName;
    }

    public void setTypeName(java.lang.String typeName) {
      this.typeName = typeName;
      typeName__is_set = true;
    }

    protected void setTypeName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("typeName", "urn:tooling.soap.sforce.com","typeName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setTypeName(__typeMapper.readString(__in, _lookupTypeInfo("typeName", "urn:tooling.soap.sforce.com","typeName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldTypeName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("typeName", "urn:tooling.soap.sforce.com","typeName","http://www.w3.org/2001/XMLSchema","string",1,1,true), typeName, typeName__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[TypeExtent ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldCollectionType(__out, __typeMapper);
      writeFieldCount(__out, __typeMapper);
      writeFieldDefinition(__out, __typeMapper);
      writeFieldExtent(__out, __typeMapper);
      writeFieldTotalSize(__out, __typeMapper);
      writeFieldTypeName(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setCollectionType(__in, __typeMapper);
      setCount(__in, __typeMapper);
      setDefinition(__in, __typeMapper);
      setExtent(__in, __typeMapper);
      setTotalSize(__in, __typeMapper);
      setTypeName(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "collectionType", collectionType);
      toStringHelper(sb, "count", count);
      toStringHelper(sb, "definition", definition);
      toStringHelper(sb, "extent", extent);
      toStringHelper(sb, "totalSize", totalSize);
      toStringHelper(sb, "typeName", typeName);
    }


}
