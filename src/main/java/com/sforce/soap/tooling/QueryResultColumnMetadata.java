package com.sforce.soap.tooling;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class QueryResultColumnMetadata implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public QueryResultColumnMetadata() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : aggregate of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean aggregate__is_set = false;

    private boolean aggregate;

    public boolean getAggregate() {
      return aggregate;
    }

    public boolean isAggregate() {
      return aggregate;
    }

    public void setAggregate(boolean aggregate) {
      this.aggregate = aggregate;
      aggregate__is_set = true;
    }

    protected void setAggregate(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("aggregate", "urn:tooling.soap.sforce.com","aggregate","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setAggregate(__typeMapper.readBoolean(__in, _lookupTypeInfo("aggregate", "urn:tooling.soap.sforce.com","aggregate","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldAggregate(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("aggregate", "urn:tooling.soap.sforce.com","aggregate","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), aggregate, aggregate__is_set);
    }

    /**
     * element : apexType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean apexType__is_set = false;

    private java.lang.String apexType;

    public java.lang.String getApexType() {
      return apexType;
    }

    public void setApexType(java.lang.String apexType) {
      this.apexType = apexType;
      apexType__is_set = true;
    }

    protected void setApexType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("apexType", "urn:tooling.soap.sforce.com","apexType","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setApexType(__typeMapper.readString(__in, _lookupTypeInfo("apexType", "urn:tooling.soap.sforce.com","apexType","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldApexType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("apexType", "urn:tooling.soap.sforce.com","apexType","http://www.w3.org/2001/XMLSchema","string",1,1,true), apexType, apexType__is_set);
    }

    /**
     * element : booleanType of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean booleanType__is_set = false;

    private boolean booleanType;

    public boolean getBooleanType() {
      return booleanType;
    }

    public boolean isBooleanType() {
      return booleanType;
    }

    public void setBooleanType(boolean booleanType) {
      this.booleanType = booleanType;
      booleanType__is_set = true;
    }

    protected void setBooleanType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("booleanType", "urn:tooling.soap.sforce.com","booleanType","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setBooleanType(__typeMapper.readBoolean(__in, _lookupTypeInfo("booleanType", "urn:tooling.soap.sforce.com","booleanType","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldBooleanType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("booleanType", "urn:tooling.soap.sforce.com","booleanType","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), booleanType, booleanType__is_set);
    }

    /**
     * element : columnName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean columnName__is_set = false;

    private java.lang.String columnName;

    public java.lang.String getColumnName() {
      return columnName;
    }

    public void setColumnName(java.lang.String columnName) {
      this.columnName = columnName;
      columnName__is_set = true;
    }

    protected void setColumnName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("columnName", "urn:tooling.soap.sforce.com","columnName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setColumnName(__typeMapper.readString(__in, _lookupTypeInfo("columnName", "urn:tooling.soap.sforce.com","columnName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldColumnName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("columnName", "urn:tooling.soap.sforce.com","columnName","http://www.w3.org/2001/XMLSchema","string",1,1,true), columnName, columnName__is_set);
    }

    /**
     * element : custom of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean custom__is_set = false;

    private boolean custom;

    public boolean getCustom() {
      return custom;
    }

    public boolean isCustom() {
      return custom;
    }

    public void setCustom(boolean custom) {
      this.custom = custom;
      custom__is_set = true;
    }

    protected void setCustom(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("custom", "urn:tooling.soap.sforce.com","custom","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setCustom(__typeMapper.readBoolean(__in, _lookupTypeInfo("custom", "urn:tooling.soap.sforce.com","custom","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldCustom(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("custom", "urn:tooling.soap.sforce.com","custom","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), custom, custom__is_set);
    }

    /**
     * element : displayName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean displayName__is_set = false;

    private java.lang.String displayName;

    public java.lang.String getDisplayName() {
      return displayName;
    }

    public void setDisplayName(java.lang.String displayName) {
      this.displayName = displayName;
      displayName__is_set = true;
    }

    protected void setDisplayName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("displayName", "urn:tooling.soap.sforce.com","displayName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setDisplayName(__typeMapper.readString(__in, _lookupTypeInfo("displayName", "urn:tooling.soap.sforce.com","displayName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldDisplayName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("displayName", "urn:tooling.soap.sforce.com","displayName","http://www.w3.org/2001/XMLSchema","string",1,1,true), displayName, displayName__is_set);
    }

    /**
     * element : foreignKeyName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean foreignKeyName__is_set = false;

    private java.lang.String foreignKeyName;

    public java.lang.String getForeignKeyName() {
      return foreignKeyName;
    }

    public void setForeignKeyName(java.lang.String foreignKeyName) {
      this.foreignKeyName = foreignKeyName;
      foreignKeyName__is_set = true;
    }

    protected void setForeignKeyName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("foreignKeyName", "urn:tooling.soap.sforce.com","foreignKeyName","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setForeignKeyName(__typeMapper.readString(__in, _lookupTypeInfo("foreignKeyName", "urn:tooling.soap.sforce.com","foreignKeyName","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldForeignKeyName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("foreignKeyName", "urn:tooling.soap.sforce.com","foreignKeyName","http://www.w3.org/2001/XMLSchema","string",1,1,true), foreignKeyName, foreignKeyName__is_set);
    }

    /**
     * element : insertable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean insertable__is_set = false;

    private boolean insertable;

    public boolean getInsertable() {
      return insertable;
    }

    public boolean isInsertable() {
      return insertable;
    }

    public void setInsertable(boolean insertable) {
      this.insertable = insertable;
      insertable__is_set = true;
    }

    protected void setInsertable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("insertable", "urn:tooling.soap.sforce.com","insertable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setInsertable(__typeMapper.readBoolean(__in, _lookupTypeInfo("insertable", "urn:tooling.soap.sforce.com","insertable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldInsertable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("insertable", "urn:tooling.soap.sforce.com","insertable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), insertable, insertable__is_set);
    }

    /**
     * element : joinColumns of type {urn:tooling.soap.sforce.com}QueryResultColumnMetadata
     * java type: com.sforce.soap.tooling.QueryResultColumnMetadata[]
     */
    private boolean joinColumns__is_set = false;

    private com.sforce.soap.tooling.QueryResultColumnMetadata[] joinColumns = new com.sforce.soap.tooling.QueryResultColumnMetadata[0];

    public com.sforce.soap.tooling.QueryResultColumnMetadata[] getJoinColumns() {
      return joinColumns;
    }

    public void setJoinColumns(com.sforce.soap.tooling.QueryResultColumnMetadata[] joinColumns) {
      this.joinColumns = joinColumns;
      joinColumns__is_set = true;
    }

    protected void setJoinColumns(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, _lookupTypeInfo("joinColumns", "urn:tooling.soap.sforce.com","joinColumns","urn:tooling.soap.sforce.com","QueryResultColumnMetadata",0,-1,true))) {
        setJoinColumns((com.sforce.soap.tooling.QueryResultColumnMetadata[])__typeMapper.readObject(__in, _lookupTypeInfo("joinColumns", "urn:tooling.soap.sforce.com","joinColumns","urn:tooling.soap.sforce.com","QueryResultColumnMetadata",0,-1,true), com.sforce.soap.tooling.QueryResultColumnMetadata[].class));
      }
    }

    private void writeFieldJoinColumns(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("joinColumns", "urn:tooling.soap.sforce.com","joinColumns","urn:tooling.soap.sforce.com","QueryResultColumnMetadata",0,-1,true), joinColumns, joinColumns__is_set);
    }

    /**
     * element : numberType of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean numberType__is_set = false;

    private boolean numberType;

    public boolean getNumberType() {
      return numberType;
    }

    public boolean isNumberType() {
      return numberType;
    }

    public void setNumberType(boolean numberType) {
      this.numberType = numberType;
      numberType__is_set = true;
    }

    protected void setNumberType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("numberType", "urn:tooling.soap.sforce.com","numberType","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setNumberType(__typeMapper.readBoolean(__in, _lookupTypeInfo("numberType", "urn:tooling.soap.sforce.com","numberType","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldNumberType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("numberType", "urn:tooling.soap.sforce.com","numberType","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), numberType, numberType__is_set);
    }

    /**
     * element : textType of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean textType__is_set = false;

    private boolean textType;

    public boolean getTextType() {
      return textType;
    }

    public boolean isTextType() {
      return textType;
    }

    public void setTextType(boolean textType) {
      this.textType = textType;
      textType__is_set = true;
    }

    protected void setTextType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("textType", "urn:tooling.soap.sforce.com","textType","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setTextType(__typeMapper.readBoolean(__in, _lookupTypeInfo("textType", "urn:tooling.soap.sforce.com","textType","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldTextType(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("textType", "urn:tooling.soap.sforce.com","textType","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), textType, textType__is_set);
    }

    /**
     * element : updatable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean updatable__is_set = false;

    private boolean updatable;

    public boolean getUpdatable() {
      return updatable;
    }

    public boolean isUpdatable() {
      return updatable;
    }

    public void setUpdatable(boolean updatable) {
      this.updatable = updatable;
      updatable__is_set = true;
    }

    protected void setUpdatable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("updatable", "urn:tooling.soap.sforce.com","updatable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setUpdatable(__typeMapper.readBoolean(__in, _lookupTypeInfo("updatable", "urn:tooling.soap.sforce.com","updatable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldUpdatable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("updatable", "urn:tooling.soap.sforce.com","updatable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), updatable, updatable__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[QueryResultColumnMetadata ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldAggregate(__out, __typeMapper);
      writeFieldApexType(__out, __typeMapper);
      writeFieldBooleanType(__out, __typeMapper);
      writeFieldColumnName(__out, __typeMapper);
      writeFieldCustom(__out, __typeMapper);
      writeFieldDisplayName(__out, __typeMapper);
      writeFieldForeignKeyName(__out, __typeMapper);
      writeFieldInsertable(__out, __typeMapper);
      writeFieldJoinColumns(__out, __typeMapper);
      writeFieldNumberType(__out, __typeMapper);
      writeFieldTextType(__out, __typeMapper);
      writeFieldUpdatable(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setAggregate(__in, __typeMapper);
      setApexType(__in, __typeMapper);
      setBooleanType(__in, __typeMapper);
      setColumnName(__in, __typeMapper);
      setCustom(__in, __typeMapper);
      setDisplayName(__in, __typeMapper);
      setForeignKeyName(__in, __typeMapper);
      setInsertable(__in, __typeMapper);
      setJoinColumns(__in, __typeMapper);
      setNumberType(__in, __typeMapper);
      setTextType(__in, __typeMapper);
      setUpdatable(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "aggregate", aggregate);
      toStringHelper(sb, "apexType", apexType);
      toStringHelper(sb, "booleanType", booleanType);
      toStringHelper(sb, "columnName", columnName);
      toStringHelper(sb, "custom", custom);
      toStringHelper(sb, "displayName", displayName);
      toStringHelper(sb, "foreignKeyName", foreignKeyName);
      toStringHelper(sb, "insertable", insertable);
      toStringHelper(sb, "joinColumns", joinColumns);
      toStringHelper(sb, "numberType", numberType);
      toStringHelper(sb, "textType", textType);
      toStringHelper(sb, "updatable", updatable);
    }


}
