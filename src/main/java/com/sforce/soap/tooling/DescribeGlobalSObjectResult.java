package com.sforce.soap.tooling;

/**
 * This is a generated class for the SObject Enterprise API.
 * Do not edit this file, as your changes will be lost.
 */
public class DescribeGlobalSObjectResult implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public DescribeGlobalSObjectResult() {}

    /* Cache the typeInfo instead of declaring static fields throughout*/
    private transient java.util.Map<String, com.sforce.ws.bind.TypeInfo> typeInfoCache = new java.util.HashMap<String, com.sforce.ws.bind.TypeInfo>();
    private com.sforce.ws.bind.TypeInfo _lookupTypeInfo(String fieldName, String namespace, String name, String typeNS, String type, int minOcc, int maxOcc, boolean elementForm) {
      com.sforce.ws.bind.TypeInfo typeInfo = typeInfoCache.get(fieldName);
      if (typeInfo == null) {
        typeInfo = new com.sforce.ws.bind.TypeInfo(namespace, name, typeNS, type, minOcc, maxOcc, elementForm);
        typeInfoCache.put(fieldName, typeInfo);
      }
      return typeInfo;
    }

    /**
     * element : activateable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean activateable__is_set = false;

    private boolean activateable;

    public boolean getActivateable() {
      return activateable;
    }

    public boolean isActivateable() {
      return activateable;
    }

    public void setActivateable(boolean activateable) {
      this.activateable = activateable;
      activateable__is_set = true;
    }

    protected void setActivateable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("activateable", "urn:tooling.soap.sforce.com","activateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setActivateable(__typeMapper.readBoolean(__in, _lookupTypeInfo("activateable", "urn:tooling.soap.sforce.com","activateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldActivateable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("activateable", "urn:tooling.soap.sforce.com","activateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), activateable, activateable__is_set);
    }

    /**
     * element : createable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean createable__is_set = false;

    private boolean createable;

    public boolean getCreateable() {
      return createable;
    }

    public boolean isCreateable() {
      return createable;
    }

    public void setCreateable(boolean createable) {
      this.createable = createable;
      createable__is_set = true;
    }

    protected void setCreateable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("createable", "urn:tooling.soap.sforce.com","createable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setCreateable(__typeMapper.readBoolean(__in, _lookupTypeInfo("createable", "urn:tooling.soap.sforce.com","createable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldCreateable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("createable", "urn:tooling.soap.sforce.com","createable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), createable, createable__is_set);
    }

    /**
     * element : custom of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean custom__is_set = false;

    private boolean custom;

    public boolean getCustom() {
      return custom;
    }

    public boolean isCustom() {
      return custom;
    }

    public void setCustom(boolean custom) {
      this.custom = custom;
      custom__is_set = true;
    }

    protected void setCustom(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("custom", "urn:tooling.soap.sforce.com","custom","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setCustom(__typeMapper.readBoolean(__in, _lookupTypeInfo("custom", "urn:tooling.soap.sforce.com","custom","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldCustom(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("custom", "urn:tooling.soap.sforce.com","custom","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), custom, custom__is_set);
    }

    /**
     * element : customSetting of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean customSetting__is_set = false;

    private boolean customSetting;

    public boolean getCustomSetting() {
      return customSetting;
    }

    public boolean isCustomSetting() {
      return customSetting;
    }

    public void setCustomSetting(boolean customSetting) {
      this.customSetting = customSetting;
      customSetting__is_set = true;
    }

    protected void setCustomSetting(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("customSetting", "urn:tooling.soap.sforce.com","customSetting","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setCustomSetting(__typeMapper.readBoolean(__in, _lookupTypeInfo("customSetting", "urn:tooling.soap.sforce.com","customSetting","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldCustomSetting(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("customSetting", "urn:tooling.soap.sforce.com","customSetting","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), customSetting, customSetting__is_set);
    }

    /**
     * element : deletable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean deletable__is_set = false;

    private boolean deletable;

    public boolean getDeletable() {
      return deletable;
    }

    public boolean isDeletable() {
      return deletable;
    }

    public void setDeletable(boolean deletable) {
      this.deletable = deletable;
      deletable__is_set = true;
    }

    protected void setDeletable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("deletable", "urn:tooling.soap.sforce.com","deletable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setDeletable(__typeMapper.readBoolean(__in, _lookupTypeInfo("deletable", "urn:tooling.soap.sforce.com","deletable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldDeletable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("deletable", "urn:tooling.soap.sforce.com","deletable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), deletable, deletable__is_set);
    }

    /**
     * element : deprecatedAndHidden of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean deprecatedAndHidden__is_set = false;

    private boolean deprecatedAndHidden;

    public boolean getDeprecatedAndHidden() {
      return deprecatedAndHidden;
    }

    public boolean isDeprecatedAndHidden() {
      return deprecatedAndHidden;
    }

    public void setDeprecatedAndHidden(boolean deprecatedAndHidden) {
      this.deprecatedAndHidden = deprecatedAndHidden;
      deprecatedAndHidden__is_set = true;
    }

    protected void setDeprecatedAndHidden(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("deprecatedAndHidden", "urn:tooling.soap.sforce.com","deprecatedAndHidden","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setDeprecatedAndHidden(__typeMapper.readBoolean(__in, _lookupTypeInfo("deprecatedAndHidden", "urn:tooling.soap.sforce.com","deprecatedAndHidden","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldDeprecatedAndHidden(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("deprecatedAndHidden", "urn:tooling.soap.sforce.com","deprecatedAndHidden","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), deprecatedAndHidden, deprecatedAndHidden__is_set);
    }

    /**
     * element : feedEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean feedEnabled__is_set = false;

    private boolean feedEnabled;

    public boolean getFeedEnabled() {
      return feedEnabled;
    }

    public boolean isFeedEnabled() {
      return feedEnabled;
    }

    public void setFeedEnabled(boolean feedEnabled) {
      this.feedEnabled = feedEnabled;
      feedEnabled__is_set = true;
    }

    protected void setFeedEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("feedEnabled", "urn:tooling.soap.sforce.com","feedEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setFeedEnabled(__typeMapper.readBoolean(__in, _lookupTypeInfo("feedEnabled", "urn:tooling.soap.sforce.com","feedEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldFeedEnabled(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("feedEnabled", "urn:tooling.soap.sforce.com","feedEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), feedEnabled, feedEnabled__is_set);
    }

    /**
     * element : hasSubtypes of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean hasSubtypes__is_set = false;

    private boolean hasSubtypes;

    public boolean getHasSubtypes() {
      return hasSubtypes;
    }

    public boolean isHasSubtypes() {
      return hasSubtypes;
    }

    public void setHasSubtypes(boolean hasSubtypes) {
      this.hasSubtypes = hasSubtypes;
      hasSubtypes__is_set = true;
    }

    protected void setHasSubtypes(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("hasSubtypes", "urn:tooling.soap.sforce.com","hasSubtypes","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setHasSubtypes(__typeMapper.readBoolean(__in, _lookupTypeInfo("hasSubtypes", "urn:tooling.soap.sforce.com","hasSubtypes","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldHasSubtypes(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("hasSubtypes", "urn:tooling.soap.sforce.com","hasSubtypes","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), hasSubtypes, hasSubtypes__is_set);
    }

    /**
     * element : isSubtype of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean isSubtype__is_set = false;

    private boolean isSubtype;

    public boolean getIsSubtype() {
      return isSubtype;
    }

    public boolean isIsSubtype() {
      return isSubtype;
    }

    public void setIsSubtype(boolean isSubtype) {
      this.isSubtype = isSubtype;
      isSubtype__is_set = true;
    }

    protected void setIsSubtype(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("isSubtype", "urn:tooling.soap.sforce.com","isSubtype","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setIsSubtype(__typeMapper.readBoolean(__in, _lookupTypeInfo("isSubtype", "urn:tooling.soap.sforce.com","isSubtype","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldIsSubtype(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("isSubtype", "urn:tooling.soap.sforce.com","isSubtype","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), isSubtype, isSubtype__is_set);
    }

    /**
     * element : keyPrefix of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean keyPrefix__is_set = false;

    private java.lang.String keyPrefix;

    public java.lang.String getKeyPrefix() {
      return keyPrefix;
    }

    public void setKeyPrefix(java.lang.String keyPrefix) {
      this.keyPrefix = keyPrefix;
      keyPrefix__is_set = true;
    }

    protected void setKeyPrefix(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("keyPrefix", "urn:tooling.soap.sforce.com","keyPrefix","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setKeyPrefix(__typeMapper.readString(__in, _lookupTypeInfo("keyPrefix", "urn:tooling.soap.sforce.com","keyPrefix","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldKeyPrefix(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("keyPrefix", "urn:tooling.soap.sforce.com","keyPrefix","http://www.w3.org/2001/XMLSchema","string",1,1,true), keyPrefix, keyPrefix__is_set);
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("label", "urn:tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setLabel(__typeMapper.readString(__in, _lookupTypeInfo("label", "urn:tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLabel(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("label", "urn:tooling.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true), label, label__is_set);
    }

    /**
     * element : labelPlural of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean labelPlural__is_set = false;

    private java.lang.String labelPlural;

    public java.lang.String getLabelPlural() {
      return labelPlural;
    }

    public void setLabelPlural(java.lang.String labelPlural) {
      this.labelPlural = labelPlural;
      labelPlural__is_set = true;
    }

    protected void setLabelPlural(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("labelPlural", "urn:tooling.soap.sforce.com","labelPlural","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setLabelPlural(__typeMapper.readString(__in, _lookupTypeInfo("labelPlural", "urn:tooling.soap.sforce.com","labelPlural","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldLabelPlural(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("labelPlural", "urn:tooling.soap.sforce.com","labelPlural","http://www.w3.org/2001/XMLSchema","string",1,1,true), labelPlural, labelPlural__is_set);
    }

    /**
     * element : layoutable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean layoutable__is_set = false;

    private boolean layoutable;

    public boolean getLayoutable() {
      return layoutable;
    }

    public boolean isLayoutable() {
      return layoutable;
    }

    public void setLayoutable(boolean layoutable) {
      this.layoutable = layoutable;
      layoutable__is_set = true;
    }

    protected void setLayoutable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("layoutable", "urn:tooling.soap.sforce.com","layoutable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setLayoutable(__typeMapper.readBoolean(__in, _lookupTypeInfo("layoutable", "urn:tooling.soap.sforce.com","layoutable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldLayoutable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("layoutable", "urn:tooling.soap.sforce.com","layoutable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), layoutable, layoutable__is_set);
    }

    /**
     * element : mergeable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean mergeable__is_set = false;

    private boolean mergeable;

    public boolean getMergeable() {
      return mergeable;
    }

    public boolean isMergeable() {
      return mergeable;
    }

    public void setMergeable(boolean mergeable) {
      this.mergeable = mergeable;
      mergeable__is_set = true;
    }

    protected void setMergeable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("mergeable", "urn:tooling.soap.sforce.com","mergeable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setMergeable(__typeMapper.readBoolean(__in, _lookupTypeInfo("mergeable", "urn:tooling.soap.sforce.com","mergeable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldMergeable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("mergeable", "urn:tooling.soap.sforce.com","mergeable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), mergeable, mergeable__is_set);
    }

    /**
     * element : mruEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean mruEnabled__is_set = false;

    private boolean mruEnabled;

    public boolean getMruEnabled() {
      return mruEnabled;
    }

    public boolean isMruEnabled() {
      return mruEnabled;
    }

    public void setMruEnabled(boolean mruEnabled) {
      this.mruEnabled = mruEnabled;
      mruEnabled__is_set = true;
    }

    protected void setMruEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("mruEnabled", "urn:tooling.soap.sforce.com","mruEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setMruEnabled(__typeMapper.readBoolean(__in, _lookupTypeInfo("mruEnabled", "urn:tooling.soap.sforce.com","mruEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldMruEnabled(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("mruEnabled", "urn:tooling.soap.sforce.com","mruEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), mruEnabled, mruEnabled__is_set);
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private boolean name__is_set = false;

    private java.lang.String name;

    public java.lang.String getName() {
      return name;
    }

    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true))) {
        setName(__typeMapper.readString(__in, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), java.lang.String.class));
      }
    }

    private void writeFieldName(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("name", "urn:tooling.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true), name, name__is_set);
    }

    /**
     * element : queryable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean queryable__is_set = false;

    private boolean queryable;

    public boolean getQueryable() {
      return queryable;
    }

    public boolean isQueryable() {
      return queryable;
    }

    public void setQueryable(boolean queryable) {
      this.queryable = queryable;
      queryable__is_set = true;
    }

    protected void setQueryable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("queryable", "urn:tooling.soap.sforce.com","queryable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setQueryable(__typeMapper.readBoolean(__in, _lookupTypeInfo("queryable", "urn:tooling.soap.sforce.com","queryable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldQueryable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("queryable", "urn:tooling.soap.sforce.com","queryable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), queryable, queryable__is_set);
    }

    /**
     * element : replicateable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean replicateable__is_set = false;

    private boolean replicateable;

    public boolean getReplicateable() {
      return replicateable;
    }

    public boolean isReplicateable() {
      return replicateable;
    }

    public void setReplicateable(boolean replicateable) {
      this.replicateable = replicateable;
      replicateable__is_set = true;
    }

    protected void setReplicateable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("replicateable", "urn:tooling.soap.sforce.com","replicateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setReplicateable(__typeMapper.readBoolean(__in, _lookupTypeInfo("replicateable", "urn:tooling.soap.sforce.com","replicateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldReplicateable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("replicateable", "urn:tooling.soap.sforce.com","replicateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), replicateable, replicateable__is_set);
    }

    /**
     * element : retrieveable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean retrieveable__is_set = false;

    private boolean retrieveable;

    public boolean getRetrieveable() {
      return retrieveable;
    }

    public boolean isRetrieveable() {
      return retrieveable;
    }

    public void setRetrieveable(boolean retrieveable) {
      this.retrieveable = retrieveable;
      retrieveable__is_set = true;
    }

    protected void setRetrieveable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("retrieveable", "urn:tooling.soap.sforce.com","retrieveable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setRetrieveable(__typeMapper.readBoolean(__in, _lookupTypeInfo("retrieveable", "urn:tooling.soap.sforce.com","retrieveable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldRetrieveable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("retrieveable", "urn:tooling.soap.sforce.com","retrieveable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), retrieveable, retrieveable__is_set);
    }

    /**
     * element : searchable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean searchable__is_set = false;

    private boolean searchable;

    public boolean getSearchable() {
      return searchable;
    }

    public boolean isSearchable() {
      return searchable;
    }

    public void setSearchable(boolean searchable) {
      this.searchable = searchable;
      searchable__is_set = true;
    }

    protected void setSearchable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("searchable", "urn:tooling.soap.sforce.com","searchable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setSearchable(__typeMapper.readBoolean(__in, _lookupTypeInfo("searchable", "urn:tooling.soap.sforce.com","searchable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldSearchable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("searchable", "urn:tooling.soap.sforce.com","searchable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), searchable, searchable__is_set);
    }

    /**
     * element : triggerable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean triggerable__is_set = false;

    private boolean triggerable;

    public boolean getTriggerable() {
      return triggerable;
    }

    public boolean isTriggerable() {
      return triggerable;
    }

    public void setTriggerable(boolean triggerable) {
      this.triggerable = triggerable;
      triggerable__is_set = true;
    }

    protected void setTriggerable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("triggerable", "urn:tooling.soap.sforce.com","triggerable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setTriggerable(__typeMapper.readBoolean(__in, _lookupTypeInfo("triggerable", "urn:tooling.soap.sforce.com","triggerable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldTriggerable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("triggerable", "urn:tooling.soap.sforce.com","triggerable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), triggerable, triggerable__is_set);
    }

    /**
     * element : undeletable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean undeletable__is_set = false;

    private boolean undeletable;

    public boolean getUndeletable() {
      return undeletable;
    }

    public boolean isUndeletable() {
      return undeletable;
    }

    public void setUndeletable(boolean undeletable) {
      this.undeletable = undeletable;
      undeletable__is_set = true;
    }

    protected void setUndeletable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("undeletable", "urn:tooling.soap.sforce.com","undeletable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setUndeletable(__typeMapper.readBoolean(__in, _lookupTypeInfo("undeletable", "urn:tooling.soap.sforce.com","undeletable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldUndeletable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("undeletable", "urn:tooling.soap.sforce.com","undeletable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), undeletable, undeletable__is_set);
    }

    /**
     * element : updateable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private boolean updateable__is_set = false;

    private boolean updateable;

    public boolean getUpdateable() {
      return updateable;
    }

    public boolean isUpdateable() {
      return updateable;
    }

    public void setUpdateable(boolean updateable) {
      this.updateable = updateable;
      updateable__is_set = true;
    }

    protected void setUpdateable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _lookupTypeInfo("updateable", "urn:tooling.soap.sforce.com","updateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true))) {
        setUpdateable(__typeMapper.readBoolean(__in, _lookupTypeInfo("updateable", "urn:tooling.soap.sforce.com","updateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), boolean.class));
      }
    }

    private void writeFieldUpdateable(com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      __typeMapper.writeObject(__out, _lookupTypeInfo("updateable", "urn:tooling.soap.sforce.com","updateable","http://www.w3.org/2001/XMLSchema","boolean",1,1,true), updateable, updateable__is_set);
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       writeFields1(__out, __typeMapper);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        loadFields1(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeGlobalSObjectResult ");
      toString1(sb);

      sb.append("]\n");
      return sb.toString();
    }

    private void toStringHelper(StringBuilder sb, String name, Object value) {
      sb.append(' ').append(name).append("='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
    }

    private void writeFields1(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException {
      writeFieldActivateable(__out, __typeMapper);
      writeFieldCreateable(__out, __typeMapper);
      writeFieldCustom(__out, __typeMapper);
      writeFieldCustomSetting(__out, __typeMapper);
      writeFieldDeletable(__out, __typeMapper);
      writeFieldDeprecatedAndHidden(__out, __typeMapper);
      writeFieldFeedEnabled(__out, __typeMapper);
      writeFieldHasSubtypes(__out, __typeMapper);
      writeFieldIsSubtype(__out, __typeMapper);
      writeFieldKeyPrefix(__out, __typeMapper);
      writeFieldLabel(__out, __typeMapper);
      writeFieldLabelPlural(__out, __typeMapper);
      writeFieldLayoutable(__out, __typeMapper);
      writeFieldMergeable(__out, __typeMapper);
      writeFieldMruEnabled(__out, __typeMapper);
      writeFieldName(__out, __typeMapper);
      writeFieldQueryable(__out, __typeMapper);
      writeFieldReplicateable(__out, __typeMapper);
      writeFieldRetrieveable(__out, __typeMapper);
      writeFieldSearchable(__out, __typeMapper);
      writeFieldTriggerable(__out, __typeMapper);
      writeFieldUndeletable(__out, __typeMapper);
      writeFieldUpdateable(__out, __typeMapper);
    }

    private void loadFields1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      setActivateable(__in, __typeMapper);
      setCreateable(__in, __typeMapper);
      setCustom(__in, __typeMapper);
      setCustomSetting(__in, __typeMapper);
      setDeletable(__in, __typeMapper);
      setDeprecatedAndHidden(__in, __typeMapper);
      setFeedEnabled(__in, __typeMapper);
      setHasSubtypes(__in, __typeMapper);
      setIsSubtype(__in, __typeMapper);
      setKeyPrefix(__in, __typeMapper);
      setLabel(__in, __typeMapper);
      setLabelPlural(__in, __typeMapper);
      setLayoutable(__in, __typeMapper);
      setMergeable(__in, __typeMapper);
      setMruEnabled(__in, __typeMapper);
      setName(__in, __typeMapper);
      setQueryable(__in, __typeMapper);
      setReplicateable(__in, __typeMapper);
      setRetrieveable(__in, __typeMapper);
      setSearchable(__in, __typeMapper);
      setTriggerable(__in, __typeMapper);
      setUndeletable(__in, __typeMapper);
      setUpdateable(__in, __typeMapper);
    }

    private void toString1(StringBuilder sb) {
      toStringHelper(sb, "activateable", activateable);
      toStringHelper(sb, "createable", createable);
      toStringHelper(sb, "custom", custom);
      toStringHelper(sb, "customSetting", customSetting);
      toStringHelper(sb, "deletable", deletable);
      toStringHelper(sb, "deprecatedAndHidden", deprecatedAndHidden);
      toStringHelper(sb, "feedEnabled", feedEnabled);
      toStringHelper(sb, "hasSubtypes", hasSubtypes);
      toStringHelper(sb, "isSubtype", isSubtype);
      toStringHelper(sb, "keyPrefix", keyPrefix);
      toStringHelper(sb, "label", label);
      toStringHelper(sb, "labelPlural", labelPlural);
      toStringHelper(sb, "layoutable", layoutable);
      toStringHelper(sb, "mergeable", mergeable);
      toStringHelper(sb, "mruEnabled", mruEnabled);
      toStringHelper(sb, "name", name);
      toStringHelper(sb, "queryable", queryable);
      toStringHelper(sb, "replicateable", replicateable);
      toStringHelper(sb, "retrieveable", retrieveable);
      toStringHelper(sb, "searchable", searchable);
      toStringHelper(sb, "triggerable", triggerable);
      toStringHelper(sb, "undeletable", undeletable);
      toStringHelper(sb, "updateable", updateable);
    }


}
