<!-- 
    Copyright (c) 2016, Salesforce.org
    All rights reserved.
    
    Redistribution and use in source and binary forms, with or without
    modification, are permitted provided that the following conditions are met:
    
    * Redistributions of source code must retain the above copyright
      notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright
      notice, this list of conditions and the following disclaimer in the
      documentation and/or other materials provided with the distribution.
    * Neither the name of Salesforce.org nor the names of
      its contributors may be used to endorse or promote products derived
      from this software without specific prior written permission.
 
    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS 
    FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE 
    COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, 
    INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, 
    BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
    LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
    CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
    LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN 
    ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE 
    POSSIBILITY OF SUCH DAMAGE.
-->  

<apex:component controller="SoqlListView" allowDml="true" >
    <apex:stylesheet value="{!URLFOR($Resource.sfdo213, '/assets/styles/salesforce-lightning-design-system-vf.min.css')}" />
    <style>
        .PagerUI { font-size: 8pt; }
        .SelectedAlphaFilter { background-color:lightblue; }
        .AlphaFilter { 
            text-decoration:none;
            padding: 0 5px; 
        }
    </style>
    
    <script type="text/javascript">
        function CheckAllSLVObj(isChecked) {

            var checkboxes = getElementsByClassName('cbxSLVObj');
            for (var i=0; i<checkboxes.length; i++) {
                checkboxes[i].checked = isChecked;
            }
        }    
    </script>

    <apex:attribute name="pcPageController" type="PageControllerBase" assignTo="{!pageController}" required="true" 
        description="the controller of the page" />

    <apex:outputPanel id="panelData" >
        <div class="PagerUI">
            <table width="100%" >
                <tr>
                    <td style="vertical-align:middle;">
                        <apex:commandLink action="{!setCon.first}" rerender="panelData" status="statusLoad" >{!$Label.labelListViewFirst}</apex:commandlink>
                        <apex:outputText value="&nbsp;|&nbsp;" escape="false" />
                        <apex:commandLink action="{!setCon.previous}" rerender="panelData" status="statusLoad" rendered="{!setCon.HasPrevious}">{!$Label.labelListViewPrevious}</apex:commandlink> 
                        <apex:outputText rendered="{!setCon.HasPrevious}" value="&nbsp;|&nbsp;" escape="false" />
                        <apex:commandLink action="{!setCon.next}" rerender="panelData" status="statusLoad" rendered="{!setCon.HasNext}">{!$Label.labelListViewNext}</apex:commandlink>
                        <apex:outputText rendered="{!setCon.HasNext}" value="&nbsp;|&nbsp;" escape="false" />
                        <apex:commandLink action="{!setCon.last}" rerender="panelData" status="statusLoad" >{!$Label.labelListViewLast}</apex:commandlink>
                        <apex:outputText value="{!$Label.labelListViewPageInfo}" escape="false" >
                            <apex:param value="{!setCon.PageNumber}" />
                            <apex:param value="{!NumberOfPages}" />
                            <apex:param value="{!NumberOfItems}" />
                        </apex:outputText>
                    </td>
                    <td style="vertical-align:middle; text-align:right;" >
                        <apex:repeat value="{!listAlphaFilters}" var="a" > 
                            <apex:commandLink action="{!AlphaFilter}" rerender="panelData" status="statusLoad" styleClass="AlphaFilter {!IF(strAlphaFilter=a,'SelectedAlphaFilter','')}" value="{!a}" >
                                <apex:param assignTo="{!strAlphaFilter}" name="strAlphaFilter" value="{!a}" /> 
                            </apex:commandLink>|
                        </apex:repeat>         
                        <apex:commandLink action="{!AlphaFilter}" rerender="panelData" status="statusLoad" styleClass="AlphaFilter {!IF(strAlphaFilter='%','SelectedAlphaFilter','')}" value="All" >
                            <apex:param assignTo="{!strAlphaFilter}" value="%" /> 
                        </apex:commandLink>&nbsp;
                    </td>
                </tr>
            </table>            
        </div>
        <table style="max-width:100%" class="slds-table slds-table--compact slds-table--bordered slds-no-row-hover" >
            <thead>
                <tr class="slds-text-body--small slds-cell-shrink" style="text-transform: uppercase;">
                    <th scope="col" class="slds-cell-shrink">
                        <input type="checkbox" name="cbxContactAll" id="cbxAll" onchange="CheckAllSLVObj(this.checked);" />
                        <span class="slds-assistive-text">Select All</span>
                    </th>
                    <th scope="col" class="slds-is-sortable">
                        <label class="">
                            <apex:commandLink action="{!SortItem}" rerender="panelData" status="statusLoad" value="{!$ObjectType.Contact.Fields[pageController.strNameField].Label}" >
                                <apex:param assignTo="{!SortItemField}" name="SortItemField" value="{!pageController.strNameField}" />
                                <apex:outputText style="font-size:1.0em;font-weight:bold;font-family:symbol" 
                                    value="{!IF(SortItemField=pageController.strNameField, IF(SortItemAsc, ' ↑' , ' ↓'), '')}" escape="false" />
                            </apex:commandLink>
                        </label>
                        <span class="slds-assistive-text">Sort</span>
                    </th>
                    <apex:repeat value="{!pageController.strFields}" var="f" > 
                        <apex:outputText rendered="{!f != pageController.strNameField}" >
                            <th style="max-width: 10%" class="slds-truncate">
                                <apex:outputText value="{!$ObjectType.Contact.Fields[f].Label}" rendered="{!$ObjectType.Contact.Fields[f].Type == 'multipicklist'}" />
                                <apex:commandLink action="{!SortItem}" rerender="panelData" status="statusLoad" value="{!$ObjectType.Contact.Fields[f].Label}" 
                                    rendered="{!$ObjectType.Contact.Fields[f].Type != 'multipicklist'}" >
                                    <apex:param assignTo="{!SortItemField}" name="SortItemField" value="{!f}" />
                                    <apex:outputText style="font-size:1.0em;font-weight:bold;font-family:symbol" 
                                        value="{!IF(SortItemField=f, IF(SortItemAsc, ' ↑' , ' ↓'), '')}" escape="false" />
                                </apex:commandLink>
                            </th>
                        </apex:outputText> 
                    </apex:repeat>         
                </tr>
            </thead>
            <tbody>
                <apex:repeat value="{!listSLVObj}" var="item" rows="{!cRecordsPerPage}" >
                    <tr class="slds-cell-shrink">
                        <td>
                            <apex:inputCheckbox value="{!item.checked}" styleClass="cbxSLVObj" />
                        </td>
                        <td class="slds-text-body--small">
                            <apex:outputLink value="/{!item.sobj['id']}" >
                                <apex:outputField value="{!item.sobj[pageController.strNameField]}" />
                            </apex:outputLink>
                        </td>
                        <apex:repeat value="{!pageController.strFields}" var="f2" > 
                            <apex:outputText rendered="{!f2 != pageController.strNameField}" >
                                <td class="slds-text-body--small slds-cell-wrap">
                                    <apex:outputField value="{!item.sobj[f2]}" />
                                </td>
                            </apex:outputText>
                        </apex:repeat>
                    </tr>
                </apex:repeat>
           </tbody>
        </table>
        <div class="PagerUI">
            <apex:commandLink action="{!setCon.first}" rerender="panelData" status="statusLoad" >{!$Label.labelListViewFirst}</apex:commandlink>
            <apex:outputText value="&nbsp;|&nbsp;" escape="false"/>
            <apex:commandLink action="{!setCon.previous}" rerender="panelData" status="statusLoad" rendered="{!setCon.HasPrevious}">{!$Label.labelListViewPrevious}</apex:commandlink> 
            <apex:outputText rendered="{!setCon.HasPrevious}" value="&nbsp;|&nbsp;" escape="false" />
            <apex:commandLink action="{!setCon.next}" rerender="panelData" status="statusLoad" rendered="{!setCon.HasNext}">{!$Label.labelListViewNext}</apex:commandlink>
            <apex:outputText rendered="{!setCon.HasNext}" value="&nbsp;|&nbsp;" escape="false" />
            <apex:commandLink action="{!setCon.last}" rerender="panelData" status="statusLoad" >{!$Label.labelListViewLast}</apex:commandlink>
            <apex:outputText value="{!$Label.labelListViewPageInfo}" escape="false" >
                <apex:param value="{!setCon.PageNumber}" />
                <apex:param value="{!NumberOfPages}" />
                <apex:param value="{!NumberOfItems}" />
            </apex:outputText>&nbsp;&nbsp;
            <apex:commandLink action="{!showMoreRecordsPerPage}" rerender="panelData" status="statusLoad" >{!$Label.labelShowMore}</apex:commandlink>                   
        </div>
    </apex:outputPanel>
</apex:component>